<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>coderetreat on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/tags/coderetreat/</link>
    <description>Recent content in coderetreat on Ramblings of a cloud engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 30 Sep 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://skarlso.github.io/tags/coderetreat/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Coderetreat London</title>
      <link>https://skarlso.github.io/2012/09/30/89/</link>
      <pubDate>Sun, 30 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2012/09/30/89/</guid>
      <description>Hello everybody.
So yesterday I was on a little gathering called Coderetreat.
If you look at the link you can read everything about it. If not, I&amp;rsquo;ve provided a short description.
What it is about?
So what is codereatreat about? In short it&amp;rsquo;s about programmers getting together and honing and practicing there skills in order to become more at what they are doing. It&amp;rsquo;s a practice run with great people. TDDing one problem the whole day long with constantly applied constraints.</description>
      <content type="html"><![CDATA[<p>Hello everybody.</p>
<p>So yesterday I was on a little gathering called <a href="http://coderetreat.org/" title="Coderetreat" target="_blank">Coderetreat</a>.</p>
<p>If you look at the link you can read everything about it. If not, I&rsquo;ve provided a short description.</p>
<p><strong>What it is about?</strong></p>
<p>So what is codereatreat about? In short it&rsquo;s about programmers getting together and honing and practicing there skills in order to become more at what they are doing. It&rsquo;s a practice run with great people. TDDing one problem the whole day long with constantly applied constraints.</p>
<p><strong>Problem domain</strong></p>
<p>Usually it&rsquo;s some kind of coding kata. This sessions problem was <a href="http://en.wikipedia.org/wiki/Conway's_Game_of_Life" target="_blank">Convey&rsquo;s Game Of Life</a>. It&rsquo;s a well known problem which you can&rsquo;t really solve in the given amount of time if you do it right. But that&rsquo;s not the goal anyways. The goal is the journey itself as was formulated by our facilitator.</p>
<p><strong>Process</strong></p>
<p>So what was going on there anyways? At 10:00AM the whole thing begun. Thirty developers set down, choose partners for TDD, and started to tackle the problem at hand. There were 6 sessions which lasted 45 minutes. After that a short retro and then a 10 minute break. On every session the code was deleted and rewrote from scratch. The first two sessions were introduction. And then the fun started with the constraints.</p>
<p><strong>Constraints</strong></p>
<p>The <strong>first</strong> one was that we were not allowed to use any loops when solving the problem. That was a tricky one. You had several options to go on but me not being a proper developer I couldn&rsquo;t think of too many. Well that&rsquo;s why I was there wasn&rsquo;t I? To learn. I came up with the idea of linking the cells together so when one is invalidated it notifies all his neighbours through a call. But I wasn&rsquo;t sure how to implement it. Also I choose a group which worked in ruby and it was a long time ago I wrote something in that language. It was a group effort but eventually we came up with a prototype that proved the first rule. I was happy!</p>
<p>The <strong>second</strong> one was <a href="http://coderetreat.org/facilitating/activities/ping-pong" target="_blank">TDD ping pong</a>. That was a really interesting experience for me. I grouped with a guy who had already experience in code retreat session so he didn&rsquo;t spare me. In addition we did silent ping pong and it was HARD! It was really hard for me to formulate my thoughts JUST in tests. So that he can get what I want and understand and agree on the design at the same time. So we ended up throwing tests at each other with the thought: Here try to solve this you bastard! It was great fun indeed!</p>
<p>The <strong>third</strong> constraint was &lsquo;No conditions.&rsquo;. That was the hardest for me. Coming up with recursion for the first one and having a fight in the second was nothing compared to this. Conditions are a fundamental structure of programming. It&rsquo;s logic basically. You can have the cells as objects and then a world of cells linked together but you still have to somehow decide if they live or die based on neighbour count.</p>
<p>So how do you avert it? I worked with a guy in this one who was good at low level thinking. He came up with the solution of using expressions as returns for the status:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="k">return</span> <span class="o">(!((</span><span class="n">neighbours</span> <span class="o">&lt;</span> <span class="n">2</span><span class="o">)</span> <span class="o">||</span> <span class="o">(</span><span class="n">neighbours</span> <span class="o">&gt;</span> <span class="n">3</span><span class="o">)))</span> <span class="o">||</span> <span class="o">(((</span><span class="n">neighbours</span> <span class="o">==</span> <span class="n">2</span><span class="o">)</span> <span class="o">||</span> <span class="o">(</span><span class="n">neighbours</span> <span class="o">==</span> <span class="n">3</span><span class="o">)));</span>
</code></pre></td></tr></table>
</div>
</div><p>It&rsquo;s brilliant and easy if you see it like this but I was so used to thinking in higher structure and so used to the features given by the language, that I couldn&rsquo;t have come up with this in the given amount of time. So he had the idea and I coded it down. And this is actually working. It returns true or false based on the neighbour count. And we could use that return value to change the state of the cell afterwords.</p>
<p>The <strong>fourth</strong> and last task was that everybody stand up and finish someones else code. Practicing how to handle &ldquo;legacy&rdquo; code and a free for all session to finish the job.</p>
<p><strong>What I learned?</strong></p>
<p>Basically I learned that I really like code. I like writing it, thinking about it, solving problems and creating good, clean, clever solutions. I might be a tester by profession and I love being a tester, but there is a coder somewhere in here too who enjoyed every bit of that session yesterday. Of course this is not the only thing I took from that. I learned good technics. I learned that I&rsquo;m in a box and I need to think outside of it too. I constraint myself by depending on the language I use. And that I need to keep up practicing alas I loose my ability to solve complex logical problems by coding.</p>
<p>A coding kata a day helps keeping the bugs away. ðŸ˜‰</p>
<p><strong>End thoughts</strong></p>
<p>All in all the day was absolutely awesome. Great lunch and environment was provided by the host <a href="http://www.national-lottery.co.uk/" target="_blank">Camelot</a> and our fearless leader who walked around all day helping out and coordinating the whole thing <a href="www.meza.hu" target="_blank">Marton &lsquo;Meza&rsquo; Meszaros</a>. A big thank you and a lot of respect for doing it all day long.</p>
<p>Unfortunately because of my broken ankle I couldn&rsquo;t stay for the drinks but if you ever get to a session like this I strongly recommend staying the whole day AND the night. And not just &lsquo;till you stuffed your belly with free food and booze. ðŸ˜‰</p>
<p>And the top of the cherry is a great time laps of the whole day which can be seen here: <a href="http://www.youtube.com/watch?v=qBvMBAOQD5U" target="_blank">Coderetreat 29.09.12</a>. Enjoy as we had!</p>
<p>As always,</p>
<p>Thanks for reading.</p>
<p>Gergely.</p>
]]></content>
    </item>
    
  </channel>
</rss>