<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>coding kata on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/tags/coding-kata/</link>
    <description>Recent content in coding kata on Ramblings of a cloud engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 26 Jun 2012 00:00:00 +0000</lastBuildDate><atom:link href="https://skarlso.github.io/tags/coding-kata/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Solution to Wrap Kata</title>
      <link>https://skarlso.github.io/2012/06/26/solution-to-wrap-kata/</link>
      <pubDate>Tue, 26 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2012/06/26/solution-to-wrap-kata/</guid>
      <description>My solution to the String Wrap Kata. The goal is to have it wrap a text on a given column width.
It is not the best solution but this is my first try. I did it with TDD so there were tests first, which I&amp;rsquo;m not going to copy in..
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  public class WrapKata { public String wrap(String input, int columnSize) { if (input.</description>
      <content type="html"><![CDATA[<p>My solution to the String Wrap Kata. The goal is to have it wrap a text on a given column width.</p>
<p>It is not the best solution but this is my first try. I did it with TDD so there were tests first, which I&rsquo;m not going to copy in..</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">WrapKata</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">wrap</span><span class="o">(</span><span class="n">String</span> <span class="n">input</span><span class="o">,</span> <span class="kt">int</span> <span class="n">columnSize</span><span class="o">)</span> <span class="o">{</span>

        <span class="k">if</span> <span class="o">(</span><span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">columnSize</span><span class="o">)</span>
            <span class="k">return</span> <span class="n">input</span><span class="o">;</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">wrapLines</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">columnSize</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="n">String</span> <span class="nf">wrapLines</span><span class="o">(</span><span class="n">String</span> <span class="n">input</span><span class="o">,</span> <span class="kt">int</span> <span class="n">columnSize</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">breakPoint</span> <span class="o">=</span> <span class="n">getBreakPoint</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">columnSize</span><span class="o">);</span>

        <span class="n">String</span> <span class="n">head</span> <span class="o">=</span> <span class="n">createHead</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">breakPoint</span><span class="o">);</span>
        <span class="n">String</span> <span class="n">tail</span> <span class="o">=</span> <span class="n">createTail</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">breakPoint</span><span class="o">);</span>

        <span class="k">return</span> <span class="n">head</span> <span class="o">+=</span> <span class="s">&#34;\n&#34;</span> <span class="o">+</span> <span class="n">wrap</span><span class="o">(</span><span class="n">tail</span><span class="o">,</span> <span class="n">columnSize</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="n">String</span> <span class="nf">createTail</span><span class="o">(</span><span class="n">String</span> <span class="n">input</span><span class="o">,</span> <span class="kt">int</span> <span class="n">breakPoint</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">input</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">breakPoint</span><span class="o">).</span><span class="na">trim</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="n">String</span> <span class="nf">createHead</span><span class="o">(</span><span class="n">String</span> <span class="n">input</span><span class="o">,</span> <span class="kt">int</span> <span class="n">breakPoint</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">input</span><span class="o">.</span><span class="na">substring</span><span class="o">(,</span> <span class="n">breakPoint</span><span class="o">).</span><span class="na">trim</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">int</span> <span class="nf">getBreakPoint</span><span class="o">(</span><span class="n">String</span> <span class="n">input</span><span class="o">,</span> <span class="kt">int</span> <span class="n">columnSize</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">input</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s">&#34; &#34;</span><span class="o">))</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">input</span><span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="sc">&#39; &#39;</span><span class="o">,</span> <span class="n">columnSize</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">columnSize</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></content>
    </item>
    
  </channel>
</rss>