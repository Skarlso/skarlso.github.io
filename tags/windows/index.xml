<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Windows on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/tags/windows/</link>
    <description>Recent content in Windows on Ramblings of a cloud engineer</description>
    <generator>Hugo -- 0.136.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 01 Jul 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://skarlso.github.io/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Packer 0.8.1.</title>
      <link>https://skarlso.github.io/2015/07/01/packer-0-8-1/</link>
      <pubDate>Wed, 01 Jul 2015 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2015/07/01/packer-0-8-1/</guid>
      <description>&lt;p&gt;Previously I wrote that the scripts I&amp;rsquo;m writing, are failing because Packer hangs.&lt;/p&gt;
&lt;p&gt;Apparently, this was a known issue. And apparently, I was using an older version, 0.7.5. After I updated everything is working wonderfully!!!&lt;/p&gt;
&lt;p&gt;And for my thanks, here is an updated PowerShell script for provisioning my dotnet stuff.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$source = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://download.microsoft.com/download/1/6/7/167F0D79-9317-48AE-AEDB-17120579F8E2/NDP451-KB2858728-x86-x64-AllOS-ENU.exe&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$destination = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Windows\Temp\dotnet.exe&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Starting to download dotnet file.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (New-Object System.Net.WebClient).DownloadFile($source, $destination)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;Exception&lt;/span&gt;] {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Exception during download. Probable cause could be that the directory or the file didn&amp;#39;t exist.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$_.Exception is&amp;#39;&lt;/span&gt; $_.Exception
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Download done. Checking if file exists.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (!(Test-Path $destination)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Downloading dotnet Failed!&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Download successful.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Starting install process.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Start-Process -FilePath $source -ArgumentList &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/q /norestart&amp;#34;&lt;/span&gt; -Wait -PassThru
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;Exception&lt;/span&gt;] {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Exception during install process.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$_.Exception is&amp;#39;&lt;/span&gt; $_.Exception
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;All done. Goodbye.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Thanks for reading!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Powershell can also be nice -Or Installing Java silently and waiting</title>
      <link>https://skarlso.github.io/2015/06/30/powershell-can-also-be-nice-or-installing-java-silently-and-waiting/</link>
      <pubDate>Tue, 30 Jun 2015 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2015/06/30/powershell-can-also-be-nice-or-installing-java-silently-and-waiting/</guid>
      <description>&lt;p&gt;Hello folks.&lt;/p&gt;
&lt;p&gt;Today, I would like to show you a small script. It installs Java JDK, both version, x86 and 64 bit, silently, and wait for that process to finish.&lt;/p&gt;
&lt;p&gt;The wait is necessary because /s on a java install has the nasty habit of running in the background. If you are using a .bat file, &lt;strong&gt;you shouldn&amp;rsquo;t&lt;/strong&gt;, than you would use something like: start /w jdk-setup.exe /s. This gets it done, but is ugly. Also, if you are using Packer and PowerShell provisioning, you might want to set up some environment variables as well for the next script. And you want that property to be available and you don&amp;rsquo;t want to mess it up with setting a path into a file and then re-setting your path on the begin of your other script. Or pass it around with Packer. No. Use a proper PowerShell script. Learn it. It&amp;rsquo;s not that hard. Be a professional. Don&amp;rsquo;t hack something together for the next person to suffer at.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Packer, The Windows, and the Vagrant box</title>
      <link>https://skarlso.github.io/2015/06/27/the-packer-the-windows-and-the-vagrant-box/</link>
      <pubDate>Sat, 27 Jun 2015 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2015/06/27/the-packer-the-windows-and-the-vagrant-box/</guid>
      <description>&lt;p&gt;Hello folks.&lt;/p&gt;
&lt;p&gt;Today, I would like to write about something close to my heart recently. I&amp;rsquo;ve been fiddling with Packer, Windows and Vagrant these days. Trying to get a Windows box up in running is a pain in the arse though, so I thought I share my pain with you nice folks out there. Let&amp;rsquo;s begin.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
