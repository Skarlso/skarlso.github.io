<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cucumber on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/tags/cucumber/</link>
    <description>Recent content in cucumber on Ramblings of a cloud engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 28 Jan 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://skarlso.github.io/tags/cucumber/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>When cucumber goes wrong</title>
      <link>https://skarlso.github.io/2015/01/28/when-cucumber-goes-wrong/</link>
      <pubDate>Wed, 28 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/01/28/when-cucumber-goes-wrong/</guid>
      <description><![CDATA[<p>Hi,</p>
<p>Let&rsquo;s face the horrible truth:</p>
<p><strong>It&rsquo;s rare / never happens that a manager / scrum master / product owner actually reads your cucumber test cases.</strong></p>
<p>Back in the old days, this was one of the selling points of human readable tests and DSLs. It sounds nice and I&rsquo;m sure in a utopia it also works.</p>
<p>BDD is a very nice approach to write tests if used in a correct way. And I can relate that at some point, a manager or the product owner, actually writes up a draft of the tests. But that enthusiasm very rarely stays for the rest of the project.</p>
<p>Especially when you get to the point where your Cucumber test cases start to look something like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">Scenario: User list
  Given I post to &#34;/users.json&#34; with:
    &#34;&#34;&#34;
    {
      &#34;first_name&#34;: &#34;Steve&#34;,
      &#34;last_name&#34;: &#34;Richert&#34;
    }
    &#34;&#34;&#34;
  And I keep the JSON response at &#34;id&#34; as &#34;USER_ID&#34;
  When I get &#34;/users.json&#34;
  Then the JSON response should have 1 user
  And the JSON response at &#34;0&#34; should be:
    &#34;&#34;&#34;
    {
      &#34;id&#34;: %{USER_ID},
      &#34;first_name&#34;: &#34;Steve&#34;,
      &#34;last_name&#34;: &#34;Richert&#34;
    }
    &#34;&#34;&#34;
</code></pre></td></tr></table>
</div>
</div><p>If a product owner reads this, his reaction will be like: &ldquo;What the hell is this? What&rsquo;s users.json? Why is it there? Why should I even care? What&rsquo;s a JSON response? Why should it match with the request? And what, if I keep the id at USER_ID? Huh?&rdquo;</p>
<p>It&rsquo;s easy to get overwhelmed by things like this scenario when you start introducing actors into your tests and payloads to your public API. And suddenly you&rsquo;ll end up with cucumber features which no other will be able to understand but the person who wrote it.</p>
<p>I&rsquo;m a little bit skeptic that it ever worked as intended. Sure, for a little while. But the dynamic nature of tests will surface soon enough. You can&rsquo;t hide it forever.</p>
<p>The above example, if the payload and user would be hidden in a reusable code fragment behind the implementation, would look a bit more readable:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">Scenario: User list
  Given I post to user list with data
  | firstname | Steve |
  | lastname  | Richert |
  When I get a response from the SUT
  Then the response should have the same user
</code></pre></td></tr></table>
</div>
</div><p>See? Easier to understand. I don&rsquo;t care about the payload. I don&rsquo;t care about the user ID, in fact, I would rather see this test as a unit test somewhere deep down in the bowls of the system. Although I can understand that you want a set of automated UATs.</p>
<p>I&rsquo;m sure Cucumber has a couple of success stories behind his back, I just didn&rsquo;t happen to come across them as of late. But please, if you have one, share it with me so I can rest easily.</p>
<p>Gergely.</p>
]]></description>
    </item>
    
  </channel>
</rss>