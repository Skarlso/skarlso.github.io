<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Vagrant on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/tags/vagrant/</link>
    <description>Recent content in Vagrant on Ramblings of a cloud engineer</description>
    <generator>Hugo -- 0.136.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 22 Jul 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://skarlso.github.io/tags/vagrant/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Quick Tip for Debugging Headless Locally</title>
      <link>https://skarlso.github.io/2015/07/22/quick-tip-for-debugging-headless-locally/</link>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2015/07/22/quick-tip-for-debugging-headless-locally/</guid>
      <description>&lt;p&gt;If you are installing something with Packer and you have Headless enabled(and you are lazy and don&amp;rsquo;t want to switch it off), it gets difficult, to see output.&lt;/p&gt;
&lt;p&gt;Especially on a windows install the Answer File / Unattended install can be like =&amp;gt; Waiting for SSH. for about an hour or two! If you are doing this locally fret not. Just start VirtualBox, and watch the Preview section which will display the current state even if it&amp;rsquo;s a headless install!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Selenium Testing with Packer and Vagrant</title>
      <link>https://skarlso.github.io/2015/07/16/selenium-testing-with-packer-and-vagrant/</link>
      <pubDate>Thu, 16 Jul 2015 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2015/07/16/selenium-testing-with-packer-and-vagrant/</guid>
      <description>&lt;p&gt;So, recently, the tester team talked to me, that their build takes too long, and why is that? A quick look at their configuration and build scripts showed me, that they are actually using a vagrant box, which never gets destroyed or re-started at least. To remedy this problem, I came up with the following solution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Packer, The Windows, and the Vagrant box</title>
      <link>https://skarlso.github.io/2015/06/27/the-packer-the-windows-and-the-vagrant-box/</link>
      <pubDate>Sat, 27 Jun 2015 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2015/06/27/the-packer-the-windows-and-the-vagrant-box/</guid>
      <description>&lt;p&gt;Hello folks.&lt;/p&gt;
&lt;p&gt;Today, I would like to write about something close to my heart recently. I&amp;rsquo;ve been fiddling with Packer, Windows and Vagrant these days. Trying to get a Windows box up in running is a pain in the arse though, so I thought I share my pain with you nice folks out there. Let&amp;rsquo;s begin.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker &#43; Java &#43; Vagrant&#43; GO.CD</title>
      <link>https://skarlso.github.io/2015/06/06/docker-ruby-lotus-go-cd/</link>
      <pubDate>Sat, 06 Jun 2015 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2015/06/06/docker-ruby-lotus-go-cd/</guid>
      <description>&lt;p&gt;Hello folks.&lt;/p&gt;
&lt;p&gt;Today, I would like to write about something interesting and close to me at the moment. I&amp;rsquo;m going to setup Go.cd with Docker, and I&amp;rsquo;m going to get a Ruby Lotus app running. Let&amp;rsquo;s get started.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
