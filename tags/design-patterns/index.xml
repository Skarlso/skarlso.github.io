<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design Patterns on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/tags/design-patterns/</link>
    <description>Recent content in Design Patterns on Ramblings of a cloud engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Wed, 19 Feb 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://skarlso.github.io/tags/design-patterns/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Example when to use the Strategy Pattern</title>
      <link>https://skarlso.github.io/2014/02/19/example-when-to-use-the-strategy-pattern/</link>
      <pubDate>Wed, 19 Feb 2014 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2014/02/19/example-when-to-use-the-strategy-pattern/</guid>
      <description>&lt;p&gt;Hello folks.&lt;/p&gt;
&lt;p&gt;A quick post about an interesting idea.&lt;/p&gt;
&lt;p&gt;I want to elaborate on a possibility to use the Strategy Design pattern.&lt;/p&gt;
&lt;p&gt;There are many clues that you need one. One is for example if your object has a boolean variable which you use a lot in other classes to determine behavior. Then there is perhaps time to implement a Strategy.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;So you have two classes which do something based on some boolean coming from a class. So what you can do in this case, simply extract out that change in state.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Now I know this looks like a lot of more code. However imagine this on a much larger scale with lots of implementations for Foo and Bar. Your if statements will get very convulated very quickly. This way you abstract away the choice into a Factory. And you can add as many implementations of Base as you like with as many variants as you like without changing the logic anywhere else but the Factory and the Enum. And the Enum could be a Configuration file and you do something like this:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;This way you don’t even need the Enum anymore. Just use some configuration to determine what class you need at which point in your implementation without using an If statement at all.&lt;/p&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;
&lt;p&gt;I whipped this up from memory so please feel free to tell me if I missed something or have a syntax error in there somewhere…&lt;/p&gt;
&lt;p&gt;As always,&lt;/p&gt;
&lt;p&gt;Thanks for reading!&lt;/p&gt;
&lt;p&gt;Gergely.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
