<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cucumber-Jvm on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/tags/cucumber-jvm/</link>
    <description>Recent content in Cucumber-Jvm on Ramblings of a cloud engineer</description>
    <generator>Hugo -- 0.136.0</generator>
    <language>en</language>
    <lastBuildDate>Mon, 15 Apr 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://skarlso.github.io/tags/cucumber-jvm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cucumber Test Name and Tags on Feature</title>
      <link>https://skarlso.github.io/2013/04/15/cucumber-test-name-and-tags-on-feature/</link>
      <pubDate>Mon, 15 Apr 2013 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2013/04/15/cucumber-test-name-and-tags-on-feature/</guid>
      <description>&lt;p&gt;Hello everybody.&lt;/p&gt;
&lt;p&gt;I would like to show you a gem today that I found out.&lt;/p&gt;
&lt;p&gt;Apparently there is no easy way to get to the name of an executing cucumber scenario in cucumber-jvm&lt;/p&gt;
&lt;p&gt;You can try something like that:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@After&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;//this is cucumbers @Afters&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;afterExecution&lt;/span&gt;(Scenario scenario) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logger.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The status of the test is: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; scenario.&lt;span style=&#34;color:#a6e22e&#34;&gt;getStatus&lt;/span&gt;());
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;But that isn&amp;rsquo;t giving you too much now is it? And the API of scenario is as small as it can get. It offers you four options:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
