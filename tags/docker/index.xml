<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/tags/docker/</link>
    <description>Recent content in docker on Ramblings of a cloud engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Sat, 06 Jun 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://skarlso.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Docker &#43; Java &#43; Vagrant&#43; GO.CD</title>
      <link>https://skarlso.github.io/2015/06/06/docker-ruby-lotus-go-cd/</link>
      <pubDate>Sat, 06 Jun 2015 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2015/06/06/docker-ruby-lotus-go-cd/</guid>
      <description>&lt;p&gt;Hello folks.&lt;/p&gt;
&lt;p&gt;Today, I would like to write about something interesting and close to me at the moment. I&amp;rsquo;m going to setup Go.cd with Docker, and I&amp;rsquo;m going to get a Ruby Lotus app running. Let&amp;rsquo;s get started.&lt;/p&gt;
&lt;h1 id=&#34;fluff&#34;&gt;Fluff&lt;/h1&gt;
&lt;p&gt;Now, obviously, you don&amp;rsquo;t really need Go.Cd or Docker to setup a Java Gradle application, since it&amp;rsquo;s dead easy. But I&amp;rsquo;m going to do it just for the heck of it.&lt;/p&gt;
&lt;h1 id=&#34;setup&#34;&gt;Setup&lt;/h1&gt;
&lt;p&gt;Okay, lets start with Vagrant. Docker&amp;rsquo;s strength is coming from Linux&amp;rsquo;s process isolation capabilities it&amp;rsquo;s not yet properly working on OSX or Windows. You have a couple of options if you&amp;rsquo;d like to try never the less, like boot2docker, or a Tiny Linux kernel, but at that point, I think it&amp;rsquo;s easier to use a VM.&lt;/p&gt;
&lt;h4 id=&#34;vagrant&#34;&gt;Vagrant&lt;/h4&gt;
&lt;p&gt;So, let&amp;rsquo;s start with my small Vagrantfile.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# -*- mode: ruby -*-&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# vi: set ft=ruby :&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# All Vagrant configuration is done below. The &amp;#34;2&amp;#34; in Vagrant.configure&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# configures the configuration version (we support older styles for&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# backwards compatibility). Please don&amp;#39;t change it unless you know what&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# you&amp;#39;re doing.&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;Vagrant&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;configure(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;config&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# The most common configuration options are documented and commented below.&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# For a complete reference, please see the online documentation at&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# https://docs.vagrantup.com.&lt;/span&gt;

  &lt;span style=&#34;color:#75715e&#34;&gt;# Every Vagrant development environment requires a box. You can search for&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# boxes at https://atlas.hashicorp.com/search.&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;box &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;trusty&amp;#34;&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;box_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box&amp;#34;&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;network &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;forwarded_port&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;guest&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2300&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;host&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2300&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;network &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;forwarded_port&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;guest&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8153&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;host&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8153&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;provision &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shell&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;setup.sh&amp;#34;&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;provider &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;virtualbox&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;v&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
    v&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;memory &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8192&lt;/span&gt;
    v&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cpus &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Very simple. I&amp;rsquo;m setting up a trusty64(because docker requires 3.10 &amp;lt;= x) box and then doing a simple shell provision. Also, I gave it a bit juice, since go-server requires a raw power. Here is the shell script:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;
!#/bin/bash
sudo apt-get update
sudo apt-get install -y software-properties-common python-software-properties
sudo apt-get update
sudo apt-get install -y vim
sudo add-apt-repository -y &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ppa:webupd8team/java&amp;#34;&lt;/span&gt;
sudo apt-get update
echo debconf shared/accepted-oracle-license-v1-1 &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; true | sudo debconf-set-selections &amp;amp;amp;&amp;amp;amp; echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections
sudo apt-get install -y oracle-java8-installer
sudo apt-get update
wget -qO- https://get.docker.com/ | sh
route add -net 172.17.0.0 netmask 255.255.255.0 gw 172.17.42.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The debconf at the end accepts java8&amp;rsquo;s terms and conditions. And the last line installs docker in my box. This runs for a little while.&lt;/p&gt;
&lt;p&gt;The routing on the end routes every traffic from 172.17.*.* to my vagrant box, which in turn I&amp;rsquo;ll be able to use from my mac local, like 127.0.0.1:8153/go/home.&lt;/p&gt;
&lt;p&gt;After a vagrant up, my box is ready to be used.&lt;/p&gt;
&lt;h4 id=&#34;docker&#34;&gt;Docker&lt;/h4&gt;
&lt;p&gt;When that&amp;rsquo;s finished, we can move on to the next part, which is writing a little Dockerfile for our image. Go.cd will require java and a couple of other things, so let&amp;rsquo;s automate the installation of that so we don&amp;rsquo;t have to do it by hand.&lt;/p&gt;
&lt;p&gt;Here is a Dockerfile I came up with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Dockerfile&#34; data-lang=&#34;Dockerfile&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ubuntu&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;MAINTAINER&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Skarlso&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;############ SETUP #############&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; apt-get update&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; apt-get install -y software-properties-common python-software-properties&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; add-apt-repository -y &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ppa:webupd8team/java&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; echo debconf shared/accepted-oracle-license-v1-1 &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; true | sudo debconf-set-selections &amp;amp;amp;&amp;amp;amp; echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; apt-get update&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; apt-get install -y oracle-java8-installer&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; apt-get install -y vim&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; apt-get install -y unzip&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; apt-get install -y git&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So, our docker images have to be setup with Java as well for go.cd which I&amp;rsquo;m taking care of here, and a little bit extra, to add vim, and unzip, which is required for dpkg later.&lt;/p&gt;
&lt;p&gt;At this point run: &lt;strong&gt;docker build -t ubuntu:go .&lt;/strong&gt; -&amp;gt; This will use the dockerfile and create the ubuntu:go image. Note the **. **at the end.&lt;/p&gt;
&lt;h4 id=&#34;gocd&#34;&gt;Go.cd&lt;/h4&gt;
&lt;p&gt;Now, I&amp;rsquo;m creating two containers. One, go-server, will be the go server, and the other, go-agent, will be the go agent.&lt;/p&gt;
&lt;p&gt;First, go-server:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
docker run -i -t --name go-server --hostname=go-server -p 8153:8153 ubuntu:go /bin/bash
wget http://download.go.cd/gocd-deb/go-server-15.1.0-1863.deb
dpkg -i go-server-15.1.0-1863.deb
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Pretty straight forward, no? We forward 8153 to vagrant (which forwards it to my mac), so after we start go-server service we should be able to visit: http://127.0.0.1:8153/go/home.&lt;/p&gt;
&lt;p&gt;Lo&#39;, and behold, go server. Let&amp;rsquo;s add an agent too.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -i -t --name go-agent --hostname=go-agent ubuntu:go /bin/bash
wget http://download.go.cd/gocd-deb/go-agent-15.1.0-1863.deb
dpkg -i go-agent-15.1.0-1863.deb
vim /etc/default/go-agent
GO_SERVER=172.17.0.1
service go-agent start
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;No need to forward anything here. And as you can see, my agent was added successfully.&lt;/p&gt;
&lt;p&gt;All nice, and dandy. The agent is there, and I enabled it, so it&amp;rsquo;s ready to work. Let&amp;rsquo;s give it something to do, shall we?&lt;/p&gt;
&lt;h1 id=&#34;the-app&#34;&gt;The App&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;m going to use my gradle project which is on github. This one =&amp;gt; https://github.com/Skarlso/DataMung.git.&lt;/p&gt;
&lt;p&gt;Very basic setup. Just check it out and then build &amp;amp; run tests. Easy, right?&lt;/p&gt;
&lt;p&gt;First step in this process, define the pipeline. I&amp;rsquo;m going to keep it simple. Name the pipeline DataMunger. Group is Linux. Now, in go.cd you have to define something called, an &lt;strong&gt;environment&lt;/strong&gt;. Environment can be anything you want, I&amp;rsquo;m going to go with Linux. You have to assign &lt;strong&gt;agents&lt;/strong&gt; to this environment who fulfil it and the pipeline which will use that environment. More on that you can read in the go.cd documentation. This is how you would handle a pipeline which uses linux, and a windows environment at the same time.&lt;/p&gt;
&lt;p&gt;In step one you have to define something called the &lt;strong&gt;Material&lt;/strong&gt;. That will be the source on which the agent will work. This can be multiple, in different folders within the confines of the pipeline, or singular.&lt;/p&gt;
&lt;p&gt;I defined my git project and tested the connection OK. Next up is the first **Stage **and the initial **Job **to perform. This, for me, will be a compile or an assemble, and later on a test run.&lt;/p&gt;
&lt;p&gt;Now, Go is awesome in parallelising jobs. If my project would be large enough, I could have multiple jobs here. But for now, I&amp;rsquo;ll use stages because they run subsequently. So, first stage, compile. Next stage, testing and archiving the results.&lt;/p&gt;
&lt;p&gt;I added the next stage and defined the artefact. Go supports test-reports. If you define the path to a test artefact than go will parse it and create a nice report out of it.&lt;/p&gt;
&lt;p&gt;Now, let&amp;rsquo;s run it. It will probably fail on something. 😉&lt;/p&gt;
&lt;p&gt;Well, I&amp;rsquo;ll be. It worked on the first run.&lt;/p&gt;
&lt;p&gt;And here are the test results.&lt;/p&gt;
&lt;h1 id=&#34;wrap-up&#34;&gt;Wrap-up&lt;/h1&gt;
&lt;p&gt;Well, that&amp;rsquo;s it folks. Gradle project, with vagrant, docker, and go.cd. I hope you all enjoyed reading about it as much as I did doing it.&lt;/p&gt;
&lt;p&gt;Any questions, please feel free to ask it in the comment section below.&lt;/p&gt;
&lt;p&gt;Cheers,
Have a nice weekend,
Gergely.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
