<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jenkins on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/tags/jenkins/</link>
    <description>Recent content in jenkins on Ramblings of a cloud engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Thu, 15 Oct 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://skarlso.github.io/tags/jenkins/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Jenkins Job DSL and Groovy goodness</title>
      <link>https://skarlso.github.io/2015/10/15/jenkins-job-dsl-and-groovy-goodness/</link>
      <pubDate>Thu, 15 Oct 2015 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2015/10/15/jenkins-job-dsl-and-groovy-goodness/</guid>
      <description>&lt;p&gt;Hi Folks.&lt;/p&gt;
&lt;p&gt;Ever used &lt;!-- raw HTML omitted --&gt;Job DSL plugin&lt;!-- raw HTML omitted --&gt; for Jenkins? What is that you say? Well, it&amp;rsquo;s TEH most awesome plug-in for Jenkins to have, because you can CODE your job configuration and put it under source control.&lt;/p&gt;
&lt;p&gt;Today, however, I&amp;rsquo;m not going to write about that because the tutorials on Jenkins JOB DSL are very extensive and very well done. Anyone can pick them up.&lt;/p&gt;
&lt;p&gt;Today, I would like to write about a part of it which is even more interesting. And that is, extracting re-occurring parts in your job configurations.&lt;/p&gt;
&lt;p&gt;If you have jobs, which have a common part that is repeated everywhere, you usually have an urge to extracted that into one place, lest it changes and you have to go an apply the change everywhere. That&amp;rsquo;s not very efficient. But how do you do that in something which looks like a JSON descriptor?&lt;/p&gt;
&lt;p&gt;Fret not, it is just Groovy. And being just groovy, you can use Groovy to implement parts of the job description and then apply that implementation to the job in the DSL.&lt;/p&gt;
&lt;p&gt;Suppose you have an email which you send after every job for which the DSL looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;
job&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MyTestJob&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    description &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;strong&amp;gt;GENERATED - do not modify&amp;lt;/strong&amp;gt;&amp;#39;&lt;/span&gt;
    label&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;machine_label&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    logRotator&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    parameters &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        stringParam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;somestringparam&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;default_valye&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Description&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    wrappers &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        timeout &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            noActivity&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
            abortBuild&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
            failBuild&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
            writeDescription&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Build failed due to timeout after {0} minutes&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    deliveryPipelineConfiguration&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Main&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MyTestJob&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    wrappers &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        preBuildCleanup &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            deleteDirectories&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
        timestamps&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    triggers &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        cron&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;H 12 * * 1,2&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    steps &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        batchFile&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;readFileFromWorkspace&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;relative/path/to/file&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
            publishers &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                wsCleanup&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
                extendedEmail&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;email@address.com&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$DEFAULT_SUBJECT&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$DEFAULT_CONTENT&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                    configure &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; node &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;
                        node &lt;span style=&#34;color:#e6db74&#34;&gt;/ presendScript &amp;lt;&amp;lt; readFileFromWorkspace(&amp;#39;email_templates/&lt;/span&gt;emailtemplate&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;groovy&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                        node / replyTo &amp;lt;&amp;lt; &amp;#39;&lt;/span&gt;$DEFAULT_REPLYTO&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                        node / contentType &amp;lt;&amp;lt; &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    }
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    trigger(triggerName: &amp;#39;&lt;/span&gt;StillUnstable&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, subject: &amp;#39;&lt;/span&gt;$DEFAULT_SUBJECT&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, body: &amp;#39;&lt;/span&gt;$DEFAULT_CONTENT&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, replyTo: &amp;#39;&lt;/span&gt;$DEFAULT_REPLYTO&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, sendToDevelopers: true, sendToRecipientList: true)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    trigger(triggerName: &amp;#39;&lt;/span&gt;Fixed&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, subject: &amp;#39;&lt;/span&gt;$DEFAULT_SUBJECT&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, body: &amp;#39;&lt;/span&gt;$DEFAULT_CONTENT&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, replyTo: &amp;#39;&lt;/span&gt;$DEFAULT_REPLYTO&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, sendToDevelopers: true, sendToRecipientList: true)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    trigger(triggerName: &amp;#39;&lt;/span&gt;Failure&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, subject: &amp;#39;&lt;/span&gt;$DEFAULT_SUBJECT&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, body: &amp;#39;&lt;/span&gt;$DEFAULT_CONTENT&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, replyTo: &amp;#39;&lt;/span&gt;$DEFAULT_REPLYTO&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sendToDevelopers: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sendToRecipientList: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

            &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, that big chunk of email setting is copied into a bunch of files, which is pretty ugly. And once you try to change it, you&amp;rsquo;ll have to change it everywhere. Also, the interesting bits here are those readFileFromWorkspace parts. Those allow us to export even larger chunks of the script into external files. Now, because the slave might be located somewhere else, you should not use new File(&amp;lsquo;file&amp;rsquo;).text in your job DSL. readFileFromWorkspace in the background does that, but applies correct way to the PATH it looks on for the file specified.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s put this into a groovy script, shall we? Create a utilities folder where the DSL is and create a groovy file in it like this one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; utilities

&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;JobCommonTemplate&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;addEmailTemplate&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; job&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; dslFactory&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        String emailScript &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dslFactory&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;readFileFromWorkspace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;email_template/EmailTemplate.groovy&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        job&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            publishers &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                wsCleanup&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
                extendedEmail&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;email@address.com&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$DEFAULT_SUBJECT&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$DEFAULT_CONTENT&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                    configure &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; node &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;
                        node &lt;span style=&#34;color:#e6db74&#34;&gt;/ presendScript &amp;lt;&amp;lt; emailScript
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                        node /&lt;/span&gt; replyTo &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$DEFAULT_REPLYTO&amp;#39;&lt;/span&gt;
                        node &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; contentType &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;
                    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
                    trigger&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;triggerName: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;StillUnstable&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; subject: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$DEFAULT_SUBJECT&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; body: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$DEFAULT_CONTENT&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; replyTo: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$DEFAULT_REPLYTO&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sendToDevelopers: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sendToRecipientList: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                    trigger&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;triggerName: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Fixed&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; subject: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$DEFAULT_SUBJECT&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; body: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$DEFAULT_CONTENT&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; replyTo: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$DEFAULT_REPLYTO&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sendToDevelopers: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sendToRecipientList: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                    trigger&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;triggerName: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Failure&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; subject: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$DEFAULT_SUBJECT&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; body: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$DEFAULT_CONTENT&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; replyTo: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$DEFAULT_REPLYTO&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sendToDevelopers: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sendToRecipientList: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

            &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The function addEmailTemplate gets two parameters. A job, which is an implementation of a Job, and a dslFactory which is a DslFactory. That factory is an interface which defines our readFileFromWorkspace. Where do we get the implementation from then? That will be from the Job. Let&amp;rsquo;s alter our job to apply this Groovy script.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; utilities.JobCommonTemplate

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; myJob &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; job&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MyTestJob&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    description &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;strong&amp;gt;GENERATED - do not modify&amp;lt;/strong&amp;gt;&amp;#39;&lt;/span&gt;
    label&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;machine_label&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    logRotator&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    parameters &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        stringParam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;somestringparam&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;default_valye&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Description&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    wrappers &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        timeout &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            noActivity&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
            abortBuild&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
            failBuild&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
            writeDescription&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Build failed due to timeout after {0} minutes&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    deliveryPipelineConfiguration&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Main&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MyTestJob&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    wrappers &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        preBuildCleanup &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
            deleteDirectories&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
        timestamps&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    triggers &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        cron&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;H 12 * * 1,2&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    steps &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
        batchFile&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;readFileFromWorkspace&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;relative/path/to/file&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

JobCommonTemplate&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addEmailTemplate&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;myJob&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Notice three things here.&lt;/p&gt;
&lt;p&gt;#1 =&amp;gt; &lt;strong&gt;import&lt;/strong&gt;. We import the script from utilities folder which we created and placed the script into it.&lt;/p&gt;
&lt;p&gt;#2 =&amp;gt; &lt;strong&gt;def myJob&lt;/strong&gt;. We create a variable which will contain our job&amp;rsquo;s description.&lt;/p&gt;
&lt;p&gt;#3 =&amp;gt; &lt;strong&gt;this&lt;/strong&gt;. &amp;lsquo;this&amp;rsquo; will be the DslFactory. That&amp;rsquo;s where we get our readFileFromWorkspace implementation.&lt;/p&gt;
&lt;p&gt;And that&amp;rsquo;s it. We have extracted a part of our job which is re-occurring and we found our implementation for our readFileFromWorkspace. DslFactory has most of the things which you need in a job description, would you want to expand on this and extract other bits and pieces.&lt;/p&gt;
&lt;p&gt;Have fun, and happy coding!&lt;/p&gt;
&lt;p&gt;As always,&lt;/p&gt;
&lt;p&gt;Thanks for reading!&lt;/p&gt;
&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Aggregate Tests with Jenkins with Aggregate Plugin on non-relating jobs</title>
      <link>https://skarlso.github.io/2015/10/02/how-to-aggregate-tests-with-jenkins-with-aggregate-plugin-on-non-relating-jobs/</link>
      <pubDate>Fri, 02 Oct 2015 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2015/10/02/how-to-aggregate-tests-with-jenkins-with-aggregate-plugin-on-non-relating-jobs/</guid>
      <description>&lt;p&gt;Hello folks.&lt;/p&gt;
&lt;p&gt;Today, I would like to talk about something I came in contact with, and was hard to find a proper answer / solution for it.&lt;/p&gt;
&lt;p&gt;So I&amp;rsquo;m writing this down to document my findings. Like the title says, this is about aggregating test result with Jenkins, using the plug-in provided. If you, like me, have a pipeline structure which do not work on the same artifact, but do have a upstream-downstream relationship, you will have a hard time configuring and making Aggregation work. So here is how, I fixed the issue.&lt;/p&gt;
&lt;h1 id=&#34;connection&#34;&gt;Connection&lt;/h1&gt;
&lt;p&gt;In order for the aggregation to work, there needs to be an &lt;strong&gt;artifact connection&lt;/strong&gt; between the upstream and downstream projects. And that is the key. But if you don&amp;rsquo;t have that, well, let&amp;rsquo;s create one. I have a parent job configured like this one. =&amp;gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;UTF-8&amp;#39;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;project&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;actions/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;keepDependencies&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/keepDependencies&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;properties/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;scm&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hudson.scm.NullSCM&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;canRoam&amp;gt;&lt;/span&gt;true&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/canRoam&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;disabled&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/disabled&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;blockBuildWhenDownstreamBuilding&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/blockBuildWhenDownstreamBuilding&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;blockBuildWhenUpstreamBuilding&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/blockBuildWhenUpstreamBuilding&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;triggers/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;concurrentBuild&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/concurrentBuild&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;builders/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;publishers&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;hudson.tasks.test.AggregatedTestResultPublisher&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;plugin=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;junit@1.9&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;includeFailedBuilds&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/includeFailedBuilds&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/hudson.tasks.test.AggregatedTestResultPublisher&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;hudson.tasks.BuildTrigger&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;childProjects&amp;gt;&lt;/span&gt;ChildJob&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/childProjects&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;threshold&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;SUCCESS&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;ordinal&amp;gt;&amp;lt;/ordinal&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;color&amp;gt;&lt;/span&gt;BLUE&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/color&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;completeBuild&amp;gt;&lt;/span&gt;true&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/completeBuild&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/threshold&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/hudson.tasks.BuildTrigger&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/publishers&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;buildWrappers/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As you can see, it&amp;rsquo;s pretty basic. It isn&amp;rsquo;t much. It&amp;rsquo;s supposed to be a trigger job for downstream projects. You could have this one at anything. Maybe scheduled, or have some kind of gathering here of some results, and so on and so forth. The end part of the configuration is the interesting bit.&lt;/p&gt;
&lt;p&gt;Aggregation is setup, but it won&amp;rsquo;t work, because despite there being an upstream/downstream relationship, there also needs to be an artifact connection which uses &lt;strong&gt;fingerprinting&lt;/strong&gt;. Fingerprinting for Jenkins is needed in oder to make the physical connection between the jobs via hashes. This is what you will get if that is not setup:&lt;/p&gt;
&lt;p&gt;But if there is no artifact between them, what do you do? You create one.&lt;/p&gt;
&lt;h1 id=&#34;the-artifact-which-binds-us&#34;&gt;The Artifact which Binds Us&lt;/h1&gt;
&lt;p&gt;Adding a simple &lt;strong&gt;timestamp file&lt;/strong&gt; is enough to make a connection. So let&amp;rsquo;s do that. This is how it will look like =&amp;gt;&lt;/p&gt;
&lt;p&gt;The important bits about this picture are the small echo which simply creates a file which will contain some time stamp data, and after that the archive artifact, which also fingerprints that file, marking it with a hash which identifies this job as using that particular artifact.&lt;/p&gt;
&lt;p&gt;Now, the next step is to create the connection. For that, you need the artifact copy plugin =&amp;gt; &lt;!-- raw HTML omitted --&gt;Copy Artifact Plugin&lt;!-- raw HTML omitted --&gt;.&lt;/p&gt;
&lt;p&gt;With this, we create the childs configuration like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;UTF-8&amp;#39;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;project&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;actions/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;keepDependencies&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/keepDependencies&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;properties/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;scm&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hudson.plugins.git.GitSCM&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;plugin=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;git@2.4.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configVersion&amp;gt;&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configVersion&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;userRemoteConfigs&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;hudson.plugins.git.UserRemoteConfig&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;https://github.com/Skarlso/DataMung.git&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/hudson.plugins.git.UserRemoteConfig&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/userRemoteConfigs&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;branches&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;hudson.plugins.git.BranchSpec&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;*/master&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/hudson.plugins.git.BranchSpec&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/branches&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;doGenerateSubmoduleConfigurations&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/doGenerateSubmoduleConfigurations&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;submoduleCfg&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;list&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;extensions/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/scm&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;canRoam&amp;gt;&lt;/span&gt;true&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/canRoam&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;disabled&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/disabled&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;blockBuildWhenDownstreamBuilding&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/blockBuildWhenDownstreamBuilding&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;blockBuildWhenUpstreamBuilding&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/blockBuildWhenUpstreamBuilding&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;triggers/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;concurrentBuild&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/concurrentBuild&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;builders&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;hudson.plugins.gradle.Gradle&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;plugin=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gradle@1.24&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;switches&amp;gt;&amp;lt;/switches&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;tasks&amp;gt;&lt;/span&gt;assemble check&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/tasks&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;rootBuildScriptDir&amp;gt;&amp;lt;/rootBuildScriptDir&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;buildFile&amp;gt;&lt;/span&gt;build.gradle&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/buildFile&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;gradleName&amp;gt;&lt;/span&gt;(Default)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/gradleName&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;useWrapper&amp;gt;&lt;/span&gt;true&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/useWrapper&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;makeExecutable&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/makeExecutable&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;fromRootBuildScriptDir&amp;gt;&lt;/span&gt;true&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/fromRootBuildScriptDir&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;useWorkspaceAsHome&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/useWorkspaceAsHome&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/hudson.plugins.gradle.Gradle&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;hudson.plugins.copyartifact.CopyArtifact&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;plugin=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;copyartifact@1.36&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;project&amp;gt;&lt;/span&gt;ParentJob&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;filter&amp;gt;&lt;/span&gt;timestamp.data&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/filter&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;target&amp;gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;excludes&amp;gt;&amp;lt;/excludes&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;selector&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hudson.plugins.copyartifact.TriggeredBuildSelector&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;upstreamFilterStrategy&amp;gt;&lt;/span&gt;UseGlobalSetting&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/upstreamFilterStrategy&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/selector&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;doNotFingerprintArtifacts&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/doNotFingerprintArtifacts&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/hudson.plugins.copyartifact.CopyArtifact&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/builders&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;publishers&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;hudson.tasks.junit.JUnitResultArchiver&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;plugin=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;junit@1.9&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;testResults&amp;gt;&lt;/span&gt;build/test-results/*.xml&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/testResults&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;keepLongStdio&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/keepLongStdio&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;healthScaleFactor&amp;gt;&lt;/span&gt;1.0&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/healthScaleFactor&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/hudson.tasks.junit.JUnitResultArchiver&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/publishers&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;buildWrappers&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;hudson.plugins.ws__cleanup.PreBuildCleanup&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;plugin=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ws-cleanup@0.28&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;deleteDirs&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/deleteDirs&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;cleanupParameter&amp;gt;&amp;lt;/cleanupParameter&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;externalDelete&amp;gt;&amp;lt;/externalDelete&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/hudson.plugins.ws__cleanup.PreBuildCleanup&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/buildWrappers&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Again, the improtant bit is this:&lt;/p&gt;
&lt;p&gt;After the copy is setup, we launch our parent job and if everything is correct, you should see something like this:&lt;/p&gt;
&lt;h1 id=&#34;wrapping-it-up&#34;&gt;Wrapping it Up&lt;/h1&gt;
&lt;p&gt;For final words, important bit to take away from this is that you need an &lt;strong&gt;artifact connection between the jobs&lt;/strong&gt; to make this work. Whatever your downstream / upstream connection is, it doesn&amp;rsquo;t matter. Also, there can be a problem that you have everything set up, and there are artifacts which bind the jobs together but you still can&amp;rsquo;t see the results, then your best option is to specify the jobs BY NAME in the aggregate test plug-in like this:&lt;/p&gt;
&lt;p&gt;I know this is a pain if there are multiple jobs, but at least, jenkins is providing you with Autoexpande once you start typing.&lt;/p&gt;
&lt;p&gt;Of course this also works with multiple downstream jobs if they copy the artifact to themselves.&lt;/p&gt;
&lt;p&gt;Any questions, please feel free to comment and I will answer to the best of my knowledge.&lt;/p&gt;
&lt;p&gt;Cheers,
Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Selenium Testing with Packer and Vagrant</title>
      <link>https://skarlso.github.io/2015/07/16/selenium-testing-with-packer-and-vagrant/</link>
      <pubDate>Thu, 16 Jul 2015 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2015/07/16/selenium-testing-with-packer-and-vagrant/</guid>
      <description>&lt;p&gt;So, recently, the tester team talked to me, that their build takes too long, and why is that? A quick look at their configuration and build scripts showed me, that they are actually using a vagrant box, which never gets destroyed or re-started at least. To remedy this problem, I came up with the following solution.&lt;/p&gt;
&lt;h1 id=&#34;same-old&#34;&gt;Same old.&lt;/h1&gt;
&lt;p&gt;Same as in my previous post, we are going to build a Windows Machine for this purpose. The only addition to my previous settings, will be some Java install, downloading selenium and installing Chrome, and Firefox.&lt;/p&gt;
&lt;h1 id=&#34;installation&#34;&gt;Installation&lt;/h1&gt;
&lt;h4 id=&#34;answer-file&#34;&gt;Answer File&lt;/h4&gt;
&lt;p&gt;Here is the configuration and setup of Windows before the provision phase.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;
...
               &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;SynchronousCommand&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;wcm:action=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;add&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
                  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;CommandLine&amp;gt;&lt;/span&gt;cmd.exe /c C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -File a:\jdk_inst.ps1 -AutoStart&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/CommandLine&amp;gt;&lt;/span&gt;
                  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;Description&amp;gt;&lt;/span&gt;Install Java&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/Description&amp;gt;&lt;/span&gt;
                  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;Order&amp;gt;&lt;/span&gt;103&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/Order&amp;gt;&lt;/span&gt;
                  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;RequiresUserInput&amp;gt;&lt;/span&gt;true&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/RequiresUserInput&amp;gt;&lt;/span&gt;
               &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/SynchronousCommand&amp;gt;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is the part were I&amp;rsquo;m installing Java. The script for the jdk_inst.ps1 is in my previous post, but I&amp;rsquo;ll paste it here for ease of read.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; LogWrite {
   &lt;span style=&#34;color:#66d9ef&#34;&gt;Param&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;[string]&lt;/span&gt;$logstring)
   $now = Get-Date -format s
   Add-Content $Logfile -value &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$now $logstring&amp;#34;&lt;/span&gt;
   Write-Host $logstring
}

$Logfile = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Windows\Temp\jdk-install.log&amp;#34;&lt;/span&gt;

$JDK_VER=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;7u75&amp;#34;&lt;/span&gt;
$JDK_FULL_VER=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;7u75-b13&amp;#34;&lt;/span&gt;
$JDK_PATH=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.7.0_75&amp;#34;&lt;/span&gt;
$source86 = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://download.oracle.com/otn-pub/java/jdk/$JDK_FULL_VER/jdk-$JDK_VER-windows-i586.exe&amp;#34;&lt;/span&gt;
$source64 = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://download.oracle.com/otn-pub/java/jdk/$JDK_FULL_VER/jdk-$JDK_VER-windows-x64.exe&amp;#34;&lt;/span&gt;
$destination86 = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Windows\Temp\$JDK_VER-x86.exe&amp;#34;&lt;/span&gt;
$destination64 = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Windows\Temp\$JDK_VER-x64.exe&amp;#34;&lt;/span&gt;
$client = new-object System.Net.WebClient
$cookie = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;oraclelicense=accept-securebackup-cookie&amp;#34;&lt;/span&gt;
$client.Headers.Add(&lt;span style=&#34;color:#66d9ef&#34;&gt;[System.Net.HttpRequestHeader]&lt;/span&gt;::Cookie, $cookie)

LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Setting Execution Policy level to Bypass&amp;#34;&lt;/span&gt;
Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Bypass -Force

LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Checking if Java is already installed&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ((Test-Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c:\Program Files (x86)\Java&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-Or&lt;/span&gt; (Test-Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c:\Program Files\Java&amp;#34;&lt;/span&gt;)) {
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;No need to Install Java&amp;#39;&lt;/span&gt;
    Exit
}

LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Downloading x86 to $destination86&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {
  $client.downloadFile($source86, $destination86)
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (!(Test-Path $destination86)) {
      LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Downloading $destination86 failed&amp;#34;&lt;/span&gt;
      Exit
  }
  LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Downloading x64 to $destination64&amp;#39;&lt;/span&gt;

  $client.downloadFile($source64, $destination64)
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (!(Test-Path $destination64)) {
      LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Downloading $destination64 failed&amp;#34;&lt;/span&gt;
      Exit
  }
} &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;[Exception]&lt;/span&gt; {
  LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$_.Exception is&amp;#39;&lt;/span&gt; $_.Exception
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Installing JDK-x64&amp;#39;&lt;/span&gt;
    $proc1 = Start-Process -FilePath &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$destination64&amp;#34;&lt;/span&gt; -ArgumentList &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/s REBOOT=ReallySuppress&amp;#34;&lt;/span&gt; -Wait -PassThru
    $proc1.waitForExit()
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Installation Done.&amp;#39;&lt;/span&gt;

    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Installing JDK-x86&amp;#39;&lt;/span&gt;
    $proc2 = Start-Process -FilePath &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$destination86&amp;#34;&lt;/span&gt; -ArgumentList &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/s REBOOT=ReallySuppress&amp;#34;&lt;/span&gt; -Wait -PassThru
    $proc2.waitForExit()
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Installtion Done.&amp;#39;&lt;/span&gt;
} &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;[exception]&lt;/span&gt; {
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$_ is&amp;#39;&lt;/span&gt; $_
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$_.GetType().FullName is&amp;#39;&lt;/span&gt; $_.GetType().FullName
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$_.Exception is&amp;#39;&lt;/span&gt; $_.Exception
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$_.Exception.GetType().FullName is&amp;#39;&lt;/span&gt; $_.Exception.GetType().FullName
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$_.Exception.Message is&amp;#39;&lt;/span&gt; $_.Exception.Message
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ((Test-Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c:\Program Files (x86)\Java&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-Or&lt;/span&gt; (Test-Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c:\Program Files\Java&amp;#34;&lt;/span&gt;)) {
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Java installed successfully.&amp;#39;&lt;/span&gt;
} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Java install Failed!&amp;#39;&lt;/span&gt;
}
LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Setting up Path variables.&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;[System.Environment]&lt;/span&gt;::SetEnvironmentVariable(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JAVA_HOME&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c:\Program Files (x86)\Java\jdk$JDK_PATH&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Machine&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;[System.Environment]&lt;/span&gt;::SetEnvironmentVariable(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PATH&amp;#34;&lt;/span&gt;, $Env:Path + &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;;c:\Program Files (x86)\Java\jdk$JDK_PATH\bin&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Machine&amp;#34;&lt;/span&gt;)
LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Done. Goodbye.&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This installs both x86 and 64 bit version of Java.&lt;/p&gt;
&lt;h1 id=&#34;provision&#34;&gt;Provision&lt;/h1&gt;
&lt;p&gt;I decided to put these into the provision phase to get log messages written out properly. Because in the unattended file, you can&amp;rsquo;t see any progress.&lt;/p&gt;
&lt;h4 id=&#34;chrome-and-firefox&#34;&gt;Chrome And Firefox&lt;/h4&gt;
&lt;p&gt;Installing these two proved a little bit more difficult. Chrome didn&amp;rsquo;t really like me to download their installer without accepting something first, like Java. Luckily, after a LOT of digging, I found a chrome installer which lets you install silently. Here is the script to install the two.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; LogWrite {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;Param&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;[string]&lt;/span&gt;$logstring)
    $now = Get-Date -format s
    Add-Content $Logfile -value &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$now $logstring&amp;#34;&lt;/span&gt;
    Write-Host $logstring
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; CheckLocation {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;Param&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;[string]&lt;/span&gt;$location)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (!(Test-Path  $location)) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;[System.IO.FileNotFoundException]&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Could not download to Destination $location.&amp;#34;&lt;/span&gt;
    }
}

$Logfile = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Windows\Temp\chrome-firefox-install.log&amp;#34;&lt;/span&gt;

$chrome_source = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://dl.google.com/chrome/install/375.126/chrome_installer.exe&amp;#34;&lt;/span&gt;
$chrome_destination = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Windows\Temp\chrome_installer.exe&amp;#34;&lt;/span&gt;
$firefox_source = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://download-installer.cdn.mozilla.net/pub/firefox/releases/39.0/win32/hu/Firefox%20Setup%2039.0.exe&amp;#34;&lt;/span&gt;
$firefox_destination = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Windows\Temp\firefoxinstaller.exe&amp;#34;&lt;/span&gt;

LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Starting to download files.&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Downloading Chrome...&amp;#39;&lt;/span&gt;
    (New-Object System.Net.WebClient).DownloadFile($chrome_source, $chrome_destination)
    CheckLocation $chrome_destination
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Done...&amp;#39;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Downloading Firefox...&amp;#39;&lt;/span&gt;
    (New-Object System.Net.WebClient).DownloadFile($firefox_source, $firefox_destination)
    CheckLocation $firefox_destination
} &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;[Exception]&lt;/span&gt; {
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Exception during download. Probable cause could be that the directory or the file didn&amp;#39;t exist.&amp;#34;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$_.Exception is&amp;#39;&lt;/span&gt; $_.Exception
}

LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Starting firefox install process.&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {
    Start-Process -FilePath $firefox_destination -ArgumentList &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-ms&amp;#34;&lt;/span&gt; -Wait -PassThru
} &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;[Exception]&lt;/span&gt; {
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Exception during install process.&amp;#39;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$_.Exception is&amp;#39;&lt;/span&gt; $_.Exception
}
LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Starting chrome install process.&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {
    Start-Process -FilePath $chrome_destination -ArgumentList &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/silent /install&amp;#34;&lt;/span&gt; -Wait -PassThru
} &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;[Exception]&lt;/span&gt; {
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Exception during install process.&amp;#39;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$_.Exception is&amp;#39;&lt;/span&gt; $_.Exception
}

LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;All done. Goodbye.&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;They both install silently. Pretty neat.&lt;/p&gt;
&lt;h4 id=&#34;selenium&#34;&gt;Selenium&lt;/h4&gt;
&lt;p&gt;This only has to be downloaded, so this is pretty simple. Vagrant will handle the startup of course when it does a vagrant up.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; LogWrite {
   &lt;span style=&#34;color:#66d9ef&#34;&gt;Param&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;[string]&lt;/span&gt;$logstring)
   $now = Get-Date -format s
   Add-Content $Logfile -value &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$now $logstring&amp;#34;&lt;/span&gt;
   Write-Host $logstring
}

$Logfile = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Windows\Temp\selenium-install.log&amp;#34;&lt;/span&gt;

$source = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://selenium-release.storage.googleapis.com/2.46/selenium-server-standalone-2.46.0.jar&amp;#34;&lt;/span&gt;
$destination = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Windows\Temp\selenium-server.jar&amp;#34;&lt;/span&gt;
LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Starting to download selenium file.&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {
  (New-Object System.Net.WebClient).DownloadFile($source, $destination)
} &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;[Exception]&lt;/span&gt; {
  LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Exception during download. Probable cause could be that the directory or the file didn&amp;#39;t exist.&amp;#34;&lt;/span&gt;
  LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$_.Exception is&amp;#39;&lt;/span&gt; $_.Exception
}
LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Download done. Checking if file exists.&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (!(Test-Path $destination)) {
  LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Downloading dotnet Failed!&amp;#39;&lt;/span&gt;
} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
  LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Download successful.&amp;#39;&lt;/span&gt;
}

LogWrite &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;All done. Goodbye.&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Straightforward.&lt;/p&gt;
&lt;h4 id=&#34;the-packer-json-file&#34;&gt;The Packer Json File&lt;/h4&gt;
&lt;p&gt;So putting this all together, here is the Packer JSON file for this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;
{
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;variables&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;vm_name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;win7x64selenium&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;output_dir&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;output_win7_x64_selenium&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;vagrant_box_output&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;box_output&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;cpu_number&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;memory_size&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4096&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;machine_type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pc-1.2&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;accelerator&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kvm&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;disk_format&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;qcow2&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;disk_interface&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;virtio&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;net_device&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;virtio-net&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;cpu_model&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;host&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;disk_cache&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;writeback&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;disk_io&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;native&amp;#34;&lt;/span&gt;
   },

  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;builders&amp;#34;&lt;/span&gt;: [
    {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;virtualbox-iso&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;iso_url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/home/user/vms/windows7.iso&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;iso_checksum_type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sha1&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;iso_checksum&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0BCFC54019EA175B1EE51F6D2B207A3D14DD2B58&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;headless&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;boot_wait&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2m&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ssh_username&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vagrant&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ssh_password&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vagrant&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ssh_wait_timeout&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8h&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;shutdown_command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shutdown /s /t 10 /f /d p:4:1 /c \&amp;#34;Packer Shutdown\&amp;#34;&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;guest_os_type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Windows7_64&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;disk_size&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;61440&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;floppy_files&amp;#34;&lt;/span&gt;: [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./answer_files/7-selenium/Autounattend.xml&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./scripts/dis-updates.ps1&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./scripts/microsoft-updates.bat&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./scripts/openssh.ps1&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./scripts/jdk_inst.ps1&amp;#34;&lt;/span&gt;
      ],
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;vboxmanage&amp;#34;&lt;/span&gt;: [
        [
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modifyvm&amp;#34;&lt;/span&gt;,
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{.Name}}&amp;#34;&lt;/span&gt;,
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--memory&amp;#34;&lt;/span&gt;,
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{user `memory_size`}}&amp;#34;&lt;/span&gt;
        ],
        [
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modifyvm&amp;#34;&lt;/span&gt;,
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{.Name}}&amp;#34;&lt;/span&gt;,
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--cpus&amp;#34;&lt;/span&gt;,
          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{user `cpu_number`}}&amp;#34;&lt;/span&gt;
        ]
      ]
    }
  ],
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;provisioners&amp;#34;&lt;/span&gt;: [
    {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;powershell&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt; : [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./scripts/install-selenium-server.ps1&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./scripts/install-chrome-firefox.ps1&amp;#34;&lt;/span&gt;
      ]
    },{
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shell&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;remote_path&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/tmp/script.bat&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;execute_command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{.Vars}} cmd /c C:/Windows/Temp/script.bat&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;: [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./scripts/vm-guest-tools.bat&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./scripts/vagrant-ssh.bat&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./scripts/rsync.bat&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./scripts/enable-rdp.bat&amp;#34;&lt;/span&gt;
      ]
    }
  ],
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;post-processors&amp;#34;&lt;/span&gt;: [
    {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vagrant&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;keep_input_artifact&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;output&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{user `vm_name`}}_{{.Provider}}.box&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;vagrantfile_template&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vagrantfile-template&amp;#34;&lt;/span&gt;
    }
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;additional-software&#34;&gt;Additional Software&lt;/h4&gt;
&lt;p&gt;This is not done here. Obviously, in order to test your stuff, you first need to install your software on this box. Ideally, everything you need should be in the code you clone to this box, and should be contained mostly. And your application deployment should take core of that. But, if you require something like a DB, postgres, oracle, whatnot, than this is the place where you would install all that.&lt;/p&gt;
&lt;h1 id=&#34;vagrant-and-using-the-packer-box&#34;&gt;Vagrant and Using the Packer Box&lt;/h1&gt;
&lt;p&gt;Now, this has been interesting so far, but how do you actually go about using this image? That&amp;rsquo;s the real question now, isn&amp;rsquo;t it? Having a box, just sitting on a shared folder, doesn&amp;rsquo;t do you too much good. So let&amp;rsquo;s create a Jenkins job, which utilizes this box in a job which runs a bunch of tests for some application.&lt;/p&gt;
&lt;h4 id=&#34;vagrantfile&#34;&gt;Vagrantfile&lt;/h4&gt;
&lt;p&gt;Your vagrant file, could either be generated automatically, under source control ( which is preferred ) or sitting somewhere entirely elsewhere. In any case, it would look something like this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# -*- mode: ruby -*-&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# vi: set ft=ruby :&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;VAGRANTFILE_API_VERSION&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;Vagrant&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;configure(&lt;span style=&#34;color:#66d9ef&#34;&gt;VAGRANTFILE_API_VERSION&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;config&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;

  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;provider &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;virtualbox&amp;#34;&lt;/span&gt;

  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;define &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;selenium-box&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;vs2013&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
    vs2013&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;box &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;windows7-x64-04-selenium&amp;#34;&lt;/span&gt;
    vs2013&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;box_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;path/to/your/share/win7x64_selenium_virtualbox.box&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;env&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;enable

  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;guest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:windows&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;communicator &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;winrm&amp;#34;&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;winrm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;username &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vagrant&amp;#34;&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;winrm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;password &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vagrant&amp;#34;&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;windows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_work_network &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;network &lt;span style=&#34;color:#e6db74&#34;&gt;:forwarded_port&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;guest&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3389&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;host&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RDESKTOP_PORT&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;host_ip&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0.0&amp;#34;&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;network &lt;span style=&#34;color:#e6db74&#34;&gt;:forwarded_port&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;guest&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5985&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;host&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5985&lt;/span&gt;, id: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;winrm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;auto_correct&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;host_ip&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0.0&amp;#34;&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;network &lt;span style=&#34;color:#e6db74&#34;&gt;:forwarded_port&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;guest&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;9991&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;host&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;9991&lt;/span&gt;, id: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;selenium&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;auto_correct&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;host_ip&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.0.0&amp;#34;&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;provider &lt;span style=&#34;color:#e6db74&#34;&gt;:virtualbox&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;vbox&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
    vbox&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gui &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
    vbox&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;memory &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt;
    vbox&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cpus &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;


  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;winrm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;max_tries &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;synced_folder &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/vagrant&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rsync&amp;#34;&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;provision &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shell&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;init.bat&amp;#34;&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;provision &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shell&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utils_inst.bat&amp;#34;&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;provision &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shell&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jenkins_reg.ps1&amp;#34;&lt;/span&gt;
  config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;provision &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shell&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;start_selenium.bat&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Easy, no? Here is the script to start selenium.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;java -jar c:\Windows\Temp\selenium-server.jar -Dhttp.proxyPort=9991
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Straight forward. We also are forwarding the port on which Selenium is running in order for the test to see it.&lt;/p&gt;
&lt;h4 id=&#34;the-jenkins-job&#34;&gt;The Jenkins Job&lt;/h4&gt;
&lt;p&gt;The job can be anything. This is actually too large to cover here. It could be a gradle job, a maven job, an ant, a nant - or whatever is running the test -, job; it&amp;rsquo;s up to you.&lt;/p&gt;
&lt;p&gt;Just make sure that before the test runs, do a &lt;strong&gt;vagrant up&lt;/strong&gt; and after the test finishes, in an ALWAYS TO BE EXECUTED HOOK -like gradle&amp;rsquo;s finalizedBy , call a &lt;strong&gt;vagrant destroy&lt;/strong&gt;. This way, your test will always run on a clean instance that has the necessary stuff on it.&lt;/p&gt;
&lt;h1 id=&#34;closing-words&#34;&gt;Closing words&lt;/h1&gt;
&lt;p&gt;So, there you have it. It&amp;rsquo;s relatively simple. Tying this all into your infrastructure might prove difficult though depending on how rigid your deployment is. But it will always help you make your tests a bit more robust.&lt;/p&gt;
&lt;p&gt;Also, you could run the whole deployment and test phase on a vagrant box, from the start, which is tied to jenkins as a slave and gets started when the job starts and destroyed when the job ends. That way you wouldn&amp;rsquo;t have to create a, box in a box running on a box, kind of effect.&lt;/p&gt;
&lt;p&gt;Thanks for reading,&lt;/p&gt;
&lt;p&gt;Gergely.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Updating All Jenkins Jobs Via Jenkins API – Python</title>
      <link>https://skarlso.github.io/2014/11/07/updating-all-jenkins-jobs-via-jenkins-api-python/</link>
      <pubDate>Fri, 07 Nov 2014 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2014/11/07/updating-all-jenkins-jobs-via-jenkins-api-python/</guid>
      <description>&lt;p&gt;Hello everybody.&lt;/p&gt;
&lt;p&gt;I would like to share with you a small script I wrote to update all, or a single, Jenkins job from a Python script remotely.&lt;/p&gt;
&lt;p&gt;This will enable you to update a Jenkins job from anywhere using an admin credential based on a config.xml template that you have. With this, if you want to apply a config change to all or just a single job in Jenkins, you don&amp;rsquo;t have to go and do it for all the rest. You just call this script and it will cycle through all the jobs you have and update them if the begin with &amp;ldquo;yourpipelinedelimiter&amp;rdquo; or if they aren&amp;rsquo;t in a restricted list of jobs. The delimiter helps to identify pipelines which are dev pipelines. If you have multiple pipelines which are helpers or builders and you don&amp;rsquo;t usually apply the same config to them, than the delimiter can help identify the dev pipelines you actually want to update.&lt;/p&gt;
&lt;p&gt;Enjoy, hope it helps someone.&lt;/p&gt;
&lt;p&gt;And now, without any further ado:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	Created to update multiple pipelines in jenkins with a given configuration and job list.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	Usage:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	Example 1:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	Updating a single pipeline&amp;#39;s job with a given config.xml.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	python update-jenkins-jobs.py job-name config.xml pipeline-name
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	Example 2:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	Updating every pipeline in jenkins dynamically. !!!WARNING!!! This updates every job EXCEPT of the ones specified in restricted_jobs.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	python update-jenkins-jobs.py job-name config.xml
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; xml.dom &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; minidom
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; requests
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;update_pipeline&lt;/span&gt;(pipeline):
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	Takes in a list of pipelines to update.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
	config_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(config_to_use, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;)
	headers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;content-type&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;application/xml&amp;#39;&lt;/span&gt;}
	&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Updating pipelines: &amp;#34;&lt;/span&gt;, pipeline)

	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; dev_job &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; pipeline:
		url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://jenkins:9999/job/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/job/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/config.xml&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (dev_job, job_to_update)
		r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;post(url, data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;config_file, headers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;headers, auth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;))
		&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Updating pipeline: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;; Response Code: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (dev_job, r))


&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_dev_pipelines&lt;/span&gt;():
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	Gets a list of pipelines which can be used by update_pipeline.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
	r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://jenkins:9999/api/xml&amp;#39;&lt;/span&gt;, auth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;), stream&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
	job_list_xml &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text

	xmldoc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; minidom&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parseString(job_list_xml)
	itemlist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xmldoc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getElementsByTagName(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;)

	dev_job_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []

	restricted_jobs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yourpipelinedelimiter-dev-pipeline1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yourpipelinedelimiter-dev-pipeline2&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yourpipelinedelimiter-dev-pipeline3&amp;#34;&lt;/span&gt;]
	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; s &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; itemlist:
	    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yourpipelinedelimiter-dev&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;firstChild&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nodeValue) :
	    	value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;firstChild&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nodeValue
	    	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (value &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; restricted_jobs):
	    		dev_job_list&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(value)

	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; dev_job_list


job_to_update &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
config_to_use &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]
dev_pipeline &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:
	&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Args length:&amp;#34;&lt;/span&gt;, len(sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv))
	dev_pipeline&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;])

update_pipeline(get_dev_pipelines() &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; dev_pipeline &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; dev_pipeline)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Thanks for reading.&lt;/p&gt;
&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
