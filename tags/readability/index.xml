<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Readability on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/tags/readability/</link>
    <description>Recent content in Readability on Ramblings of a cloud engineer</description>
    <generator>Hugo -- 0.136.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 13 Jun 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://skarlso.github.io/tags/readability/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Making your code understandable</title>
      <link>https://skarlso.github.io/2012/06/13/making-your-code-understandable/</link>
      <pubDate>Wed, 13 Jun 2012 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2012/06/13/making-your-code-understandable/</guid>
      <description>&lt;p&gt;Hi!&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve seen this many times over and over again. Many people have wrote books about it already. Like Uncle Bob&amp;rsquo;s Clean Code. Like Pragmatic Programmer by Andrew Hunt and David Thomas. What makes your code understandable to others.&lt;/p&gt;
&lt;p&gt;Is it &lt;strong&gt;Comments&lt;/strong&gt;?&lt;/p&gt;
&lt;p&gt;No. It&amp;rsquo;s not comments. If your code could be read properly you wouldn&amp;rsquo;t need comments to explain what it does. Like Uncle Bob said. A good code doesn&amp;rsquo;t contain surprises. It does exactly what you would think it should do on the next line. It doesn&amp;rsquo;t have curves and misinformation. It doesn&amp;rsquo;t have plots and turns of events like a good crime book. No. Good code is a like a boring soap opera with predictable plot and boring plain characters who don&amp;rsquo;t change there behavior based on circumstances.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
