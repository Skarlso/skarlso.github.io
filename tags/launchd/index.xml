<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>launchd on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/tags/launchd/</link>
    <description>Recent content in launchd on Ramblings of a cloud engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 26 Oct 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://skarlso.github.io/tags/launchd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kill a Program on Connecting to a specific WiFi â€“ OSX</title>
      <link>https://skarlso.github.io/2015/10/26/kill-a-program-on-connecting-to-a-specific-wifi-osx/</link>
      <pubDate>Mon, 26 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/26/kill-a-program-on-connecting-to-a-specific-wifi-osx/</guid>
      <description>Hi folks.
If you have the tendency, like me, to forget that you are on the corporate VPN, or leave a certain software open when you bring your laptop to work, this might be helpful to you too.
It&amp;rsquo;s a small script which kills a program when you change your Wifi network.
Script:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63  #!</description>
      <content type="html"><![CDATA[<p>Hi folks.</p>
<p>If you have the tendency, like me, to forget that you are on the corporate VPN, or leave a certain software open when you bring your laptop to work, this might be helpful to you too.</p>
<p>It&rsquo;s a small script which kills a program when you change your Wifi network.</p>
<p>Script:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">
<span class="c1">#!/bin/bash</span>

<span class="k">function</span> log <span class="o">{</span>
    <span class="nv">directory</span><span class="o">=</span><span class="s2">&#34;/Users/&lt;username&gt;/wifi_detect&#34;</span>
    <span class="nv">log_dir_exists</span><span class="o">=</span><span class="nb">true</span>
    <span class="k">if</span> <span class="o">[</span> ! -d <span class="nv">$directory</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
        <span class="nb">echo</span> <span class="s2">&#34;Attempting to create =&gt; </span><span class="nv">$directory</span><span class="s2">&#34;</span>
        mkdir -p <span class="nv">$directory</span>
        <span class="k">if</span> <span class="o">[</span> ! -d <span class="nv">$directory</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
            <span class="nb">echo</span> <span class="s2">&#34;Could not create directory. Continue to log to echo.&#34;</span>
            <span class="nv">log_dir_exists</span><span class="o">=</span><span class="nb">false</span>
        <span class="k">fi</span>
    <span class="k">fi</span>
    <span class="k">if</span> <span class="nv">$log_dir_exists</span> <span class="p">;</span> <span class="k">then</span>
        <span class="nb">echo</span> <span class="s2">&#34;</span><span class="k">$(</span>date<span class="k">)</span><span class="s2">:</span><span class="nv">$1</span><span class="s2">&#34;</span> &gt;&gt; <span class="s2">&#34;</span><span class="nv">$directory</span><span class="s2">/log.txt&#34;</span>
    <span class="k">else</span>
        <span class="nb">echo</span> <span class="s2">&#34;</span><span class="k">$(</span>date<span class="k">)</span><span class="s2">:</span><span class="nv">$1</span><span class="s2">&#34;</span>
    <span class="k">fi</span>
<span class="o">}</span>

<span class="k">function</span> check_program <span class="o">{</span>
    <span class="nv">to_kill</span><span class="o">=</span><span class="s2">&#34;[</span><span class="si">${</span><span class="nv">1</span><span class="p">::</span><span class="nv">1</span><span class="si">}</span><span class="s2">]</span><span class="si">${</span><span class="nv">1</span><span class="p">:</span><span class="nv">1</span><span class="si">}</span><span class="s2">&#34;</span>
    log <span class="s2">&#34;Checking if </span><span class="nv">$to_kill</span><span class="s2"> really quit.&#34;</span>
    <span class="nv">ps</span><span class="o">=</span><span class="k">$(</span>ps aux <span class="p">|</span>grep <span class="s2">&#34;</span><span class="nv">$to_kill</span><span class="s2">&#34;</span><span class="k">)</span>
    log <span class="s2">&#34;ps =&gt; </span><span class="nv">$ps</span><span class="s2">&#34;</span>
    <span class="k">if</span> <span class="o">[</span> -z <span class="s2">&#34;</span><span class="nv">$ps</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
	<span class="c1"># 0 - True</span>
        <span class="k">return</span>
    <span class="k">else</span>
	<span class="c1"># 1 - False</span>
        <span class="k">return</span> <span class="m">1</span>
    <span class="k">fi</span>
<span class="o">}</span>

<span class="k">function</span> kill_program <span class="o">{</span>
    log <span class="s2">&#34;Killing program&#34;</span>
    <span class="sb">`</span>pkill -f <span class="s2">&#34;</span><span class="nv">$1</span><span class="s2">&#34;</span><span class="sb">`</span>
    sleep <span class="m">1</span>
    <span class="k">if</span> ! check_program <span class="nv">$1</span> <span class="p">;</span> <span class="k">then</span>
	log <span class="s2">&#34;</span><span class="nv">$1</span><span class="s2"> Did not quit!&#34;</span>
    <span class="k">else</span>
	log <span class="s2">&#34;</span><span class="nv">$1</span><span class="s2"> quit successfully&#34;</span>
    <span class="k">fi</span>
<span class="o">}</span>

<span class="nv">wifi_name</span><span class="o">=</span><span class="k">$(</span>networksetup -getairportnetwork en0 <span class="p">|</span>awk -F<span class="s2">&#34;: &#34;</span> <span class="s1">&#39;{print $2}&#39;</span><span class="k">)</span>
log <span class="s2">&#34;Wifi name: </span><span class="nv">$wifi_name</span><span class="s2">&#34;</span>
<span class="k">if</span> <span class="o">[</span> <span class="s2">&#34;</span><span class="nv">$wifi_name</span><span class="s2">&#34;</span> <span class="o">=</span> <span class="s2">&#34;&lt;wifi_name&gt;&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
    log <span class="s2">&#34;On corporate network... Killing Program&#34;</span>
    kill_program <span class="s2">&#34;&lt;programname&gt;&#34;</span>
<span class="k">elif</span> <span class="o">[</span> <span class="s2">&#34;</span><span class="nv">$wifi_name</span><span class="s2">&#34;</span> <span class="o">=</span> <span class="s2">&#34;&lt;home_wifi_name&gt;&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
    <span class="c1"># Kill &lt;program&gt; if enabled and if on &lt;home_wifi&gt; and if Tunnelblick is running.</span>
    log <span class="s2">&#34;Not on corporate network... Killing &lt;program&gt; if Tunnelblick is active.&#34;</span>
    <span class="k">if</span> ! check_program <span class="s2">&#34;Tunnelblick&#34;</span> <span class="p">;</span> <span class="k">then</span>
	log <span class="s2">&#34;Tunnelblick is active. Killing &lt;program&gt;&#34;</span>
	kill_program <span class="s2">&#34;&lt;program&gt;&#34;</span>
    <span class="k">else</span>
	log <span class="s2">&#34;All good... Happy coding.&#34;</span>
    <span class="k">fi</span>
<span class="k">else</span>
    log <span class="s2">&#34;No known Network...&#34;</span>
<span class="k">fi</span>
</code></pre></td></tr></table>
</div>
</div><p>Now, the trick is, on OSX to only trigger this when your network changes. For this, you can have a &lsquo;launchd&rsquo; daemon, which is configured to watch three files which relate to a network being changed.</p>
<p>The script sits under your ~/Library/LaunchAgents folder. Create something like, com.username.checknetwork.plist.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml">
<span class="cp">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;</span>
<span class="cp">&lt;!DOCTYPE plist PUBLIC &#34;-//Apple Computer//DTD PLIST 1.0//EN&#34; \
</span><span class="cp"> &#34;http://www.apple.com/DTDs/PropertyList-1.0.dtd&#34;&gt;</span>
<span class="nt">&lt;plist</span> <span class="na">version=</span><span class="s">&#34;1.0&#34;</span><span class="nt">&gt;</span>
<span class="nt">&lt;dict&gt;</span>
  <span class="nt">&lt;key&gt;</span>Label<span class="nt">&lt;/key&gt;</span>
  <span class="nt">&lt;string&gt;</span>ifup.ddns<span class="nt">&lt;/string&gt;</span>

  <span class="nt">&lt;key&gt;</span>LowPriorityIO<span class="nt">&lt;/key&gt;</span>
  <span class="nt">&lt;true/&gt;</span>

  <span class="nt">&lt;key&gt;</span>ProgramArguments<span class="nt">&lt;/key&gt;</span>
  <span class="nt">&lt;array&gt;</span>
    <span class="nt">&lt;string&gt;</span>/Users/username/scripts/ddns-update.sh<span class="nt">&lt;/string&gt;</span>
  <span class="nt">&lt;/array&gt;</span>

  <span class="nt">&lt;key&gt;</span>WatchPaths<span class="nt">&lt;/key&gt;</span>
  <span class="nt">&lt;array&gt;</span>
    <span class="nt">&lt;string&gt;</span>/etc/resolv.conf<span class="nt">&lt;/string&gt;</span>
    <span class="nt">&lt;string&gt;</span>/Library/Preferences/SystemConfiguration/NetworkInterfaces.plist<span class="nt">&lt;/string&gt;</span>
    <span class="nt">&lt;string&gt;</span>/Library/Preferences/SystemConfiguration/com.apple.airport.preferences.plist<span class="nt">&lt;/string&gt;</span>
  <span class="nt">&lt;/array&gt;</span>

  <span class="nt">&lt;key&gt;</span>RunAtLoad<span class="nt">&lt;/key&gt;</span>
  <span class="nt">&lt;true/&gt;</span>
<span class="nt">&lt;/dict&gt;</span>
<span class="nt">&lt;/plist&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>Now, when you change your network, to whatever your corporate network is, you&rsquo;ll kill Sublime.</p>
<p>Hope this helps somebody.</p>
<p>Cheers,</p>
<p>Gergely.</p>
]]></content>
    </item>
    
  </channel>
</rss>