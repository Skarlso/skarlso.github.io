<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Ramblings of a build engineer</title>
    <link>https://skarlso.github.io/categories/programming/</link>
    <description>Recent content in Programming on Ramblings of a build engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 20 Nov 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://skarlso.github.io/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Go JIRA API client</title>
      <link>https://skarlso.github.io/2015/11/20/go-jira-api-client/</link>
      <pubDate>Fri, 20 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/11/20/go-jira-api-client/</guid>
      <description>&lt;p&gt;Hi folks.&lt;/p&gt;

&lt;p&gt;So, I was playing around and created a client for JIRA written in Go. It was nice to do some JSON transformation. And sending POSTS was really trivial.&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s still in it&amp;#8217;s infancy and I have a couple of more features I want to implement, but, here is the code&amp;#8230;&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;go&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;package&lt;/span&gt; main
&amp;nbsp;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;bytes&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;encoding/json&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;flag&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;fmt&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;io/ioutil&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;log&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;net/http&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;os&#34;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;github.com/BurntSushi/toml&#34;&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;var&lt;/span&gt; configFile &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;~/.jira_config.toml&#34;&lt;/span&gt;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;var&lt;/span&gt; parameter &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;var&lt;/span&gt; flags &lt;span style=&#34;color: #993333;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    Comment     &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;
    Description &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;
    IssueKey    &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;
    Priority    &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;
    Resolution  &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;
    Title       &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;
    Project     &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//Issue is a representation of a Jira Issue&lt;/span&gt;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;type&lt;/span&gt; Issue &lt;span style=&#34;color: #993333;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    Fields &lt;span style=&#34;color: #993333;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        Project &lt;span style=&#34;color: #993333;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            Key &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;`json:&#34;key&#34;`&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;`json:&#34;project&#34;`&lt;/span&gt;
        Summary     &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;`json:&#34;summary&#34;`&lt;/span&gt;
        Description &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;`json:&#34;description&#34;`&lt;/span&gt;
        Issuetype   &lt;span style=&#34;color: #993333;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            Name &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;`json:&#34;name&#34;`&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;`json:&#34;issuetype&#34;`&lt;/span&gt;
        Priority &lt;span style=&#34;color: #993333;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            ID &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;`json:&#34;id&#34;`&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;`json:&#34;priority&#34;`&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;`json:&#34;fields&#34;`&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//Transition defines a transition json object. Used for starting, stoppinp&lt;/span&gt;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//generally for state stranfer&lt;/span&gt;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;type&lt;/span&gt; Transition &lt;span style=&#34;color: #993333;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    Fields &lt;span style=&#34;color: #993333;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        Resolution &lt;span style=&#34;color: #993333;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            Name &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;`json:&#34;name&#34;`&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;`json:&#34;resolution&#34;`&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;`json:&#34;fields&#34;`&lt;/span&gt;
    Transition &lt;span style=&#34;color: #993333;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        ID &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;`json:&#34;id&#34;`&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;`json:&#34;transition&#34;`&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//Credentials a representation of a JIRA config which helds API permissions&lt;/span&gt;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;type&lt;/span&gt; Credentials &lt;span style=&#34;color: #993333;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    Username &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;
    Password &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;
    URL      &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; init&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    flag&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;StringVar&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&amp;flags&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Comment&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;m&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Default Comment&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;A Comment when changing the status of an Issue.&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    flag&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;StringVar&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;&amp;&lt;/span&gt;flags&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Description&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;d&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Default Description&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Provide a description for a newly created Issue.&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    flag&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;StringVar&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;&amp;&lt;/span&gt;flags&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Priority&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;p&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;2&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;The priority of an Issue which will be set.&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    flag&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;StringVar&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;&amp;&lt;/span&gt;flags&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;IssueKey&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;k&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Issue key of an issue.&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    flag&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;StringVar&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;&amp;&lt;/span&gt;flags&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Resolution&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;r&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Done&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Resolution when an issue is closed. Ex.: Done, Fixed, Won&#39;t fix.&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    flag&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;StringVar&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;&amp;&lt;/span&gt;flags&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Title&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;t&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Default Title&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Title of an Issue.&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    flag&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;StringVar&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;&amp;&lt;/span&gt;flags&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Project&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;o&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;IT&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Define a Project to create a ticket in.&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    flag&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Parse&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;cred &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;Credentials&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; initConfig&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; _&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; os&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Stat&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;configFile&lt;span style=&#34;color: #339933;&#34;&gt;);&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        log&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Fatalf&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Error using config file: %v&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; err&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; _&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; toml&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;DecodeFile&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;configFile&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; cred&lt;span style=&#34;color: #339933;&#34;&gt;);&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        log&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Fatal&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Error during decoding toml config: &#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; err&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; main&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;flag&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Args&lt;span style=&#34;color: #339933;&#34;&gt;())&lt;/span&gt; &amp;lt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        log&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Fatal&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Please provide an action to take. Usage information:&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    parameter &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; flag&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Arg&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;switch&lt;/span&gt; parameter &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;close&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt;
        closeIssue&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;flags&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;IssueKey&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;start&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt;
        startIssue&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;flags&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;IssueKey&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;create&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt;
        createIssue&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; closeIssue&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;issueKey &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; issueKey &lt;span style=&#34;color: #339933;&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;&#34;&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        log&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Fatal&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Please provide an issueID with -k&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Closing issue number: &#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; issueKey&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;var&lt;/span&gt; trans Transition
&amp;nbsp;
    &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//TODO: Add the ability to define a comment for the close reason&lt;/span&gt;
    trans&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Fields&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Resolution&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Name&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; flags&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Resolution&lt;/span&gt;
    trans&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Transition&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;ID&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;2&#34;&lt;/span&gt;
    marhsalledTrans&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; json&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Marshal&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;trans&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        log&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Fatal&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Error occured when marshaling transition: &#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; err&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Marshalled:&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; trans&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    sendRequest&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;marhsalledTrans&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;POST&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; issueKey&lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;/transitions?expand=transitions.fields&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; startIssue&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;issueID &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; issueID &lt;span style=&#34;color: #339933;&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;&#34;&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        log&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Fatal&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Please provide an issueID with -i&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Starting issue number:&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; issueID&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; createIssue&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Println&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Creating new issue.&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;var&lt;/span&gt; issue Issue
    issue&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Fields&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Description &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; flags&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Description
    issue&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Fields&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Priority&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;ID &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; flags&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Priority
    issue&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Fields&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Summary &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; flags&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Title
    issue&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Fields&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Project&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Key &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; flags&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Project
    issue&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Fields&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Issuetype&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Name &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Task&#34;&lt;/span&gt;
    marshalledIssue&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; json&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Marshal&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;issue&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        log&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Fatal&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Error occured when Marshaling Issue:&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; err&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    sendRequest&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;marshalledIssue&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;POST&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; sendRequest&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;jsonStr &lt;span style=&#34;color: #339933;&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; method &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; url &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    cred &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &amp;Credentials&lt;span style=&#34;color: #339933;&#34;&gt;{}&lt;/span&gt;
    cred&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;initConfig&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt;
    fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Println&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Json:&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;jsonStr&lt;span style=&#34;color: #339933;&#34;&gt;))&lt;/span&gt;
    req&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; http&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;NewRequest&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;method&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; cred&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;URL&lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt;url&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; bytes&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;NewBuffer&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;jsonStr&lt;span style=&#34;color: #339933;&#34;&gt;))&lt;/span&gt;
    req&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Header&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Set&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Content-Type&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;application/json&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    req&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;SetBasicAuth&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;cred&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Username&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; cred&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Password&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
&amp;nbsp;
    client &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &amp;http&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Client&lt;span style=&#34;color: #339933;&#34;&gt;{}&lt;/span&gt;
    resp&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; client&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Do&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;req&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #000066;&#34;&gt;panic&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;defer&lt;/span&gt; resp&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Body&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Close&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt;
&amp;nbsp;
    fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Println&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;response Status:&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; resp&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Status&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;response Headers:&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; resp&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Header&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    body&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; _ &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; ioutil&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;ReadAll&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;resp&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Body&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;response Body:&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;body&lt;span style=&#34;color: #339933;&#34;&gt;))&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;It can also be found under my github page: &lt;a href=&#34;https://github.com/Skarlso/goprojects/tree/master/gojira&#34; target=&#34;_blank&#34;&gt;GoJira Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to open up issues if you would like to use it and need some features which you would find interesting. Currently the username and password for the API are stored in a local config file in your home folder. Later on, I&amp;#8217;ll add the ability to have a token rather than a username:password combination.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The One Hundred Day GitHub Challenge</title>
      <link>https://skarlso.github.io/2015/11/15/the-one-hundred-day-github-challenge/</link>
      <pubDate>Sun, 15 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/11/15/the-one-hundred-day-github-challenge/</guid>
      <description>&lt;p&gt;Hello folks.&lt;/p&gt;

&lt;p&gt;Today, I present to you the One Hundred Day Github Challenge.&lt;/p&gt;

&lt;p&gt;The rules are simple:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Minimum of &lt;strong&gt;One&lt;/strong&gt; commit every day for a &lt;strong&gt;Hundred days&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Commit has to be &lt;strong&gt;meaningful&lt;/strong&gt; but can be as little as a fix in a Readme.md.&lt;/li&gt;
&lt;li&gt;Doesn&amp;#8217;t matter if you are on vacation, there are no exceptions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;There. Are. No. Exceptions.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;fail&lt;/strong&gt; a day, you have to &lt;strong&gt;start over&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No cheating.&lt;/strong&gt; You only cheat yourself, so this is really up to you.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let me be more clear here, because it seems I wasn&amp;#8217;t clear enough. What you make out of this challenge, it&amp;#8217;s up to you. If you just update a readme.md for hundred days, that&amp;#8217;s fine. Just do it every day. It&amp;#8217;s a commitment. At least you&amp;#8217;ll have a nice Readme.&lt;/p&gt;

&lt;p&gt;Also, let me be clear on another thing. THERE ARE NO EXCEPTIONS. Even on holidays. No. Exceptions.&lt;/p&gt;

&lt;p&gt;So there you have it. It&amp;#8217;s easy, but then again, it&amp;#8217;s not.&lt;/p&gt;

&lt;p&gt;Mine starts today! 100&amp;#8230;&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;p&gt;And happy coding.&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Go Progress Quest</title>
      <link>https://skarlso.github.io/2015/11/09/go-progress-quest/</link>
      <pubDate>Mon, 09 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/11/09/go-progress-quest/</guid>
      <description>&lt;p&gt;Hi Folks.&lt;/p&gt;

&lt;p&gt;I started to build a Progress Quest type of web app in Go.&lt;/p&gt;

&lt;p&gt;If you&amp;#8217;d like to join, or just tag along, please drop by here =&amp;gt; &lt;a href=&#34;https://github.com/Skarlso/goprogressquest&#34; target=&#34;_blank&#34;&gt;Go Progress Quest&lt;/a&gt; and feel free to submit an issue if you have an idea, or would like to contribute!&lt;/p&gt;

&lt;p&gt;I will try and document the Progress&amp;#8230;&lt;/p&gt;

&lt;p&gt;Thank you for reading!&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Circular buffer in Go</title>
      <link>https://skarlso.github.io/2015/10/15/circular-buffer-in-go/</link>
      <pubDate>Thu, 15 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/15/circular-buffer-in-go/</guid>
      <description>&lt;p&gt;I&amp;#8217;m proud of this one too. No peaking. I like how go let&amp;#8217;s you do this kind of stuff in a very nice way.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;go&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;package&lt;/span&gt; circular
&amp;nbsp;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;fmt&#34;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//TestVersion testVersion&lt;/span&gt;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;const&lt;/span&gt; TestVersion &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//Buffer buffer type&lt;/span&gt;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;type&lt;/span&gt; Buffer &lt;span style=&#34;color: #993333;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    buffer &lt;span style=&#34;color: #339933;&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;byte&lt;/span&gt;
    full   &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;
    size   &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;
    s&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; e   &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//NewBuffer creates a new Buffer&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; NewBuffer&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;size &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;Buffer &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; &amp;Buffer&lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;buffer&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;([]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; size&lt;span style=&#34;color: #339933;&#34;&gt;),&lt;/span&gt; s&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; e&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; size&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; size&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; full&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//ReadByte reads a byte from b Buffer&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;Buffer&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; ReadByte&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; error&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;full &lt;span style=&#34;color: #339933;&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Errorf&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Danger Will Robinson: %s&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    readByte &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;buffer&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;s&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt;
    b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;s &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;s &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;%&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;size
    b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;full&lt;span style=&#34;color: #339933;&#34;&gt;--&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; readByte&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;nil&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//WriteByte writes c byte to the buffer&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;Buffer&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; WriteByte&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;c &lt;span style=&#34;color: #993333;&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; error &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;full&lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt; &amp;gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;size &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Errorf&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Danger Will Robinson: %s&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;buffer&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;e&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; c
    b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;e &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;e &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;%&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;size
    b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;full&lt;span style=&#34;color: #339933;&#34;&gt;++&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;nil&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//Overwrite overwrites the oldest byte in Buffer&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;Buffer&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; Overwrite&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;c &lt;span style=&#34;color: #993333;&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;buffer&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;s&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; c
    b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;s &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;s &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;%&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;size
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//Reset resets the buffer&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;Buffer&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; Reset&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;b &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;NewBuffer&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;size&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//String for a string representation of Buffer&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;Buffer&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; String&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Sprintf&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Buffer: %d, %d, %d, %d&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;buffer&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Jenkins Job DSL and Groovy goodness</title>
      <link>https://skarlso.github.io/2015/10/15/jenkins-job-dsl-and-groovy-goodness/</link>
      <pubDate>Thu, 15 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/15/jenkins-job-dsl-and-groovy-goodness/</guid>
      <description>&lt;p&gt;Hi Folks.&lt;/p&gt;

&lt;p&gt;Ever used &lt;a href=&#34;https://wiki.jenkins-ci.org/display/JENKINS/Job+DSL+Plugin&#34; target=&#34;_blank&#34;&gt;Job DSL plugin&lt;/a&gt; for Jenkins? What is that you say? Well, it&amp;#8217;s TEH most awesome plug-in for Jenkins to have, because you can CODE your job configuration and put it under source control.&lt;/p&gt;

&lt;p&gt;Today, however, I&amp;#8217;m not going to write about that because the tutorials on Jenkins JOB DSL are very extensive and very well done. Anyone can pick them up.&lt;/p&gt;

&lt;p&gt;Today, I would like to write about a part of it which is even more interesting. And that is, extracting re-occurring parts in your job configurations.&lt;/p&gt;

&lt;p&gt;If you have jobs, which have a common part that is repeated everywhere, you usually have an urge to extracted that into one place, lest it changes and you have to go an apply the change everywhere. That&amp;#8217;s not very efficient. But how do you do that in something which looks like a JSON descriptor?&lt;/p&gt;

&lt;p&gt;Fret not, it is just Groovy. And being just groovy, you can use Groovy to implement parts of the job description and then apply that implementation to the job in the DSL.&lt;/p&gt;

&lt;p&gt;Suppose you have an email which you send after every job for which the DSL looks like this:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;groovy&#34; style=&#34;font-family:monospace;&#34;&gt;job&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;MyTestJob&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
    description &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;&amp;lt;strong&amp;gt;GENERATED - do not modify&amp;lt;/strong&amp;gt;&#39;&lt;/span&gt;
    label&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;machine_label&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
    logRotator&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;30&lt;/span&gt;, &lt;span style=&#34;color: #66cc66;&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #66cc66;&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #cc66cc;&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
    parameters &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
        stringParam&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;somestringparam&#39;&lt;/span&gt;, &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;default_valye&#39;&lt;/span&gt;, &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;Description&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
    wrappers &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
        timeout &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
            noActivity&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;600&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
            abortBuild&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
            failBuild&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
            writeDescription&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;Build failed due to timeout after {0} minutes&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
        &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
    &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
    deliveryPipelineConfiguration&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;Main&#34;&lt;/span&gt;, &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;MyTestJob&#34;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
    wrappers &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
        preBuildCleanup &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
            deleteDirectories&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
        &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
        timestamps&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
    triggers &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
        cron&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;H 12 * * 1,2&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
    steps &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
        batchFile&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;readFileFromWorkspace&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;relative/path/to/file&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
            publishers &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
                wsCleanup&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
                extendedEmail&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;email@address.com&#39;&lt;/span&gt;, &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_SUBJECT&#39;&lt;/span&gt;, &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_CONTENT&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
                    configure &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt; node &lt;span style=&#34;color: #66cc66;&#34;&gt;-&amp;gt;&lt;/span&gt;
                        node / presendScript &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; readFileFromWorkspace&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;email_templates/emailtemplate.groovy&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
                        node / replyTo &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_REPLYTO&#39;&lt;/span&gt;
                        node / contentType &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;default&#39;&lt;/span&gt;
                    &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
                    trigger&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;triggerName: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;StillUnstable&#39;&lt;/span&gt;, subject: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_SUBJECT&#39;&lt;/span&gt;, body: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_CONTENT&#39;&lt;/span&gt;, replyTo: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_REPLYTO&#39;&lt;/span&gt;, sendToDevelopers: &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;true&lt;/span&gt;, sendToRecipientList: &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
                    trigger&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;triggerName: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;Fixed&#39;&lt;/span&gt;, subject: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_SUBJECT&#39;&lt;/span&gt;, body: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_CONTENT&#39;&lt;/span&gt;, replyTo: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_REPLYTO&#39;&lt;/span&gt;, sendToDevelopers: &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;true&lt;/span&gt;, sendToRecipientList: &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
                    trigger&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;triggerName: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;Failure&#39;&lt;/span&gt;, subject: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_SUBJECT&#39;&lt;/span&gt;, body: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_CONTENT&#39;&lt;/span&gt;, replyTo: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_REPLYTO&#39;&lt;/span&gt;, sendToDevelopers: &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;true&lt;/span&gt;, sendToRecipientList: &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
                &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
            &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Now, that big chunk of email setting is copied into a bunch of files, which is pretty ugly. And once you try to change it, you&amp;#8217;ll have to change it everywhere. Also, the interesting bits here are those readFileFromWorkspace parts. Those allow us to export even larger chunks of the script into external files. Now, because the slave might be located somewhere else, you should not use new File(&amp;#8216;file&amp;#8217;).text in your job DSL. readFileFromWorkspace in the background does that, but applies correct way to the PATH it looks on for the file specified.&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s put this into a groovy script, shall we? Create a utilities folder where the DSL is and create a groovy file in it like this one:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;groovy&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color: #a1a100;&#34;&gt;utilities&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;class&lt;/span&gt; JobCommonTemplate &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #993333;&#34;&gt;void&lt;/span&gt; addEmailTemplate&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;def&lt;/span&gt; job, &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;def&lt;/span&gt; dslFactory&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
        &lt;span style=&#34;color: #aaaadd; font-weight: bold;&#34;&gt;String&lt;/span&gt; emailScript &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; dslFactory.&lt;span style=&#34;color: #006600;&#34;&gt;readFileFromWorkspace&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;email_template/EmailTemplate.groovy&#34;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
        job.&lt;span style=&#34;color: #006600;&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
            publishers &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
                wsCleanup&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
                extendedEmail&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;email@address.com&#39;&lt;/span&gt;, &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_SUBJECT&#39;&lt;/span&gt;, &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_CONTENT&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
                    configure &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt; node &lt;span style=&#34;color: #66cc66;&#34;&gt;-&amp;gt;&lt;/span&gt;
                        node / presendScript &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; emailScript
                        node / replyTo &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_REPLYTO&#39;&lt;/span&gt;
                        node / contentType &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;default&#39;&lt;/span&gt;
                    &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
                    trigger&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;triggerName: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;StillUnstable&#39;&lt;/span&gt;, subject: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_SUBJECT&#39;&lt;/span&gt;, body: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_CONTENT&#39;&lt;/span&gt;, replyTo: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_REPLYTO&#39;&lt;/span&gt;, sendToDevelopers: &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;true&lt;/span&gt;, sendToRecipientList: &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
                    trigger&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;triggerName: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;Fixed&#39;&lt;/span&gt;, subject: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_SUBJECT&#39;&lt;/span&gt;, body: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_CONTENT&#39;&lt;/span&gt;, replyTo: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_REPLYTO&#39;&lt;/span&gt;, sendToDevelopers: &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;true&lt;/span&gt;, sendToRecipientList: &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
                    trigger&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;triggerName: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;Failure&#39;&lt;/span&gt;, subject: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_SUBJECT&#39;&lt;/span&gt;, body: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_CONTENT&#39;&lt;/span&gt;, replyTo: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;$DEFAULT_REPLYTO&#39;&lt;/span&gt;, sendToDevelopers: &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;true&lt;/span&gt;, sendToRecipientList: &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
                &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
            &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
        &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
    &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;The function addEmailTemplate gets two parameters. A job, which is an implementation of a Job, and a dslFactory which is a DslFactory. That factory is an interface which defines our readFileFromWorkspace. Where do we get the implementation from then? That will be from the Job. Let&amp;#8217;s alter our job to apply this Groovy script.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;groovy&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #a1a100;&#34;&gt;utilities.JobCommonTemplate&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;def&lt;/span&gt; myJob &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; job&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;MyTestJob&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
    description &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;&amp;lt;strong&amp;gt;GENERATED - do not modify&amp;lt;/strong&amp;gt;&#39;&lt;/span&gt;
    label&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;machine_label&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
    logRotator&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;30&lt;/span&gt;, &lt;span style=&#34;color: #66cc66;&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #66cc66;&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #cc66cc;&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
    parameters &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
        stringParam&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;somestringparam&#39;&lt;/span&gt;, &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;default_valye&#39;&lt;/span&gt;, &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;Description&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
    wrappers &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
        timeout &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
            noActivity&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;600&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
            abortBuild&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
            failBuild&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
            writeDescription&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;Build failed due to timeout after {0} minutes&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
        &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
    &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
    deliveryPipelineConfiguration&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;Main&#34;&lt;/span&gt;, &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;MyTestJob&#34;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
    wrappers &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
        preBuildCleanup &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
            deleteDirectories&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
        &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
        timestamps&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
    triggers &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
        cron&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;H 12 * * 1,2&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
    steps &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#123;&lt;/span&gt;
        batchFile&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;readFileFromWorkspace&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;relative/path/to/file&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
JobCommonTemplate.&lt;span style=&#34;color: #006600;&#34;&gt;addEmailTemplate&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#40;&lt;/span&gt;myJob, &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Notice three things here.&lt;/p&gt;

&lt;p&gt;#1 =&amp;gt; &lt;strong&gt;import&lt;/strong&gt;. We import the script from utilities folder which we created and placed the script into it.&lt;/p&gt;

&lt;p&gt;#2 =&amp;gt; &lt;strong&gt;def myJob&lt;/strong&gt;. We create a variable which will contain our job&amp;#8217;s description.&lt;/p&gt;

&lt;p&gt;#3 =&amp;gt; &lt;strong&gt;this&lt;/strong&gt;. &amp;#8216;this&amp;#8217; will be the DslFactory. That&amp;#8217;s where we get our readFileFromWorkspace implementation.&lt;/p&gt;

&lt;p&gt;And that&amp;#8217;s it. We have extracted a part of our job which is re-occurring and we found our implementation for our readFileFromWorkspace. DslFactory has most of the things which you need in a job description, would you want to expand on this and extract other bits and pieces.&lt;/p&gt;

&lt;p&gt;Have fun, and happy coding!&lt;/p&gt;

&lt;p&gt;As always,&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DataMunger Kata with Go</title>
      <link>https://skarlso.github.io/2015/10/04/datamunger-kata-with-go/</link>
      <pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/04/datamunger-kata-with-go/</guid>
      <description>&lt;p&gt;Quickly wrote up the Data Munger code kata in Go.&lt;/p&gt;

&lt;p&gt;Next time, I want better abstractions. And a way to select columns based on their header data. For now, this is not bad.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;go&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;package&lt;/span&gt; main
&amp;nbsp;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;bufio&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;fmt&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;log&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;math&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;os&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;regexp&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;strconv&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;strings&#34;&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//Data which is Data&lt;/span&gt;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;type&lt;/span&gt; Data &lt;span style=&#34;color: #993333;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    columnName &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;
    compareOne &lt;span style=&#34;color: #993333;&#34;&gt;float64&lt;/span&gt;
    compareTwo &lt;span style=&#34;color: #993333;&#34;&gt;float64&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; main&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;// datas := []Data{WeatherData{}, FootballData{}}&lt;/span&gt;
    fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Minimum weather data:&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; GetDataMinimumDiff&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;weather.dat&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;))&lt;/span&gt;
    fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Println&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Minimum football data:&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; GetDataMinimumDiff&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;football.dat&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//GetDataMinimumDiff gathers data from file to fill up Columns.&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; GetDataMinimumDiff&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;filename &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; nameColumn &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; compareColOne &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; compareColTwo &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; Data &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    data &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; Data&lt;span style=&#34;color: #339933;&#34;&gt;{}&lt;/span&gt;
    minimum &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; math&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;MaxFloat64
    readLines &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; ReadFile&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;filename&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;for&lt;/span&gt; _&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; value &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;range&lt;/span&gt; readLines &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        valueArrays &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; strings&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Split&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;value&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;,&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        name &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; valueArrays&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;nameColumn&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt;
        trimmedFirst&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; _ &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; strconv&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;ParseFloat&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;valueArrays&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;compareColOne&lt;span style=&#34;color: #339933;&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        trimmedSecond&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; _ &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; strconv&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;ParseFloat&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;valueArrays&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;compareColTwo&lt;span style=&#34;color: #339933;&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        diff &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; trimmedFirst &lt;span style=&#34;color: #339933;&#34;&gt;-&lt;/span&gt; trimmedSecond
        diff &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; math&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Abs&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;diff&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; diff &amp;lt;&lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; minimum &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            minimum &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; diff
            data&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;columnName &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; name
            data&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;compareOne &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; trimmedFirst
            data&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;compareTwo &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; trimmedSecond
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; data
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//ReadFile reads lines from a file and gives back a string array which contains the lines.&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; ReadFile&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;fileName &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;fileLines &lt;span style=&#34;color: #339933;&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    file&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; os&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Open&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;fileName&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        log&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Fatal&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;defer&lt;/span&gt; file&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Close&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt;
&amp;nbsp;
    scanner &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; bufio&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;NewScanner&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;file&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//Skipping the first line which is the header.&lt;/span&gt;
    scanner&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Scan&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;for&lt;/span&gt; scanner&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Scan&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        line &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; scanner&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Text&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt;
        re &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; regexp&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;MustCompile&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;&lt;span style=&#34;color: #000099; font-weight: bold;&#34;&gt;\\&lt;/span&gt;w+&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        lines &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; re&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;FindAllString&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;line&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;lines&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &amp;gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            fileLines &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; append&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;fileLines&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; strings&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Join&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;lines&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;,&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;))&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; scanner&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Err&lt;span style=&#34;color: #339933;&#34;&gt;();&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        log&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Fatal&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Sieve of Eratosthenes in Go</title>
      <link>https://skarlso.github.io/2015/07/30/sieve-of-eratosthenes-in-go/</link>
      <pubDate>Thu, 30 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/30/sieve-of-eratosthenes-in-go/</guid>
      <description>&lt;p&gt;I&amp;#8217;m pretty proud of this one as well.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;go&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;package&lt;/span&gt; sieve
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//Sieve Uses the Sieve of Eratosthenes to calculate primes to a certain limit&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; Sieve&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;limit &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;var&lt;/span&gt; listOfPrimes &lt;span style=&#34;color: #339933;&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;
    markers &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;([]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;bool&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; limit&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt; &amp;lt; limit&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;++&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;!&lt;/span&gt;markers&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; j &amp;lt; limit&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; j &lt;span style=&#34;color: #339933;&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
                markers&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;j&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;true&lt;/span&gt;
            &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
            listOfPrimes &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; append&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;listOfPrimes&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; listOfPrimes
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Converting numbers into string representations</title>
      <link>https://skarlso.github.io/2015/07/19/converting-numbers-into-string-representations/</link>
      <pubDate>Sun, 19 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/19/converting-numbers-into-string-representations/</guid>
      <description>&lt;p&gt;I quiet like this one. My first go program snippet without any peaking or googling. I&amp;#8217;m proud, though it could be improved with a bit of struct magic and such and such. And it only counts &amp;#8217;till 1000&amp;#8230;&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;go&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;package&lt;/span&gt; main
&amp;nbsp;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;fmt&#34;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;var&lt;/span&gt; words &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #993333;&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;one&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;two&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;three&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;four&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;five&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;six&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;seven&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;eight&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;nine&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;ten&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;eleven&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;twelve&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;thirteen&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;fourteen&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;fifteen&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;sixteen&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;seventeen&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;eighteen&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;nineteen&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;twenty&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;thirty&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;forty&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;fifty&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;60&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;sixty&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;seventy&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;eighty&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;ninety&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;// CountLetters count the letters in a long string number representation&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; CountLetters&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;limit &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    myLongNumberString &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt; &amp;lt;&lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; limit&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;++&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        addLettersToMyString&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&amp;myLongNumberString&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;// fmt.Println(&#34;1-9 written with letters is: &#34;, len(myLongNumberString))&lt;/span&gt;
    fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;The string is:&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; myLongNumberString&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Lenght of string is:&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;myLongNumberString&lt;span style=&#34;color: #339933;&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; addLettersToMyString&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;myString &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; num &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; num &amp;lt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;myString &lt;span style=&#34;color: #339933;&#34;&gt;+=&lt;/span&gt; words&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;num&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; num &amp;gt;&lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;20&lt;/span&gt; &amp;&amp; num &amp;lt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;myString &lt;span style=&#34;color: #339933;&#34;&gt;+=&lt;/span&gt; countMiddle&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;num&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; num &amp;gt;&lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;100&lt;/span&gt; &amp;&amp; num &amp;lt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        hundred&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; tenth &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; countHundred&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;num&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; tenth &lt;span style=&#34;color: #339933;&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;myString &lt;span style=&#34;color: #339933;&#34;&gt;+=&lt;/span&gt; hundred
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; tenth &amp;gt;&lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;11&lt;/span&gt; &amp;&amp; tenth &amp;lt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;myString &lt;span style=&#34;color: #339933;&#34;&gt;+=&lt;/span&gt; hundred &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;and&#34;&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; words&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;tenth&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;myString &lt;span style=&#34;color: #339933;&#34;&gt;+=&lt;/span&gt; hundred &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;and&#34;&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; countMiddle&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;tenth&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; num &lt;span style=&#34;color: #339933;&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;myString &lt;span style=&#34;color: #339933;&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;onethousand&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; countMiddle&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;num &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    minues &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; num &lt;span style=&#34;color: #339933;&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;10&lt;/span&gt;
    num &lt;span style=&#34;color: #339933;&#34;&gt;-=&lt;/span&gt; minues
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; words&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;num&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; words&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;minues&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; countHundred&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;num &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    minues &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; num &lt;span style=&#34;color: #339933;&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;100&lt;/span&gt;
    num &lt;span style=&#34;color: #339933;&#34;&gt;-=&lt;/span&gt; minues
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;words&lt;span style=&#34;color: #339933;&#34;&gt;[(&lt;/span&gt;num&lt;span style=&#34;color: #339933;&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)]&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;hundred&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;),&lt;/span&gt; minues
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Bitwise &amp; Operator</title>
      <link>https://skarlso.github.io/2015/07/15/bitwise-operator/</link>
      <pubDate>Wed, 15 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/15/bitwise-operator/</guid>
      <description>&lt;p&gt;The first, and only time so far, that I got to use the bitwise &amp;amp; operator. I enjoyed doing so!!&lt;/p&gt;

&lt;p&gt;And of course from now on, I&amp;#8217;ll be looking for more opportunities to (ab)use it.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;go&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;package&lt;/span&gt; secret
&amp;nbsp;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;sort&#34;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;const&lt;/span&gt; REVERSE &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;16&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; Handshake&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;code &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;// binary_rep := convertDecimalToBinary(code)&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; code &amp;lt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    secret_map &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #993333;&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;wink&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;double blink&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #cc66cc;&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;close your eyes&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color: #cc66cc;&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;jump&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;var&lt;/span&gt; keys &lt;span style=&#34;color: #339933;&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;for&lt;/span&gt; k &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;range&lt;/span&gt; secret_map &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        keys &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; append&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;keys&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; k&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;// To make sure iteration is always in the same order.&lt;/span&gt;
    sort&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Ints&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;keys&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
&amp;nbsp;
    code_array &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;([]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;for&lt;/span&gt; _&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; key &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;range&lt;/span&gt; keys &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; code &amp; key &lt;span style=&#34;color: #339933;&#34;&gt;==&lt;/span&gt; key &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            code_array &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; append&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;code_array&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; secret_map&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;key&lt;span style=&#34;color: #339933;&#34;&gt;])&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; code &amp; REVERSE &lt;span style=&#34;color: #339933;&#34;&gt;==&lt;/span&gt; REVERSE &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        code_array &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; reverse_array&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;code_array&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; code_array
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; reverse_array &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;array_to_reverse &lt;span style=&#34;color: #339933;&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; j &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;array_to_reverse&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt; &amp;lt; j&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; j &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; j &lt;span style=&#34;color: #339933;&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        array_to_reverse&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;],&lt;/span&gt; array_to_reverse&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;j&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; array_to_reverse&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;j&lt;span style=&#34;color: #339933;&#34;&gt;],&lt;/span&gt; array_to_reverse&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; array_to_reverse
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Django – RPG – Part 3</title>
      <link>https://skarlso.github.io/2015/04/21/django-rpg-part-3/</link>
      <pubDate>Tue, 21 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/04/21/django-rpg-part-3/</guid>
      <description>&lt;p&gt;Hello folks.&lt;/p&gt;

&lt;p&gt;A small update to this. I created the model now, which is the database design for this app. It&amp;#8217;s very simple, nothing fancy. Also, I&amp;#8217;m writing the app with Python 3 from now on.&lt;/p&gt;

&lt;p&gt;Here is the model now:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;python&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; django.&lt;span style=&#34;color: black;&#34;&gt;db&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; models
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; django.&lt;span style=&#34;color: black;&#34;&gt;contrib&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;auth&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;models&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; User
&amp;nbsp;
&lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# Create your models here.&lt;/span&gt;
&amp;nbsp;
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;class&lt;/span&gt; Item&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;models.&lt;span style=&#34;color: black;&#34;&gt;Model&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
    name &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; models.&lt;span style=&#34;color: black;&#34;&gt;CharField&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;max_length&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; default&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Item&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    damage &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; models.&lt;span style=&#34;color: black;&#34;&gt;IntegerField&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;default&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    defense &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; models.&lt;span style=&#34;color: black;&#34;&gt;IntegerField&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;default&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    consumable &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; models.&lt;span style=&#34;color: black;&#34;&gt;BooleanField&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;default&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #008000;&#34;&gt;False&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000cd;&#34;&gt;__str__&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008000;&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
        &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #008000;&#34;&gt;self&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;name&lt;/span&gt;
&amp;nbsp;
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;class&lt;/span&gt; Inventory&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;models.&lt;span style=&#34;color: black;&#34;&gt;Model&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
    items &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; models.&lt;span style=&#34;color: black;&#34;&gt;ManyToManyField&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;Item&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000cd;&#34;&gt;__str__&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008000;&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
        &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #008000;&#34;&gt;self&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;items&lt;/span&gt;
&amp;nbsp;
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;class&lt;/span&gt; Character&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;models.&lt;span style=&#34;color: black;&#34;&gt;Model&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
    &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# By default Django uses the primery key of the related object.&lt;/span&gt;
    &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# Hence, no need to specify User.id.&lt;/span&gt;
    &lt;span style=&#34;color: #dc143c;&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; models.&lt;span style=&#34;color: black;&#34;&gt;OneToOneField&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;User&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; null&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #008000;&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    name &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; models.&lt;span style=&#34;color: black;&#34;&gt;CharField&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;max_length&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    inventory &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; models.&lt;span style=&#34;color: black;&#34;&gt;ForeignKey&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;Inventory&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000cd;&#34;&gt;__str__&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008000;&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
        &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #008000;&#34;&gt;self&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;name&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Worth noting a few things here. The __str__ is only with Python 3. In Python 2 it would be unicode. And the OneToOne and the foreign key are automatically using Primary keys defined in the references model. The __str__ is there to return some view when you are debugging in the console instead of [&lt;Item: Item object&gt;].&lt;/p&gt;

&lt;p&gt;In order to apply this change you just have to run this commend (given you set up your app in the settings.py as an INSTALLED_APP):&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;python manage.py makemigrations polls&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;This creates the migration script. And this applies it:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;python manage.py migrate&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;I love the fact that django creates incremental migration scripts out of the box. So if there was any problem at all, you can always roll back. Which comes very handy in certain situations.&lt;/p&gt;

&lt;p&gt;That&amp;#8217;s it.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Django – RPG – Part 2</title>
      <link>https://skarlso.github.io/2015/04/12/django-rpg-part-2/</link>
      <pubDate>Sun, 12 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/04/12/django-rpg-part-2/</guid>
      <description>&lt;p&gt;Hello.&lt;/p&gt;

&lt;p&gt;Continuing where we left off with the Django RPG project. Next up is implementing a rudimentary registration and adding the ability to create a character. Maybe even, design the database through django&amp;#8217;s modelling.&lt;/p&gt;

&lt;p&gt;Since we are using Django&amp;#8217;s very own authentication model, I think we are covered in terms of users. Let&amp;#8217;s add two things for now. An Index page, where there is a link to login and a link to registration.&lt;/p&gt;

&lt;p&gt;Adding the index first. Later I would like to switch to a base template model, but for now, I created a simple index.html page. That only contains the two links to the two views. The views are a simple function call in the views.py too which the URLConfig will later point to.&lt;/p&gt;

&lt;p&gt;For now, the index function looks like this:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;python&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;def&lt;/span&gt; index&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;request&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
    title &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;My RPG&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;return&lt;/span&gt; render_to_response&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;index.html&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: black;&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;title&#39;&lt;/span&gt;:title&lt;span style=&#34;color: black;&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
myrpg/rpg/views.&lt;span style=&#34;color: black;&#34;&gt;py&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Note, that the title here is utterly unimportant but because I want to switch to a base.html template I&amp;#8217;ll leave it here for later usage.&lt;/p&gt;

&lt;p&gt;That concludes the index. Now, let&amp;#8217;s create the registration. That is a little more complex, but still rather easy. We are just checking of the user already exists or not, if so, display and error, if not, create the user.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;python&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;def&lt;/span&gt; registration&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;request&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
    state &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Please register.&#34;&lt;/span&gt;
    username &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; password &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;email&lt;/span&gt; &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;&#39;&lt;/span&gt;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;if&lt;/span&gt; request.&lt;span style=&#34;color: black;&#34;&gt;POST&lt;/span&gt;:
        username &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; request.&lt;span style=&#34;color: black;&#34;&gt;POST&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;username&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
        &lt;span style=&#34;color: #dc143c;&#34;&gt;email&lt;/span&gt; &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; request.&lt;span style=&#34;color: black;&#34;&gt;POST&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;email&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
        password &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; request.&lt;span style=&#34;color: black;&#34;&gt;POST&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;password&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
        &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;if&lt;/span&gt; User.&lt;span style=&#34;color: black;&#34;&gt;objects&lt;/span&gt;.&lt;span style=&#34;color: #008000;&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;username &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; username&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;exists&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
            &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# raise forms.ValidationError(&#34;Username %s is already in use.&#34; % username)&lt;/span&gt;
            state &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Username %s is already in use. Please try another.&#34;&lt;/span&gt; % username
        &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;else&lt;/span&gt;:
            &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;try&lt;/span&gt;:
                &lt;span style=&#34;color: #dc143c;&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; User.&lt;span style=&#34;color: black;&#34;&gt;objects&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;create_user&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;username &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; username&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;email&lt;/span&gt; &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;email&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; password &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; password&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
                state &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Thank you for registering with us %s!&#34;&lt;/span&gt; % &lt;span style=&#34;color: #dc143c;&#34;&gt;user&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;username&lt;/span&gt; 
            &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;except&lt;/span&gt;:
                state &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Unexpected error occured: %s&#34;&lt;/span&gt; % &lt;span style=&#34;color: #dc143c;&#34;&gt;sys&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;exc_info&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#93;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;return&lt;/span&gt; render_to_response&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;registration.html&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: black;&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;state&#39;&lt;/span&gt;: state&lt;span style=&#34;color: black;&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; context_instance &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; RequestContext&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;request&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
myrpg/rpg/views.&lt;span style=&#34;color: black;&#34;&gt;py&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Here, I&amp;#8217;m checking to see of the username already exists with the filter. This is by using Django&amp;#8217;s model which models the database like hibernate. It&amp;#8217;s a simple query. And I&amp;#8217;m doing this, because this is faster than raising an exception. Later on, I&amp;#8217;ll be switching to a validation framework and django&amp;#8217;s own auth view. Because, why not.&lt;/p&gt;

&lt;p&gt;The URL conf looks like this:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;python&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; django.&lt;span style=&#34;color: black;&#34;&gt;conf&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;urls&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; url
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; . &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; views
&amp;nbsp;
urlpatterns &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: black;&#34;&gt;&amp;#91;&lt;/span&gt;
    url&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;r&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;^$&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; views.&lt;span style=&#34;color: black;&#34;&gt;index&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; name&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;index&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt;
    url&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;r&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;^login/$&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; views.&lt;span style=&#34;color: black;&#34;&gt;login_user&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; name&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;login&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt;
    url&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;r&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;^registration/$&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; views.&lt;span style=&#34;color: black;&#34;&gt;registration&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; name&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;registration&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: black;&#34;&gt;&amp;#93;&lt;/span&gt;
myrpg/rpg/urls.&lt;span style=&#34;color: black;&#34;&gt;py&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;And this now, resides in a file under the RPG app and not the main one. The main one includes this one, like this:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;python&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; django.&lt;span style=&#34;color: black;&#34;&gt;conf&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;urls&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; include&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; url
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; django.&lt;span style=&#34;color: black;&#34;&gt;contrib&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; admin
&amp;nbsp;
urlpatterns &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: black;&#34;&gt;&amp;#91;&lt;/span&gt;
    &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# Examples:&lt;/span&gt;
    &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# url(r&#39;^$&#39;, &#39;myrpg.views.home&#39;, name=&#39;home&#39;),&lt;/span&gt;
    &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# url(r&#39;^blog/&#39;, include(&#39;blog.urls&#39;)),&lt;/span&gt;
&amp;nbsp;
    url&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;r&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;^admin/&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; include&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;admin.&lt;span style=&#34;color: #dc143c;&#34;&gt;site&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;urls&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt;
    url&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;r&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;^rpg/&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; include&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;rpg.urls&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color: black;&#34;&gt;&amp;#93;&lt;/span&gt;
myrpg/urls.&lt;span style=&#34;color: black;&#34;&gt;py&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;That&amp;#8217;s it for now. As always, you can check out the code under github.&lt;/p&gt;

&lt;p&gt;Tune in next time, when I&amp;#8217;ll attempt to create a view to create a Character for a logged in user and link it to the user. I&amp;#8217;ll do this with django&amp;#8217;s model framework.&lt;/p&gt;

&lt;p&gt;Thanks for reading,&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Django – RPG – Part 1</title>
      <link>https://skarlso.github.io/2015/04/10/django-rpg-2/</link>
      <pubDate>Fri, 10 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/04/10/django-rpg-2/</guid>
      <description>

&lt;p&gt;Hi folks.&lt;/p&gt;

&lt;p&gt;So last time, we tried to implement a little RPG of mine using Meteor, which failed miserably. This time we are going to try and use Django. Let&amp;#8217;s have at it, shall we?&lt;/p&gt;

&lt;p&gt;If you don&amp;#8217;t know what django is (than you are probably not reading this blog entry anyways&amp;#8230; ), have a look =&amp;gt; &lt;a href=&#34;https://www.djangoproject.com/&#34; target=&#34;_blank&#34;&gt;Link&lt;/a&gt;. It&amp;#8217;s a Python Web Framework.&lt;/p&gt;

&lt;h1 id=&#34;in-the-beginning:71cda7585bcb20a0da23b90a1f44f17f&#34;&gt;In the beginning&lt;/h1&gt;

&lt;p&gt;So here we are again. I&amp;#8217;m starting off by creating the skeleton for my RPG. First, the welcome page with a tiny login capability. Which means session tracking. For now, on the same page.&lt;/p&gt;

&lt;p&gt;To create the skeleton I just run this little command:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;django-admin.py startproject myrpg&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Easy enough, right? Basic directory structure is created. You can read that in django&amp;#8217;s own documentation: &lt;a href=&#34;https://docs.djangoproject.com/en/1.8/intro/tutorial01/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://docs.djangoproject.com/en/1.8/intro/tutorial01/&#34;&gt;https://docs.djangoproject.com/en/1.8/intro/tutorial01/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m using Sublime Text 3 to build this app. I was thinking of pycharm, but that would take away too much fun.&lt;/p&gt;

&lt;p&gt;By default Django uses SQLlite and I&amp;#8217;m okay with that.&lt;/p&gt;

&lt;p&gt;The basics are there. Let&amp;#8217;s move to higher ground. The next step can be to design the login page. I&amp;#8217;m not much of a designer so I&amp;#8217;ll leave that part to people who care more / understand it better. I&amp;#8217;m only looking for a simple Login with a username and a password. Nothing fancy. And I&amp;#8217;m going to use Django&amp;#8217;s auth system for users: &lt;tt class=&#34;xref py py-mod docutils literal&#34;&gt;&lt;span class=&#34;pre&#34;&gt;&lt;a class=&#34;reference internal&#34; title=&#34;django.contrib.auth: Django&#39;s authentication framework.&#34; href=&#34;https://docs.djangoproject.com/en/1.8/topics/auth/#module-django.contrib.auth&#34; target=&#34;_blank&#34;&gt;django.contrib.auth&lt;/a&gt;.&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s pretty good, has lots of features and can auth a user pretty quickly given a username and password, which is all I want for now.&lt;/p&gt;

&lt;p&gt;I running a migrate command to create all the necessary tables and data:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;python&#34; style=&#34;font-family:monospace;&#34;&gt;python manage.&lt;span style=&#34;color: black;&#34;&gt;py&lt;/span&gt; migrate&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;A quick check with sqlite3 and running &lt;strong&gt;.schema &lt;/strong&gt;showed me that the tables are indeed created and filled with default data for all the &lt;strong&gt;INSTALLED_APPS &lt;/strong&gt;django has at the moment.&lt;/p&gt;

&lt;p&gt;I did a quick check with &lt;em&gt;python manage.py runserver&lt;/em&gt; and everything seems to work fine.&lt;/p&gt;

&lt;h1 id=&#34;the-rpg-app:71cda7585bcb20a0da23b90a1f44f17f&#34;&gt;The RPG App&lt;/h1&gt;

&lt;p&gt;So, that concludes the setup. Following the tutorial, django has this notion of apps and projects. In short, a project is a set of configurations and applications which forms a website. Hence, I&amp;#8217;m going to create an RPG APP for now. The tutorial continues with a Poll type of App, but I&amp;#8217;m sure I can apply the same things to a login page.&lt;/p&gt;

&lt;p&gt;First, let&amp;#8217;s create the App using the command:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;python&#34; style=&#34;font-family:monospace;&#34;&gt;python manage.&lt;span style=&#34;color: black;&#34;&gt;py&lt;/span&gt; startapp rpg&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;That creates the skeleton for the app. The tutorial then suggests to define the database first. Which I think is a bad idea; usually when doing design, you don&amp;#8217;t want to start with the database model. But for now, I shall comply. We want a login page and we are using the auth module, which means, for now, I don&amp;#8217;t care about the database. Skip.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m going to go off corse for now, since I only want to create a basic login. For that, I have to read up on views and models a little bit in order to create a simple login page. Be right back&amp;#8230;&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m fighting the basic auth system at the moment. Everything seems to be working fine. In the Admin screen I was able to add a basic user to do some debugging, but for now, the login seems to not work with this error:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color: #ff6600;&#34;&gt;CSRF verification failed. Request aborted.&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is the CSRF protection which came out with Django. I did a bit of more document reading and setup the CSRF as was described here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.djangoproject.com/en/1.8/ref/csrf/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://docs.djangoproject.com/en/1.8/ref/csrf/&#34;&gt;https://docs.djangoproject.com/en/1.8/ref/csrf/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, I&amp;#8217;m still facing the same problem. Let&amp;#8217;s research further&amp;#8230; Ahh yes. I wasn&amp;#8217;t returning the request context I&amp;#8217;ve set up. Before:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;python&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; django.&lt;span style=&#34;color: black;&#34;&gt;shortcuts&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; render_to_response
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; django.&lt;span style=&#34;color: black;&#34;&gt;contrib&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;auth&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; authenticate&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; login
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; django.&lt;span style=&#34;color: black;&#34;&gt;template&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;context_processors&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; csrf
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;def&lt;/span&gt; login_user&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;request&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
    c &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: black;&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#125;&lt;/span&gt;
    c.&lt;span style=&#34;color: black;&#34;&gt;update&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;csrf&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;request&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    state &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Please log in below...&#34;&lt;/span&gt;
    username &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; password &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;&#39;&lt;/span&gt;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;if&lt;/span&gt; request.&lt;span style=&#34;color: black;&#34;&gt;POST&lt;/span&gt;:
        username &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; request.&lt;span style=&#34;color: black;&#34;&gt;POST&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;username&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
        password &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; request.&lt;span style=&#34;color: black;&#34;&gt;POST&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;password&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #dc143c;&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; authenticate&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;username&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;username&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; password&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;password&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
        &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #008000;&#34;&gt;None&lt;/span&gt;:
            &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;user&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;is_active&lt;/span&gt;:
                login&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;request&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;user&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
                state &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;You&#39;re successfully logged in!&#34;&lt;/span&gt;
            &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;else&lt;/span&gt;:
                state &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Your account is not active, please contact the site admin.&#34;&lt;/span&gt;
        &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;else&lt;/span&gt;:
            state &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Your username and/or password were incorrect.&#34;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;return&lt;/span&gt; render_to_response&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;auth.html&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;state&#39;&lt;/span&gt;:state&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;username&#39;&lt;/span&gt;: username&lt;span style=&#34;color: black;&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;After:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;python&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; django.&lt;span style=&#34;color: black;&#34;&gt;shortcuts&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; render_to_response
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; django.&lt;span style=&#34;color: black;&#34;&gt;contrib&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;auth&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; authenticate&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; login
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; django.&lt;span style=&#34;color: black;&#34;&gt;template&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;context_processors&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; csrf
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; django.&lt;span style=&#34;color: black;&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; RequestContext
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;def&lt;/span&gt; login_user&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;request&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
    state &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Please log in below...&#34;&lt;/span&gt;
    username &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; password &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;&#39;&lt;/span&gt;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;if&lt;/span&gt; request.&lt;span style=&#34;color: black;&#34;&gt;POST&lt;/span&gt;:
        username &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; request.&lt;span style=&#34;color: black;&#34;&gt;POST&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;username&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
        password &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; request.&lt;span style=&#34;color: black;&#34;&gt;POST&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;password&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #dc143c;&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; authenticate&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;username&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;username&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; password&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;password&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
        &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #008000;&#34;&gt;None&lt;/span&gt;:
            &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;user&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;is_active&lt;/span&gt;:
                login&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;request&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;user&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
                state &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;You&#39;re successfully logged in!&#34;&lt;/span&gt;
            &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;else&lt;/span&gt;:
                state &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Your account is not active, please contact the site admin.&#34;&lt;/span&gt;
        &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;else&lt;/span&gt;:
            state &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Your username and/or password were incorrect.&#34;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;return&lt;/span&gt; render_to_response&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;auth.html&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;state&#39;&lt;/span&gt;:state&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;username&#39;&lt;/span&gt;: username&lt;span style=&#34;color: black;&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; context_instance&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;RequestContext&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;request&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Notice that now I&amp;#8217;m returning the request context at the end when I&amp;#8217;m rendering the response. And lo&amp;#8217; and behold, my login is now working.&lt;/p&gt;

&lt;h1 id=&#34;progress-so-far:71cda7585bcb20a0da23b90a1f44f17f&#34;&gt;Progress so far&lt;/h1&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;So, I&amp;#8217;ve set up a user using the Admin portal accessible from the app / admin. Created my default rpg app, and added my default auth view into a template folder. Configured the URL setting in &lt;strong&gt;urls.py&lt;/strong&gt; to look like this:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;python&#34; style=&#34;font-family:monospace;&#34;&gt;url&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;r&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;^login/$&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;rpg.views.login_user&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Very basic for now, but when I return to it, we are going to clean it up and then continue with implementing the main screen which will greet the user and display some stats about his/her character.&lt;/p&gt;

&lt;p&gt;The whole code is under github here =&amp;gt; &lt;a href=&#34;https://github.com/Skarlso/myrpg&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://github.com/Skarlso/myrpg&#34;&gt;https://github.com/Skarlso/myrpg&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bye for now,&lt;/p&gt;

&lt;p&gt;And thanks for reading.&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Small Python GUI to Calculate Lever Distance</title>
      <link>https://skarlso.github.io/2015/04/10/small-python-gui-to-calculate-lever-distance/</link>
      <pubDate>Fri, 10 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/04/10/small-python-gui-to-calculate-lever-distance/</guid>
      <description>&lt;p&gt;Hi folks.&lt;/p&gt;

&lt;p&gt;Just a small script which calculates your distance from a lever focal point if you know your weight, the object&amp;#8217;s weight and the object&amp;#8217;s and the distance the object has from the focal point of the lever.&lt;/p&gt;

&lt;p&gt;Like this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/04/slide0001_image007.png&#34;&gt;&lt;img class=&#34;alignnone size-thumbnail wp-image-480&#34; src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/04/slide0001_image007-150x120.png&#34; alt=&#34;slide0001_image007&#34; width=&#34;150&#34; height=&#34;120&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This script will give you D1. And this is how it will look like in doing so:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/04/Screen-Shot-2015-04-10-at-15.03.02.png&#34;&gt;&lt;img class=&#34;alignnone size-thumbnail wp-image-481&#34; src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/04/Screen-Shot-2015-04-10-at-15.03.02-150x150.png&#34; alt=&#34;Screen Shot 2015-04-10 at 15.03.02&#34; width=&#34;150&#34; height=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, in order for me (77kg) to lift an object of 80kg which is on a, by default, 1 meter long lever, I have to stand back ~1.03meters. Which is totally cool, right?&lt;/p&gt;

&lt;p&gt;Here is the code:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;python&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;Tkinter&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; *
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; ttk
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;def&lt;/span&gt; calculate&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;*args&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;try&lt;/span&gt;:
        your_weight_value &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008000;&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;your_weight.&lt;span style=&#34;color: black;&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
        object_weight_value &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008000;&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;object_weight.&lt;span style=&#34;color: black;&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
        object_distance_value &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008000;&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;object_distance.&lt;span style=&#34;color: black;&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
        your_distance.&lt;span style=&#34;color: #008000;&#34;&gt;set&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;object_weight_value * object_distance_value&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt; / your_weight_value&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color: #008000;&#34;&gt;ValueError&lt;/span&gt;:
        &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;pass&lt;/span&gt;
&amp;nbsp;
root &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; Tk&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
root.&lt;span style=&#34;color: black;&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Lever distance counter&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
mainframe &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; ttk.&lt;span style=&#34;color: black;&#34;&gt;Frame&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;root&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; padding&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;4 4 12 12&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
mainframe.&lt;span style=&#34;color: black;&#34;&gt;grid&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;column&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; row&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; sticky&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;N&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; W&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; E&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; S&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
mainframe.&lt;span style=&#34;color: black;&#34;&gt;columnconfigure&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; weight&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
mainframe.&lt;span style=&#34;color: black;&#34;&gt;rowconfigure&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; weight&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
your_weight &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; StringVar&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
object_weight &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; StringVar&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
object_distance &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; StringVar&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
your_distance &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; StringVar&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
object_distance.&lt;span style=&#34;color: #008000;&#34;&gt;set&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;1&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
your_weight_entry &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; ttk.&lt;span style=&#34;color: black;&#34;&gt;Entry&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;mainframe&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; width&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; textvariable&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;your_weight&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
your_weight_entry.&lt;span style=&#34;color: black;&#34;&gt;grid&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;column&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; row&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; sticky&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;W&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; E&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
object_weight_entry &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; ttk.&lt;span style=&#34;color: black;&#34;&gt;Entry&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;mainframe&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; width&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; textvariable&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;object_weight&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
object_weight_entry.&lt;span style=&#34;color: black;&#34;&gt;grid&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;column&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; row&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; sticky&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;W&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; E&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
object_distance_entry &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; ttk.&lt;span style=&#34;color: black;&#34;&gt;Entry&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;mainframe&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; width&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; textvariable&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;object_distance&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
object_distance_entry.&lt;span style=&#34;color: black;&#34;&gt;grid&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;column&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; row&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; sticky&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;W&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; E&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
&amp;nbsp;
ttk.&lt;span style=&#34;color: black;&#34;&gt;Label&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;mainframe&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; textvariable&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;your_distance&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;grid&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;column&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; row&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; sticky&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;W&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; E&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
ttk.&lt;span style=&#34;color: black;&#34;&gt;Label&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;mainframe&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; text&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Your weight&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;grid&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;column&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; row&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; sticky&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;W&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
ttk.&lt;span style=&#34;color: black;&#34;&gt;Label&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;mainframe&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; text&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Object weight&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;grid&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;column&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; row&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; sticky&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;W&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
ttk.&lt;span style=&#34;color: black;&#34;&gt;Label&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;mainframe&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; text&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Object Distance&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;grid&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;column&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; row&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; sticky&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;W&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
ttk.&lt;span style=&#34;color: black;&#34;&gt;Label&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;mainframe&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; text&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Your Distance&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;grid&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;column&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; row&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; sticky&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;W&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
ttk.&lt;span style=&#34;color: black;&#34;&gt;Label&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;mainframe&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; text&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;kg&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;grid&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;column&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; row&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; sticky&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;W&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
ttk.&lt;span style=&#34;color: black;&#34;&gt;Label&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;mainframe&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; text&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;kg&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;grid&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;column&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; row&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; sticky&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;W&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
ttk.&lt;span style=&#34;color: black;&#34;&gt;Label&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;mainframe&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; text&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;m&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;grid&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;column&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; row&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; sticky&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;W&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
ttk.&lt;span style=&#34;color: black;&#34;&gt;Label&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;mainframe&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; text&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;m&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;grid&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;column&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; row&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; sticky&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;W&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
ttk.&lt;span style=&#34;color: black;&#34;&gt;Button&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;mainframe&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; text&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Calculate&#34;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; command&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;calculate&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;grid&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;column&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; row&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; sticky&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;W&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;for&lt;/span&gt; child &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;in&lt;/span&gt; mainframe.&lt;span style=&#34;color: black;&#34;&gt;winfo_children&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;: child.&lt;span style=&#34;color: black;&#34;&gt;grid_configure&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;padx&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; pady&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
your_weight_entry.&lt;span style=&#34;color: black;&#34;&gt;focus&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
root.&lt;span style=&#34;color: black;&#34;&gt;bind&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; calculate&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
root.&lt;span style=&#34;color: black;&#34;&gt;mainloop&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Please enjoy, and feel free to alter in any way. I&amp;#8217;m using Tkinter and a grid layout which I find very easy to work with.&lt;/p&gt;

&lt;p&gt;Thanks for reading,&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python and my Math commitment</title>
      <link>https://skarlso.github.io/2015/03/15/python-and-my-math-commitment/</link>
      <pubDate>Sun, 15 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/03/15/python-and-my-math-commitment/</guid>
      <description>&lt;p&gt;Let&amp;#8217;s talk about plans. It&amp;#8217;s good to have one. For example, I have a plan for this year.&lt;/p&gt;

&lt;p&gt;I kind of like math. So, I have this book:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/03/matek.jpg&#34;&gt;&lt;img class=&#34;alignnone size-thumbnail wp-image-452&#34; src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/03/matek-150x150.jpg&#34; alt=&#34;matek&#34; width=&#34;150&#34; height=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s 1400 pages long and basically, has everything in it. It&amp;#8217;s a rather exhaustive book. Hence, my plan is to finish the book by the end of 2015 and write a couple of python scripts that calculate something interesting.&lt;/p&gt;

&lt;p&gt;For example, Newton&amp;#8217;s law of cooling how I learned it is:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.forkosh.com/mathtex.cgi?t=k*log_{2.5}\frac{T_0-K}{T-K}&#34; style=&#34;float:top;&#34; border=&#34;0px&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Where k =&amp;gt; a material&amp;#8217;s surface based constant. Tzero =&amp;gt; initial temperature. T =&amp;gt; target temperature. K =&amp;gt; Environment&amp;#8217;s temperature.&lt;/p&gt;

&lt;p&gt;A simple python script for this:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;python&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# Calculating Newton&#39;s law of Cooling&lt;/span&gt;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;__future__&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; division
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;sys&lt;/span&gt;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;math&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; log
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;def&lt;/span&gt; calculation&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;k&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; Tz&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; T&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; K&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
    res &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;Tz - K&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;/&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;T - K&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;return&lt;/span&gt; k * &lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;log&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;res&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ff4500;&#34;&gt;2.5&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
k &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;sys&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;argv&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#93;&lt;/span&gt;
Tz &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;sys&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;argv&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#93;&lt;/span&gt;
T &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;sys&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;argv&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#93;&lt;/span&gt;
K &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;sys&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;argv&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#93;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;Calculating aproximate temperature for given parameters: k=%s, Tz=%sC, T=%sC, K=%sC&#34;&lt;/span&gt; % &lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;k&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; Tz&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; T&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; K&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;calculation&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008000;&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;k&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008000;&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;Tz&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008000;&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;T&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008000;&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;K&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Enjoy.&lt;/p&gt;

&lt;p&gt;And as always,&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sphere Judge Online – Python Kivy Android app – Part 2</title>
      <link>https://skarlso.github.io/2015/03/02/sphere-judge-online-python-kivy-android-app-part-2/</link>
      <pubDate>Mon, 02 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/03/02/sphere-judge-online-python-kivy-android-app-part-2/</guid>
      <description>&lt;p&gt;Here we are again. I will attempt to further this little journey of mine into the land of Android and Python.&lt;/p&gt;

&lt;p&gt;This is the second part of the advanture you can read the first one a little bit back.&lt;/p&gt;

&lt;h1 style=&#34;text-align: center;&#34;&gt;
  The Script
&lt;/h1&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;We left off at a point where I successfully configured my environment and compiled my first hello world APK. At that point it took a little bit fiddling to get it to work on my phone.&lt;/p&gt;

&lt;p&gt;Now, I have progressed a little bit into spoj&amp;#8217;s page parsing. The code so far is as follows:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;python&#34; style=&#34;font-family:monospace;&#34;&gt;__author__ &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;hannibal&#39;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; requests
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;random&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; randint
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; lxml.&lt;span style=&#34;color: black;&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;as&lt;/span&gt; lh
&amp;nbsp;
random_page_number &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; randint&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ff4500;&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# 63 being the maximum page number at spoj&lt;/span&gt;
r &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; requests.&lt;span style=&#34;color: black;&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;http://www.spoj.com/problems/classical/sort=0,start=%d&#34;&lt;/span&gt; % &lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;random_page_number * &lt;span style=&#34;color: #ff4500;&#34;&gt;50&lt;/span&gt; - &lt;span style=&#34;color: #ff4500;&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# Problem Div XPath =&amp;gt; //[@class=&#34;problems&#34;]&lt;/span&gt;
&amp;nbsp;
spoj_page &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; lh.&lt;span style=&#34;color: black;&#34;&gt;document_fromstring&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;r.&lt;span style=&#34;color: black;&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
links_to_problems &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; spoj_page&lt;span style=&#34;color: black;&#34;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#93;&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;xpath&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;//tr[@class=&#39;problemrow&#39;]/td[2]/a&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
current_link &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; links_to_problems&lt;span style=&#34;color: black;&#34;&gt;&amp;#91;&lt;/span&gt;randint&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #008000;&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;links_to_problems&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#93;&lt;/span&gt;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;current_link.&lt;span style=&#34;color: black;&#34;&gt;attrib&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;href&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#93;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
r &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; requests.&lt;span style=&#34;color: black;&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;http://www.spoj.com/%s&#34;&lt;/span&gt; % current_link.&lt;span style=&#34;color: black;&#34;&gt;attrib&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;href&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#93;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;r.&lt;span style=&#34;color: black;&#34;&gt;text&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;encode&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;utf-8&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;This is pretty straight forward so far. It gets the problems page, loads in all of the links and prints it out.&lt;/p&gt;

&lt;p&gt;My goal is an application which looks something like this:&lt;/p&gt;

&lt;p&gt;_&lt;em&gt;__&lt;/em&gt;_&lt;em&gt;__&lt;/em&gt;_&lt;em&gt;__&lt;/em&gt;_&lt;em&gt;__&lt;/em&gt;_&lt;em&gt;__&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;|   _&lt;em&gt;__&lt;/em&gt;_&lt;em&gt;__&lt;/em&gt;_&lt;em&gt;__&lt;/em&gt;_&lt;em&gt;__&lt;/em&gt;__  |&lt;/p&gt;

&lt;p&gt;|  |                                                                           | |&lt;/p&gt;

&lt;p&gt;|  |                                                                           | |&lt;/p&gt;

&lt;p&gt;|  |                    Display Problem Description               | |&lt;/p&gt;

&lt;p&gt;|  |                                                                           | |&lt;/p&gt;

&lt;p&gt;|  |                                                                           | |&lt;/p&gt;

&lt;p&gt;|  |                                                                           | |&lt;/p&gt;

&lt;p&gt;|  |_&lt;em&gt;__&lt;/em&gt;_&lt;em&gt;__&lt;/em&gt;_&lt;em&gt;__&lt;/em&gt;_&lt;em&gt;__&lt;/em&gt;_____ | |&lt;/p&gt;

&lt;p&gt;|                                                                                 |&lt;/p&gt;

&lt;p&gt;|                                                                                 |&lt;/p&gt;

&lt;p&gt;|                         Button:Finish Problem                        |&lt;/p&gt;

&lt;p&gt;|                                                                                 |&lt;/p&gt;

&lt;p&gt;|                         Button:Next Problem                          |&lt;/p&gt;

&lt;p&gt;|_&lt;em&gt;__&lt;/em&gt;_&lt;em&gt;__&lt;/em&gt;_&lt;em&gt;__&lt;/em&gt;_&lt;em&gt;__&lt;/em&gt;____ |&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s very basic. When it loads up, it will gather and display a new problem. You have two options, either get a new one, or save / finish this item, saying you never want to see it again.&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s put the first part into an android app. Just gather data, and get it disaplyed.&lt;/p&gt;

&lt;p&gt;*Queue a days worth of hacking and frustrated cussing.*&lt;/p&gt;

&lt;p&gt;So, turns out it&amp;#8217;s not as easy as I would have liked it to be. I ran into some pretty nasty problems. Some of them I&amp;#8217;ll write down below for the record, and an attempted solution as well.&lt;/p&gt;

&lt;h1 style=&#34;text-align: center;&#34;&gt;
  Problems
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;#1:&lt;/strong&gt; &lt;strong&gt;Problem:&lt;/strong&gt; Libraries. I&amp;#8217;m using lxml and requests. Requests is a pure python library, but lxml is partially C. Which apparently is not very well supported yet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution (Partial):&lt;/strong&gt; I could optain request by two ways, but the most simple one, was basically just building my distribution with the optional requests module like this:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;.&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;distribute.sh &lt;span style=&#34;color: #660033;&#34;&gt;-m&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;openssl pil requests kivy&#34;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Attempting to do the same with LXML resulted in a compile issue which I tracked down to something like: &amp;#8220;sorry, but we don&amp;#8217;t support OSX&amp;#8221;. But it&amp;#8217;s okay. There are other ways to parse an html page, I just really like the xpath filter. So I soldiered on with trying to get something to work at least.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#3: Problem:&lt;/strong&gt; &lt;em&gt;Bogus compile time exception.&lt;/em&gt; There were some exceptions on the way when I was trying to compile with buildozer. &lt;strong&gt;Solution:&lt;/strong&gt; It&amp;#8217;s interesting because previously my solution to another compile time issue was to use a specific version of Cython. But this time the solution was to actually remove that version and install the latest one. Which is 0.22 as of the time of this writing. So:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; pip update cython&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;#2: Problem:&lt;/strong&gt; Connection. So now, I&amp;#8217;m down to the bare bone. At this point, I just want to see a page source in a label. My code looks like this:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;python&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; kivy
kivy.&lt;span style=&#34;color: black;&#34;&gt;require&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;1.8.0&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; kivy.&lt;span style=&#34;color: black;&#34;&gt;lang&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; Builder
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; kivy.&lt;span style=&#34;color: black;&#34;&gt;uix&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;gridlayout&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; GridLayout
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; kivy.&lt;span style=&#34;color: black;&#34;&gt;properties&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; NumericProperty
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; kivy.&lt;span style=&#34;color: black;&#34;&gt;app&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; App
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; requests
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;random&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; randint
&lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# import lxml.html as lh&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# import sys&lt;/span&gt;
&lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# sys.path.append(&#39;/sdcard/com.googlecode.pythonforandroid/extras/python/site-packages&#39;)&lt;/span&gt;
&amp;nbsp;
&amp;nbsp;
Builder.&lt;span style=&#34;color: black;&#34;&gt;load_string&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;&#39;&#39;
:
    cols: 1
    Label:
        text: root.get_problem()
    Button:
        text: &#39;Click me! %d&#39; % root.counter
        on_release: root.my_callback()
&#39;&#39;&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;class&lt;/span&gt; SpojAppScreen&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;GridLayout&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
    counter &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; NumericProperty&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;def&lt;/span&gt; my_callback&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008000;&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
        &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;The button has been pushed&#39;&lt;/span&gt;
        &lt;span style=&#34;color: #008000;&#34;&gt;self&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;counter&lt;/span&gt; +&lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #ff4500;&#34;&gt;1&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;def&lt;/span&gt; get_problem&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008000;&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
        random_page_number &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; randint&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff4500;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ff4500;&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# 63 being the maximum page number at spoj&lt;/span&gt;
        r &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; requests.&lt;span style=&#34;color: black;&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;http://www.spoj.com/problems/classical/sort=0,start=%d&#34;&lt;/span&gt; % &lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;random_page_number * &lt;span style=&#34;color: #ff4500;&#34;&gt;50&lt;/span&gt; - &lt;span style=&#34;color: #ff4500;&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# Problem Div XPath =&amp;gt; //[@class=&#34;problems&#34;]&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# spoj_page = lh.document_fromstring(r.text)&lt;/span&gt;
        &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# links_to_problems = spoj_page[0].xpath(&#34;//tr[@class=&#39;problemrow&#39;]/td[2]/a&#34;)&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# current_link = links_to_problems[randint(0, len(links_to_problems))]&lt;/span&gt;
        &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# print(current_link.attrib[&#39;href&#39;])&lt;/span&gt;
        &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# r = requests.get(&#34;http://www.spoj.com/%s&#34; % current_link.attrib[&#39;href&#39;])&lt;/span&gt;
        &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# print(r.text.encode(&#34;utf-8&#34;))&lt;/span&gt;
        &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;return&lt;/span&gt; r.&lt;span style=&#34;color: black;&#34;&gt;text&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;encode&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;utf-8&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;class&lt;/span&gt; SpojApp&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;App&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;def&lt;/span&gt; build&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008000;&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
        &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;return&lt;/span&gt; SpojAppScreen&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color: #66cc66;&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;__main__&#39;&lt;/span&gt;:
    SpojApp&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;However, running this results in a connection error in adb logcat:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:  kivy.lang.BuilderException: Parser: File &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;&#34;&lt;/span&gt;, line &lt;span style=&#34;color: #000000;&#34;&gt;5&lt;/span&gt;:
I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:  ...
I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:        &lt;span style=&#34;color: #000000;&#34;&gt;3&lt;/span&gt;:    cols: &lt;span style=&#34;color: #000000;&#34;&gt;1&lt;/span&gt;
I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:        &lt;span style=&#34;color: #000000;&#34;&gt;4&lt;/span&gt;:    Label:
I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:  &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;&lt;/span&gt;gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;&lt;/span&gt;gt;    &lt;span style=&#34;color: #000000;&#34;&gt;5&lt;/span&gt;:        text: root.get_problem&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;
I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:        &lt;span style=&#34;color: #000000;&#34;&gt;6&lt;/span&gt;:    Button:
I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:        &lt;span style=&#34;color: #000000;&#34;&gt;7&lt;/span&gt;:        text: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;Click me! %d&#39;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;%&lt;/span&gt; root.counter
I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:  ...
I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:  BuilderException: Parser: File &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;&#34;&lt;/span&gt;, line &lt;span style=&#34;color: #000000;&#34;&gt;5&lt;/span&gt;:
I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:  ...
I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:        &lt;span style=&#34;color: #000000;&#34;&gt;3&lt;/span&gt;:    cols: &lt;span style=&#34;color: #000000;&#34;&gt;1&lt;/span&gt;
I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:        &lt;span style=&#34;color: #000000;&#34;&gt;4&lt;/span&gt;:    Label:
I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:  &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;&lt;/span&gt;gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;&lt;/span&gt;gt;    &lt;span style=&#34;color: #000000;&#34;&gt;5&lt;/span&gt;:        text: root.get_problem&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;
I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:        &lt;span style=&#34;color: #000000;&#34;&gt;6&lt;/span&gt;:    Button:
I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:        &lt;span style=&#34;color: #000000;&#34;&gt;7&lt;/span&gt;:        text: &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;Click me! %d&#39;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;%&lt;/span&gt; root.counter
I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:  ...
I&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;python  &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;27610&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;:  ConnectionError: &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;Connection aborted.&#39;&lt;/span&gt;, gaierror&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;non-recoverable failure in name resolution.&#39;&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt; I tried simply putting out a random number at some point, which actullay worked, so I know it&amp;#8217;s the connection. I&amp;#8217;m guessing I need permission to access the network. Which would be this:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;xml&#34; style=&#34;font-family:monospace;&#34;&gt;uses-permission android:name=&#34;android.permission.INTERNET&#34;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;And yes! Building and installing it with this additional permission got me so far as I can display the web page&amp;#8217;s content in a label.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;.&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;build.py &lt;span style=&#34;color: #660033;&#34;&gt;--package&lt;/span&gt; org.spoj &lt;span style=&#34;color: #660033;&#34;&gt;--permission&lt;/span&gt; INTERNET &lt;span style=&#34;color: #660033;&#34;&gt;--name&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;Spoj&#34;&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;--version&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;--dir&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;Users&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;hannibal&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;PythonProjects&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;spoj&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt; debug&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;There is a saying that you should end on a high note, so that is what I&amp;#8217;m going to do here right now. Join me next time, when I&amp;#8217;ll try to replace lxml with something else&amp;#8230;&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>