<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Scala on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/categories/scala/</link>
    <description>Recent content in Scala on Ramblings of a cloud engineer</description>
    <generator>Hugo -- 0.136.0</generator>
    <language>en</language>
    <lastBuildDate>Tue, 27 Jan 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://skarlso.github.io/categories/scala/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>From Zero to Hundred in Four seconds</title>
      <link>https://skarlso.github.io/2015/01/27/from-zero-to-hundred-in-four-seconds/</link>
      <pubDate>Tue, 27 Jan 2015 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2015/01/27/from-zero-to-hundred-in-four-seconds/</guid>
      <description>&lt;p&gt;I thought I throw my grudge out of the window against Scala and try something with it.&lt;/p&gt;
&lt;p&gt;I also got my hands on a fairly new book, called: &amp;ldquo;&lt;a href=&#34;http://www.amazon.co.uk/Learning-Scala-Practical-Functional-Programming/dp/1449367933/ref=sr_1_1?ie=UTF8&amp;qid=1422340157&amp;sr=8-1&amp;keywords=learning+scala+a+practical&#34; target=&#34;_blank&#34;&gt;Learning Scala: Practical Functional Programming for the JVM&lt;/a&gt;&amp;rdquo;. Turns out to be a rather fun book to read. And Jason Swartz has a nice way of writing. So I wanted to play around with &lt;a href=&#34;https://www.playframework.com/&#34; target=&#34;_blank&#34;&gt;Play 2 Framework&lt;/a&gt;. It now comes packaged in &lt;a href=&#34;https://typesafe.com/get-started&#34; target=&#34;_blank&#34;&gt;Activator&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, I started the long path from almost zero to handle all that. I&amp;rsquo;m running the latest Ubuntu ( 14 ) and latest Java ( 8 ). The list: Scala, SBT, IntelliJ, Play ( through activator ).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learning programming with a visual mind</title>
      <link>https://skarlso.github.io/2012/09/09/learning-programming-with-a-visual-mind/</link>
      <pubDate>Sun, 09 Sep 2012 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2012/09/09/learning-programming-with-a-visual-mind/</guid>
      <description>&lt;p&gt;Hi folks.&lt;/p&gt;
&lt;p&gt;Today I want to write to you about &lt;strong&gt;learning&lt;/strong&gt; something with a &lt;strong&gt;visual mind&lt;/strong&gt;. There are a gazillion posts out there that tell you how to learn something with a visual mind. However, there are only a few &lt;strong&gt;actually describing&lt;/strong&gt; how to learn something as complicated and logical as programming. How do you draw up a function? How do you draw up a cycle or a structure?&lt;/p&gt;
&lt;p&gt;Actually these are really &lt;strong&gt;easy&lt;/strong&gt;. A &lt;strong&gt;cycle&lt;/strong&gt;? No problem. What&amp;rsquo;s a &lt;strong&gt;circle&lt;/strong&gt; if not a cycle? &lt;strong&gt;Structure&lt;/strong&gt;? This should be an easy one. You can draw a whole &lt;strong&gt;building&lt;/strong&gt; and then place &lt;strong&gt;building blocks&lt;/strong&gt; into it.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
