<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/categories/python/</link>
    <description>Recent content in Python on Ramblings of a cloud engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 21 Apr 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://skarlso.github.io/categories/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Django – RPG – Part 3</title>
      <link>https://skarlso.github.io/2015/04/21/django-rpg-part-3/</link>
      <pubDate>Tue, 21 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/04/21/django-rpg-part-3/</guid>
      <description>Hello folks.
A small update to this. I created the model now, which is the database design for this app. It&amp;#8217;s very simple, nothing fancy. Also, I&amp;#8217;m writing the app with Python 3 from now on.
Here is the model now:
  from django.db import models from django.contrib.auth.models import User &amp;nbsp; # Create your models here. &amp;nbsp; &amp;nbsp; class Item&amp;#40;models.Model&amp;#41;: name = models.CharField&amp;#40;max_length=100, default=&#34;Item&#34;&amp;#41; damage = models.IntegerField&amp;#40;default=&amp;#41; defense = models.</description>
    </item>
    
    <item>
      <title>Django – RPG – Part 3</title>
      <link>https://skarlso.github.io/2015/04/21/django-rpg-part-3/</link>
      <pubDate>Tue, 21 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/04/21/django-rpg-part-3/</guid>
      <description>Hello folks.
A small update to this. I created the model now, which is the database design for this app. It&amp;#8217;s very simple, nothing fancy. Also, I&amp;#8217;m writing the app with Python 3 from now on.
Here is the model now:
  from django.db import models from django.contrib.auth.models import User &amp;nbsp; # Create your models here. &amp;nbsp; &amp;nbsp; class Item&amp;#40;models.Model&amp;#41;: name = models.CharField&amp;#40;max_length=100, default=&#34;Item&#34;&amp;#41; damage = models.IntegerField&amp;#40;default=&amp;#41; defense = models.</description>
    </item>
    
    <item>
      <title>Django – RPG – Part 2</title>
      <link>https://skarlso.github.io/2015/04/12/django-rpg-part-2/</link>
      <pubDate>Sun, 12 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/04/12/django-rpg-part-2/</guid>
      <description>&lt;p&gt;Hello.&lt;/p&gt;

&lt;p&gt;Continuing where we left off with the Django RPG project. Next up is implementing a rudimentary registration and adding the ability to create a character. Maybe even, design the database through django&amp;#8217;s modelling.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Django – RPG – Part 2</title>
      <link>https://skarlso.github.io/2015/04/12/django-rpg-part-2/</link>
      <pubDate>Sun, 12 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/04/12/django-rpg-part-2/</guid>
      <description>&lt;p&gt;Hello.&lt;/p&gt;

&lt;p&gt;Continuing where we left off with the Django RPG project. Next up is implementing a rudimentary registration and adding the ability to create a character. Maybe even, design the database through django&amp;#8217;s modelling.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Django – RPG – Part 1</title>
      <link>https://skarlso.github.io/2015/04/10/django-rpg-2/</link>
      <pubDate>Fri, 10 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/04/10/django-rpg-2/</guid>
      <description>&lt;p&gt;Hi folks.&lt;/p&gt;

&lt;p&gt;So last time, we tried to implement a little RPG of mine using Meteor, which failed miserably. This time we are going to try and use Django. Let&amp;#8217;s have at it, shall we?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Django – RPG – Part 1</title>
      <link>https://skarlso.github.io/2015/04/10/django-rpg-2/</link>
      <pubDate>Fri, 10 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/04/10/django-rpg-2/</guid>
      <description>&lt;p&gt;Hi folks.&lt;/p&gt;

&lt;p&gt;So last time, we tried to implement a little RPG of mine using Meteor, which failed miserably. This time we are going to try and use Django. Let&amp;#8217;s have at it, shall we?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Small Python GUI to Calculate Lever Distance</title>
      <link>https://skarlso.github.io/2015/04/10/small-python-gui-to-calculate-lever-distance/</link>
      <pubDate>Fri, 10 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/04/10/small-python-gui-to-calculate-lever-distance/</guid>
      <description>Hi folks.
Just a small script which calculates your distance from a lever focal point if you know your weight, the object&amp;#8217;s weight and the object&amp;#8217;s and the distance the object has from the focal point of the lever.
Like this:
This script will give you D1. And this is how it will look like in doing so:
So, in order for me (77kg) to lift an object of 80kg which is on a, by default, 1 meter long lever, I have to stand back ~1.</description>
    </item>
    
    <item>
      <title>Small Python GUI to Calculate Lever Distance</title>
      <link>https://skarlso.github.io/2015/04/10/small-python-gui-to-calculate-lever-distance/</link>
      <pubDate>Fri, 10 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/04/10/small-python-gui-to-calculate-lever-distance/</guid>
      <description>Hi folks.
Just a small script which calculates your distance from a lever focal point if you know your weight, the object&amp;#8217;s weight and the object&amp;#8217;s and the distance the object has from the focal point of the lever.
Like this:
This script will give you D1. And this is how it will look like in doing so:
So, in order for me (77kg) to lift an object of 80kg which is on a, by default, 1 meter long lever, I have to stand back ~1.</description>
    </item>
    
    <item>
      <title>Python and my Math commitment</title>
      <link>https://skarlso.github.io/2015/03/15/python-and-my-math-commitment/</link>
      <pubDate>Sun, 15 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/03/15/python-and-my-math-commitment/</guid>
      <description>Let&amp;#8217;s talk about plans. It&amp;#8217;s good to have one. For example, I have a plan for this year.
I kind of like math. So, I have this book:
It&amp;#8217;s 1400 pages long and basically, has everything in it. It&amp;#8217;s a rather exhaustive book. Hence, my plan is to finish the book by the end of 2015 and write a couple of python scripts that calculate something interesting.
For example, Newton&amp;#8217;s law of cooling how I learned it is:</description>
    </item>
    
    <item>
      <title>Python and my Math commitment</title>
      <link>https://skarlso.github.io/2015/03/15/python-and-my-math-commitment/</link>
      <pubDate>Sun, 15 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/03/15/python-and-my-math-commitment/</guid>
      <description>Let&amp;#8217;s talk about plans. It&amp;#8217;s good to have one. For example, I have a plan for this year.
I kind of like math. So, I have this book:
It&amp;#8217;s 1400 pages long and basically, has everything in it. It&amp;#8217;s a rather exhaustive book. Hence, my plan is to finish the book by the end of 2015 and write a couple of python scripts that calculate something interesting.
For example, Newton&amp;#8217;s law of cooling how I learned it is:</description>
    </item>
    
  </channel>
</rss>