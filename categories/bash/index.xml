<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/categories/bash/</link>
    <description>Recent content in Bash on Ramblings of a cloud engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 17 Apr 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://skarlso.github.io/categories/bash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Minecraft world automatic backup to AWS S3 bucket - Part 2 (Custom functions)</title>
      <link>https://skarlso.github.io/2016/04/17/minecraft-server-aws-s3-backup-part2/</link>
      <pubDate>Sun, 17 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2016/04/17/minecraft-server-aws-s3-backup-part2/</guid>
      <description>&lt;p&gt;Hi folks.&lt;/p&gt;
&lt;p&gt;Got an update for the backup script. This time, you&amp;rsquo;ll have the ability to implement your own upload capabilities. I provide a mock implementation for the required functions.&lt;/p&gt;
&lt;p&gt;Here is the script again, now modified and a bit cleaned up. I hope it&amp;rsquo;s helpful.&lt;/p&gt;</description>
      <content type="html"><![CDATA[<p>Hi folks.</p>
<p>Got an update for the backup script. This time, you&rsquo;ll have the ability to implement your own upload capabilities. I provide a mock implementation for the required functions.</p>
<p>Here is the script again, now modified and a bit cleaned up. I hope it&rsquo;s helpful.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/bin/bash
</span><span class="cp"></span>
<span class="k">if</span> <span class="o">[[</span> -t <span class="m">1</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
    <span class="nv">colors</span><span class="o">=</span><span class="k">$(</span>tput colors<span class="k">)</span>
    <span class="k">if</span> <span class="o">[[</span> <span class="nv">$colors</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
        <span class="nv">RED</span><span class="o">=</span><span class="s1">&#39;\033[0;31m&#39;</span>
        <span class="nv">LIGHT_GREEN</span><span class="o">=</span><span class="s1">&#39;\033[1;32m&#39;</span>
        <span class="nv">NC</span><span class="o">=</span><span class="s1">&#39;\033[0m&#39;</span>
    <span class="k">fi</span>
<span class="k">fi</span>

<span class="k">if</span> <span class="o">[[</span> -z <span class="si">${</span><span class="nv">MINECRAFT_BUCKET</span><span class="si">}</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
    <span class="nb">printf</span> <span class="s2">&#34;Please set the env variable %bMINECRAFT_BUCKET%b to the s3 archive bucket name.\n&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&#34;</span>
    <span class="nb">exit</span> <span class="m">1</span>
<span class="k">fi</span>

<span class="k">if</span> <span class="o">[[</span> -z <span class="si">${</span><span class="nv">MINECRAFT_ARCHIVE_LIMIT</span><span class="si">}</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
    <span class="nb">printf</span> <span class="s2">&#34;Please set the env variable %bMINECRAFT_ARCHIVE_LIMIT%b to limit the number of archives to keep.\n&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&#34;</span>
    <span class="nb">exit</span> <span class="m">1</span>
<span class="k">fi</span>

<span class="k">if</span> <span class="o">[[</span> -z <span class="si">${</span><span class="nv">MINECRAFT_WORLD</span><span class="si">}</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
    <span class="nb">printf</span> <span class="s2">&#34;Please set the env variable %bMINECRAFT_WORLD%b to specify what world to back-up.\n&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&#34;</span>
    <span class="nb">exit</span> <span class="m">1</span>
<span class="k">fi</span>

<span class="nv">backup_world</span><span class="o">=</span><span class="si">${</span><span class="nv">MINECRAFT_WORLD</span><span class="si">}</span>
<span class="nv">backup_bucket</span><span class="o">=</span><span class="si">${</span><span class="nv">MINECRAFT_BUCKET</span><span class="si">}</span>
<span class="nv">backup_limit</span><span class="o">=</span><span class="si">${</span><span class="nv">MINECRAFT_ARCHIVE_LIMIT</span><span class="si">}</span>
<span class="nv">archive_name</span><span class="o">=</span><span class="s2">&#34;</span><span class="si">${</span><span class="nv">backup_world</span><span class="si">}</span><span class="s2">-</span><span class="k">$(</span>date +<span class="s2">&#34;%H-%M-%S-%m-%d-%Y&#34;</span><span class="k">)</span><span class="s2">.zip&#34;</span>

<span class="k">function</span> create_archive <span class="o">{</span>
    <span class="nb">printf</span> <span class="s2">&#34;Creating archive of %b</span><span class="si">${</span><span class="nv">backup_world</span><span class="si">}</span><span class="s2">%b\n&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&#34;</span>
    zip -r <span class="nv">$archive_name</span> <span class="nv">$backup_world</span>
<span class="o">}</span>

<span class="k">function</span> amazon_bak <span class="o">{</span>

    create_archive

    <span class="nb">printf</span> <span class="s2">&#34;Checking if bucket has more than %b</span><span class="si">${</span><span class="nv">backup_limit</span><span class="si">}</span><span class="s2">%b files already.\n&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&#34;</span>
    <span class="nv">content</span><span class="o">=(</span> <span class="k">$(</span>aws s3 ls s3://<span class="nv">$backup_bucket</span> <span class="p">|</span> awk <span class="s1">&#39;{print $4}&#39;</span><span class="k">)</span> <span class="o">)</span>

    <span class="k">if</span> <span class="o">[[</span> <span class="si">${#</span><span class="nv">content</span><span class="p">[@]</span><span class="si">}</span> -eq <span class="nv">$backup_limit</span> <span class="o">||</span> <span class="si">${#</span><span class="nv">content</span><span class="p">[@]</span><span class="si">}</span> -gt <span class="nv">$backup_limit</span>  <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
        <span class="nb">echo</span> <span class="s2">&#34;There are too many archives. Deleting oldest one.&#34;</span>
        <span class="c1"># We can assume here that the list is in cronological order</span>
    	<span class="nb">printf</span> <span class="s2">&#34;%bs3://</span><span class="si">${</span><span class="nv">backup_bucket</span><span class="si">}</span><span class="s2">/</span><span class="si">${</span><span class="nv">content</span><span class="p">[0]</span><span class="si">}</span><span class="s2">\n%b&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&#34;</span>
        aws s3 rm s3://<span class="nv">$backup_bucket</span>/<span class="si">${</span><span class="nv">content</span><span class="p">[0]</span><span class="si">}</span>
    <span class="k">fi</span>

    <span class="nb">printf</span> <span class="s2">&#34;Uploading %b</span><span class="si">${</span><span class="nv">archive_name</span><span class="si">}</span><span class="s2">%b to s3 archive bucket.\n&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&#34;</span>
    <span class="nv">state</span><span class="o">=</span><span class="k">$(</span>aws s3 cp <span class="nv">$archive_name</span> s3://<span class="nv">$backup_bucket</span><span class="k">)</span>

    <span class="k">if</span> <span class="o">[[</span> <span class="s2">&#34;</span><span class="nv">$state</span><span class="s2">&#34;</span> <span class="o">=</span>~ <span class="s2">&#34;upload:&#34;</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
        <span class="nb">printf</span> <span class="s2">&#34;File upload %bsuccessful%b.\n&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">LIGHT_GREEN</span><span class="si">}</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&#34;</span>
    <span class="k">else</span>
        <span class="nb">printf</span> <span class="s2">&#34;%bError%b occured while uploading archive. Please investigate.\n&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&#34;</span>
    <span class="k">fi</span>
<span class="o">}</span>

<span class="k">function</span> custom <span class="o">{</span>
    <span class="k">if</span> <span class="o">[[</span> -e custom.sh <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
        <span class="nb">source</span> ./custom.sh
    <span class="k">else</span>
        <span class="nb">echo</span> <span class="s2">&#34;custom.sh script not found. Please implement the apropriate functions.&#34;</span>
        <span class="nb">exit</span> <span class="m">1</span>
    <span class="k">fi</span>

    <span class="nb">echo</span> <span class="s2">&#34;Checking for the number of files. Limit is: </span><span class="nv">$backup_limit</span><span class="s2">.&#34;</span>
    <span class="nv">files</span><span class="o">=(</span> <span class="k">$(</span>list<span class="k">)</span> <span class="o">)</span>
    <span class="k">if</span> <span class="o">[[</span> <span class="si">${#</span><span class="nv">files</span><span class="p">[@]</span><span class="si">}</span> -eq <span class="nv">$backup_limit</span> <span class="o">||</span> <span class="si">${#</span><span class="nv">files</span><span class="p">[@]</span><span class="si">}</span> -gt <span class="nv">$backup_limit</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
        <span class="nb">echo</span> <span class="s2">&#34;Deleting extra file.&#34;</span>
        delete <span class="si">${</span><span class="nv">files</span><span class="p">[0]</span><span class="si">}</span>
        <span class="k">if</span> <span class="o">[[</span> <span class="nv">$?</span> !<span class="o">=</span> <span class="m">0</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
            <span class="nb">printf</span> <span class="s2">&#34;%bFailed%b to delete file. Please investigate failure.&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&#34;</span>
            <span class="nb">exit</span> <span class="nv">$?</span>
        <span class="k">fi</span>
    <span class="k">fi</span>

    <span class="nb">echo</span> <span class="s2">&#34;Zipping world.&#34;</span>
    create_archive

    <span class="nb">echo</span> <span class="s2">&#34;Uploading world.&#34;</span>
    upload <span class="nv">$archive_name</span>

    <span class="k">if</span> <span class="o">[[</span> <span class="nv">$?</span> !<span class="o">=</span> <span class="m">0</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
        <span class="nb">printf</span> <span class="s2">&#34;%bFailed%b to upload archive. Please investigate the error.&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&#34;</span>
        <span class="nb">exit</span> <span class="nv">$?</span>
    <span class="k">fi</span>

    <span class="nb">printf</span> <span class="s2">&#34;Upload %bsuccessful%b&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">LIGHT_GREEN</span><span class="si">}</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&#34;</span>
<span class="o">}</span>

<span class="k">function</span> <span class="nb">help</span> <span class="o">{</span>
    <span class="nb">echo</span> <span class="s2">&#34;Usage:&#34;</span>
    <span class="nb">echo</span> <span class="s2">&#34;./backup_world [METHOD]&#34;</span>
    <span class="nb">echo</span> <span class="s2">&#34;Exp.: ./backup_world aws|./backup_world custom|./backup_world dropbox&#34;</span>
    <span class="nb">echo</span> <span class="s2">&#34;Each method has it&#39;s own environment properties that it requires.&#34;</span>
    <span class="nb">echo</span> <span class="s2">&#34;Global: MINECRAFT_WORLD|MINECRAFT_BUCKET|MINECRAFT_ARCHIVE_LIMIT&#34;</span>
    <span class="nb">echo</span> <span class="s2">&#34;Custom: Have a file, called &#39;custom.sh&#39; which is sourced.&#34;</span>
    <span class="nb">echo</span> <span class="s2">&#34;Implement these three functions: upload | list | delete.&#34;</span>
    <span class="nb">echo</span> <span class="s2">&#34;upload -&gt; should return exit code 0 on success, should return exit code 1 on failure.&#34;</span>
    <span class="nb">echo</span> <span class="s2">&#34;list -&gt; should return a list of cronologically ordered items.&#34;</span>
    <span class="nb">echo</span> <span class="s2">&#34;delete -&gt; should return exit code 0 on success, should return exit code 1 on failure.&#34;</span>
<span class="o">}</span>

<span class="k">case</span> <span class="nv">$1</span> in
    aws <span class="o">)</span>
        amazon_bak
        <span class="p">;;</span>
    custom <span class="o">)</span>
        custom
        <span class="p">;;</span>
    * <span class="o">)</span>
        <span class="nb">help</span>
        <span class="p">;;</span>
<span class="k">esac</span>
</code></pre></td></tr></table>
</div>
</div><p>And here is the sample implementation for the custom upload functionality.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/bin/bash
</span><span class="cp"></span>
<span class="k">function</span> upload <span class="o">{</span>
    <span class="nb">echo</span> <span class="s2">&#34;uploading&#34;</span>
    <span class="nb">local</span> <span class="nv">result</span><span class="o">=</span><span class="m">0</span>
    <span class="k">return</span> <span class="nv">$result</span>
<span class="o">}</span>

<span class="k">function</span> delete <span class="o">{</span>
    <span class="nb">echo</span> <span class="s2">&#34;deleting </span><span class="nv">$1</span><span class="s2">&#34;</span>
    <span class="nb">local</span> <span class="nv">result</span><span class="o">=</span><span class="m">0</span>
    <span class="k">return</span> <span class="nv">$result</span>
<span class="o">}</span>

<span class="k">function</span> list <span class="o">{</span>
    <span class="nb">local</span> <span class="nv">arr</span><span class="o">=(</span><span class="s2">&#34;file1&#34;</span> <span class="s2">&#34;file2&#34;</span> <span class="s2">&#34;file3&#34;</span><span class="o">)</span>
    <span class="nb">echo</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">arr</span><span class="p">[@]</span><span class="si">}</span><span class="s2">&#34;</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>Thanks for reading!</p>
<p>Gergely.</p>]]></content>
    </item>
    
    <item>
      <title>Minecraft world automatic backup to AWS S3 bucket</title>
      <link>https://skarlso.github.io/2016/04/16/minecraft-server-aws-s3-backup/</link>
      <pubDate>Sat, 16 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2016/04/16/minecraft-server-aws-s3-backup/</guid>
      <description>Hi Folks.
Previously we created a Minecraft server using Docker. After my server got popular in the family, and a lot of stuff started to pile up on it, as a good IT person, I&amp;rsquo;m backing up the world once in a while.
For that, I&amp;rsquo;m using AWS S3 with the CLI and a little bash script which runs once a week.
The script is really straightforward. I&amp;rsquo;m doing manual versioning, although S3 does provide one out of the box.</description>
      <content type="html"><![CDATA[<p>Hi Folks.</p>
<p>Previously we created a Minecraft server using Docker. After my server got popular in the family, and a lot of stuff started to pile up on it, as a good IT person, I&rsquo;m backing up the world once in a while.</p>
<p>For that, I&rsquo;m using AWS S3 with the CLI and a little bash script which runs once a week.</p>
<p>The script is really straightforward. I&rsquo;m doing manual versioning, although S3 does provide one out of the box. However, amazon&rsquo;s S3 versioning doesn&rsquo;t allow limiting the number of versions being kept. And since I&rsquo;m doing that anyways, might as well take care of the rest.</p>
<p>Without further ado, here is the script:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/bin/bash
</span><span class="cp"></span>
<span class="k">if</span> <span class="o">[[</span> -t <span class="m">1</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
    <span class="nv">colors</span><span class="o">=</span><span class="k">$(</span>tput colors<span class="k">)</span>
    <span class="k">if</span> <span class="o">[[</span> <span class="nv">$colors</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
        <span class="nv">RED</span><span class="o">=</span><span class="s1">&#39;\033[0;31m&#39;</span>
        <span class="nv">LIGHT_GREEN</span><span class="o">=</span><span class="s1">&#39;\033[1;32m&#39;</span>
        <span class="nv">NC</span><span class="o">=</span><span class="s1">&#39;\033[0m&#39;</span>
    <span class="k">fi</span>
<span class="k">fi</span>

<span class="k">if</span> <span class="o">[[</span> -z <span class="si">${</span><span class="nv">MINECRAFT_BUCKET</span><span class="si">}</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
	<span class="nb">printf</span> <span class="s2">&#34;Please set the env variable </span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">MINECRAFT_BUCKET</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2"> to the s3 archive bucket name.\n&#34;</span>
	<span class="nb">exit</span> <span class="m">0</span>
<span class="k">fi</span>

<span class="k">if</span> <span class="o">[[</span> -z <span class="si">${</span><span class="nv">MINECRAFT_ARCHIVE_LIMIT</span><span class="si">}</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
	<span class="nb">printf</span> <span class="s2">&#34;Please set the env variable </span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">MINECRAFT_ARCHIVE_LIMIT</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2"> to limit the number of archives to keep.\n&#34;</span>
	<span class="nb">exit</span> <span class="m">0</span>
<span class="k">fi</span>

<span class="nv">backup_bucket</span><span class="o">=</span><span class="si">${</span><span class="nv">MINECRAFT_BUCKET</span><span class="si">}</span>
<span class="nv">backup_limit</span><span class="o">=</span><span class="si">${</span><span class="nv">MINECRAFT_ARCHIVE_LIMIT</span><span class="si">}</span>
<span class="nv">world</span><span class="o">=</span><span class="nv">$1</span>
<span class="nb">printf</span> <span class="s2">&#34;Creating archive of </span><span class="si">${</span><span class="nv">RED</span><span class="si">}${</span><span class="nv">world</span><span class="si">}${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">\n&#34;</span>
<span class="nv">archive_name</span><span class="o">=</span><span class="s2">&#34;</span><span class="si">${</span><span class="nv">world</span><span class="si">}</span><span class="s2">-</span><span class="k">$(</span>date +<span class="s2">&#34;%H-%M-%S-%m-%d-%Y&#34;</span><span class="k">)</span><span class="s2">.zip&#34;</span>
zip -r <span class="nv">$archive_name</span> <span class="nv">$world</span>

<span class="nb">printf</span> <span class="s2">&#34;Checking if bucket has more than </span><span class="si">${</span><span class="nv">RED</span><span class="si">}${</span><span class="nv">backup_limit</span><span class="si">}${</span><span class="nv">NC</span><span class="si">}</span><span class="s2"> files already.\n&#34;</span>
<span class="nv">content</span><span class="o">=(</span> <span class="k">$(</span>aws s3 ls s3://<span class="nv">$backup_bucket</span> <span class="p">|</span> awk <span class="s1">&#39;{print $4}&#39;</span><span class="k">)</span> <span class="o">)</span>

<span class="k">if</span> <span class="o">[[</span> <span class="si">${#</span><span class="nv">content</span><span class="p">[@]</span><span class="si">}</span> -eq <span class="nv">$backup_limit</span> <span class="o">||</span> <span class="si">${#</span><span class="nv">content</span><span class="p">[@]</span><span class="si">}</span> -gt <span class="nv">$backup_limit</span>  <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
    <span class="nb">echo</span> <span class="s2">&#34;There are too many archives. Deleting oldest one.&#34;</span>
    <span class="c1"># We can assume here that the list is in cronological order</span>
	<span class="nb">printf</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">s3://</span><span class="si">${</span><span class="nv">backup_bucket</span><span class="si">}</span><span class="s2">/</span><span class="si">${</span><span class="nv">content</span><span class="p">[0]</span><span class="si">}</span><span class="s2">\n&#34;</span>
    aws s3 rm s3://<span class="nv">$backup_bucket</span>/<span class="si">${</span><span class="nv">content</span><span class="p">[0]</span><span class="si">}</span>
<span class="k">fi</span>

<span class="nb">printf</span> <span class="s2">&#34;Uploading </span><span class="si">${</span><span class="nv">RED</span><span class="si">}${</span><span class="nv">archive_name</span><span class="si">}${</span><span class="nv">NC</span><span class="si">}</span><span class="s2"> to s3 archive bucket.\n&#34;</span>
<span class="nv">state</span><span class="o">=</span><span class="k">$(</span>aws s3 cp <span class="nv">$archive_name</span> s3://<span class="nv">$backup_bucket</span><span class="k">)</span>

<span class="k">if</span> <span class="o">[[</span> <span class="s2">&#34;</span><span class="nv">$state</span><span class="s2">&#34;</span> <span class="o">=</span>~ <span class="s2">&#34;upload:&#34;</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
    <span class="nb">printf</span> <span class="s2">&#34;File upload </span><span class="si">${</span><span class="nv">LIGHT_GREEN</span><span class="si">}</span><span class="s2">successful</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">.\n&#34;</span>
<span class="k">else</span>
    <span class="nb">printf</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">Error</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2"> occured while uploading archive. Please investigate.\n&#34;</span>
<span class="k">fi</span>
</code></pre></td></tr></table>
</div>
</div><p>It uses environment properties to define where to upload the given world and how many versions to keep.</p>
<p>I&rsquo;m calling this from a cron job, and it&rsquo;s sitting next to where the Minecraft world is.</p>
<p>That&rsquo;s it folks.</p>
<p>I&rsquo;ll start expanding on this idea and implement various services, like your own server address, or dropbox, or what have you.</p>
<p>Happy backing up.</p>
<p>Gergely.</p>
]]></content>
    </item>
    
  </channel>
</rss>