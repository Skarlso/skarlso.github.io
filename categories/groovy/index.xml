<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>groovy on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/categories/groovy/</link>
    <description>Recent content in groovy on Ramblings of a cloud engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Oct 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://skarlso.github.io/categories/groovy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jenkins Job DSL and Groovy goodness</title>
      <link>https://skarlso.github.io/2015/10/15/jenkins-job-dsl-and-groovy-goodness/</link>
      <pubDate>Thu, 15 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/15/jenkins-job-dsl-and-groovy-goodness/</guid>
      <description>Hi Folks.
Ever used Job DSL plugin for Jenkins? What is that you say? Well, it&amp;#8217;s TEH most awesome plug-in for Jenkins to have, because you can CODE your job configuration and put it under source control.
Today, however, I&amp;#8217;m not going to write about that because the tutorials on Jenkins JOB DSL are very extensive and very well done. Anyone can pick them up.
Today, I would like to write about a part of it which is even more interesting.</description>
    </item>
    
    <item>
      <title>Jenkins Job DSL and Groovy goodness</title>
      <link>https://skarlso.github.io/2015/10/15/jenkins-job-dsl-and-groovy-goodness/</link>
      <pubDate>Thu, 15 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/15/jenkins-job-dsl-and-groovy-goodness/</guid>
      <description>Hi Folks.
Ever used Job DSL plugin for Jenkins? What is that you say? Well, it&amp;#8217;s TEH most awesome plug-in for Jenkins to have, because you can CODE your job configuration and put it under source control.
Today, however, I&amp;#8217;m not going to write about that because the tutorials on Jenkins JOB DSL are very extensive and very well done. Anyone can pick them up.
Today, I would like to write about a part of it which is even more interesting.</description>
    </item>
    
    <item>
      <title>Why the expressiveness of your Tests is important – Part One</title>
      <link>https://skarlso.github.io/2014/11/15/why-the-expressiveness-of-your-tests-is-important-part-one/</link>
      <pubDate>Sat, 15 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2014/11/15/why-the-expressiveness-of-your-tests-is-important-part-one/</guid>
      <description>&lt;p&gt;Hello Everybody.&lt;/p&gt;

&lt;p&gt;This time I&amp;#8217;d like to write about the expressiveness of a Test. I think that it&amp;#8217;s very important to write understandable and expressive tests. In older times I was studying novel writing. There is a rule which a novel needs to follow. It goes something like this: &amp;#8220;A novel needs to lead its reader and make him understand in the simplest way what&amp;#8217;s going on, with whom and why?&amp;#8221;. In other words, it&amp;#8217;s not a puzzle. It should be obvious what the test is trying to do and it should not require the reader to try and solve it in order to understand it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Why the expressiveness of your Tests is important – Part One</title>
      <link>https://skarlso.github.io/2014/11/15/why-the-expressiveness-of-your-tests-is-important-part-one/</link>
      <pubDate>Sat, 15 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2014/11/15/why-the-expressiveness-of-your-tests-is-important-part-one/</guid>
      <description>&lt;p&gt;Hello Everybody.&lt;/p&gt;

&lt;p&gt;This time I&amp;#8217;d like to write about the expressiveness of a Test. I think that it&amp;#8217;s very important to write understandable and expressive tests. In older times I was studying novel writing. There is a rule which a novel needs to follow. It goes something like this: &amp;#8220;A novel needs to lead its reader and make him understand in the simplest way what&amp;#8217;s going on, with whom and why?&amp;#8221;. In other words, it&amp;#8217;s not a puzzle. It should be obvious what the test is trying to do and it should not require the reader to try and solve it in order to understand it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Groovy and Grails course summary</title>
      <link>https://skarlso.github.io/2013/04/11/groovy-and-grails-course-summary/</link>
      <pubDate>Thu, 11 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2013/04/11/groovy-and-grails-course-summary/</guid>
      <description>Hi folks.
I attended a 4 day course of Groovy and Grails and this is my attempt at writing up a summary to see how much I retained. I&amp;#8217;ll try to do this from the top of my head without peaking at my notes.
So let&amp;#8217;s begin.
Introductions
First of all, introductions. The course was held by Peter Ledbrook. He is the guy who wrote Grails in Action. He is awesome, go check him out.</description>
    </item>
    
    <item>
      <title>Groovy and Grails course summary</title>
      <link>https://skarlso.github.io/2013/04/11/groovy-and-grails-course-summary/</link>
      <pubDate>Thu, 11 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2013/04/11/groovy-and-grails-course-summary/</guid>
      <description>Hi folks.
I attended a 4 day course of Groovy and Grails and this is my attempt at writing up a summary to see how much I retained. I&amp;#8217;ll try to do this from the top of my head without peaking at my notes.
So let&amp;#8217;s begin.
Introductions
First of all, introductions. The course was held by Peter Ledbrook. He is the guy who wrote Grails in Action. He is awesome, go check him out.</description>
    </item>
    
  </channel>
</rss>