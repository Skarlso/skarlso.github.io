<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Groovy on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/categories/groovy/</link>
    <description>Recent content in Groovy on Ramblings of a cloud engineer</description>
    <generator>Hugo -- 0.136.0</generator>
    <language>en</language>
    <lastBuildDate>Thu, 15 Oct 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://skarlso.github.io/categories/groovy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Jenkins Job DSL and Groovy goodness</title>
      <link>https://skarlso.github.io/2015/10/15/jenkins-job-dsl-and-groovy-goodness/</link>
      <pubDate>Thu, 15 Oct 2015 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2015/10/15/jenkins-job-dsl-and-groovy-goodness/</guid>
      <description>&lt;p&gt;Hi Folks.&lt;/p&gt;
&lt;p&gt;Ever used &lt;a href=&#34;https://wiki.jenkins-ci.org/display/JENKINS/Job+DSL+Plugin&#34; target=&#34;_blank&#34;&gt;Job DSL plugin&lt;/a&gt; for Jenkins? What is that you say? Well, it&amp;rsquo;s TEH most awesome plug-in for Jenkins to have, because you can CODE your job configuration and put it under source control.&lt;/p&gt;
&lt;p&gt;Today, however, I&amp;rsquo;m not going to write about that because the tutorials on Jenkins JOB DSL are very extensive and very well done. Anyone can pick them up.&lt;/p&gt;
&lt;p&gt;Today, I would like to write about a part of it which is even more interesting. And that is, extracting re-occurring parts in your job configurations.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why the expressiveness of your Tests is important â€“ Part One</title>
      <link>https://skarlso.github.io/2014/11/15/why-the-expressiveness-of-your-tests-is-important-part-one/</link>
      <pubDate>Sat, 15 Nov 2014 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2014/11/15/why-the-expressiveness-of-your-tests-is-important-part-one/</guid>
      <description>&lt;p&gt;Hello Everybody.&lt;/p&gt;
&lt;p&gt;This time I&amp;rsquo;d like to write about the expressiveness of a Test. I think that it&amp;rsquo;s very important to write understandable and expressive tests. In older times I was studying novel writing. There is a rule which a novel needs to follow. It goes something like this: &amp;ldquo;A novel needs to lead its reader and make him understand in the simplest way what&amp;rsquo;s going on, with whom and why?&amp;rdquo;. In other words, it&amp;rsquo;s not a puzzle. It should be obvious what the test is trying to do and it should not require the reader to try and solve it in order to understand it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Groovy and Grails course summary</title>
      <link>https://skarlso.github.io/2013/04/11/groovy-and-grails-course-summary/</link>
      <pubDate>Thu, 11 Apr 2013 00:00:00 +0000</pubDate>
      <guid>https://skarlso.github.io/2013/04/11/groovy-and-grails-course-summary/</guid>
      <description>&lt;p&gt;Hi folks.&lt;/p&gt;
&lt;p&gt;I attended a 4 day course of Groovy and Grails and this is my attempt at writing up a summary to see how much I retained. I&amp;rsquo;ll try to do this from the top of my head without peaking at my notes.&lt;/p&gt;
&lt;p&gt;So let&amp;rsquo;s begin.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Introductions&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First of all, introductions. The course was held by Peter Ledbrook. He is the guy who wrote &lt;a href=&#34;http://www.amazon.co.uk/Grails-Action-Peter-Ledbrook/dp/1617290963/ref=sr_1_2?ie=UTF8&amp;qid=1365713080&amp;sr=8-2&amp;keywords=peter+ledbrook&#34; title=&#34;Grails in Action&#34;&gt;Grails in Action&lt;/a&gt;. He is awesome, go check him out. :: &lt;a href=&#34;https://twitter.com/pledbrook&#34; title=&#34;Twitter for Peter&#34;&gt;Twitter&lt;/a&gt; ::&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
