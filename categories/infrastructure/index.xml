<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>infrastructure on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/categories/infrastructure/</link>
    <description>Recent content in infrastructure on Ramblings of a cloud engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 23 Jul 2020 21:01:00 +0100</lastBuildDate><atom:link href="https://skarlso.github.io/categories/infrastructure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to deploy a Go (Golang) backend with a React frontend separately on Kubernetes - Part One</title>
      <link>https://skarlso.github.io/2020/07/23/kubernetes-deploy-golang-react-apps-separately-part1/</link>
      <pubDate>Thu, 23 Jul 2020 21:01:00 +0100</pubDate>
      
      <guid>https://skarlso.github.io/2020/07/23/kubernetes-deploy-golang-react-apps-separately-part1/</guid>
      <description>Intro Welcome. This is a longer post about how to deploy a Go backend with a React frontend on Kubernetes as separate entities. Instead of the usual compiled together single binary Go application, we are going to separate the two. Why? Because usually a React frontend is just a &amp;ldquo;static&amp;rdquo; SPA app with very little requirements in terms of resources, while the Go backend does most of the leg work, requiring a lot more resources.</description>
    </item>
    
  </channel>
</rss>
