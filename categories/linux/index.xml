<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Ramblings of a build engineer</title>
    <link>https://skarlso.github.io/categories/linux/</link>
    <description>Recent content in Linux on Ramblings of a build engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 06 Jun 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://skarlso.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Docker &#43; Java &#43; Vagrant&#43; GO.CD</title>
      <link>https://skarlso.github.io/2015/06/06/docker-ruby-lotus-go-cd/</link>
      <pubDate>Sat, 06 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/06/06/docker-ruby-lotus-go-cd/</guid>
      <description>

&lt;p&gt;Hello folks.&lt;/p&gt;

&lt;p&gt;Today, I would like to write about something interesting and close to me at the moment. I&amp;#8217;m going to setup Go.cd with Docker, and I&amp;#8217;m going to get a Ruby Lotus app running. Let&amp;#8217;s get started.&lt;/p&gt;

&lt;h1 id=&#34;fluff:364caadcaeab0c477e5f38267f76ea35&#34;&gt;Fluff&lt;/h1&gt;

&lt;p&gt;Now, obviously, you don&amp;#8217;t really need Go.Cd or Docker to setup a Java Gradle application, since it&amp;#8217;s dead easy. But I&amp;#8217;m going to do it just for the heck of it.&lt;/p&gt;

&lt;h1 id=&#34;setup:364caadcaeab0c477e5f38267f76ea35&#34;&gt;Setup&lt;/h1&gt;

&lt;p&gt;Okay, lets start with Vagrant. Docker&amp;#8217;s strength is coming from Linux&amp;#8217;s process isolation capabilities it&amp;#8217;s not yet properly working on OSX or Windows. You have a couple of options if you&amp;#8217;d like to try never the less, like boot2docker, or a Tiny Linux kernel, but at that point, I think it&amp;#8217;s easier to use a VM.&lt;/p&gt;

&lt;h4 id=&#34;vagrant:364caadcaeab0c477e5f38267f76ea35&#34;&gt;Vagrant&lt;/h4&gt;

&lt;p&gt;So, let&amp;#8217;s start with my small Vagrantfile.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;ruby&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color:#008000; font-style:italic;&#34;&gt;# -*- mode: ruby -*-&lt;/span&gt;
&lt;span style=&#34;color:#008000; font-style:italic;&#34;&gt;# vi: set ft=ruby :&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color:#008000; font-style:italic;&#34;&gt;# All Vagrant configuration is done below. The &#34;2&#34; in Vagrant.configure&lt;/span&gt;
&lt;span style=&#34;color:#008000; font-style:italic;&#34;&gt;# configures the configuration version (we support older styles for&lt;/span&gt;
&lt;span style=&#34;color:#008000; font-style:italic;&#34;&gt;# backwards compatibility). Please don&#39;t change it unless you know what&lt;/span&gt;
&lt;span style=&#34;color:#008000; font-style:italic;&#34;&gt;# you&#39;re doing.&lt;/span&gt;
Vagrant.&lt;span style=&#34;color:#9900CC;&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color:#006600; font-weight:bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color:#006666;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#006600; font-weight:bold;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color:#9966CC; font-weight:bold;&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#006600; font-weight:bold;&#34;&gt;|&lt;/span&gt;config&lt;span style=&#34;color:#006600; font-weight:bold;&#34;&gt;|&lt;/span&gt;
  &lt;span style=&#34;color:#008000; font-style:italic;&#34;&gt;# The most common configuration options are documented and commented below.&lt;/span&gt;
  &lt;span style=&#34;color:#008000; font-style:italic;&#34;&gt;# For a complete reference, please see the online documentation at&lt;/span&gt;
  &lt;span style=&#34;color:#008000; font-style:italic;&#34;&gt;# https://docs.vagrantup.com.&lt;/span&gt;
&amp;nbsp;
  &lt;span style=&#34;color:#008000; font-style:italic;&#34;&gt;# Every Vagrant development environment requires a box. You can search for&lt;/span&gt;
  &lt;span style=&#34;color:#008000; font-style:italic;&#34;&gt;# boxes at https://atlas.hashicorp.com/search.&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;box&lt;/span&gt; = &lt;span style=&#34;color:#996600;&#34;&gt;&#34;trusty&#34;&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;box_url&lt;/span&gt; = &lt;span style=&#34;color:#996600;&#34;&gt;&#34;https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box&#34;&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;network&lt;/span&gt; &lt;span style=&#34;color:#996600;&#34;&gt;&#34;forwarded_port&#34;&lt;/span&gt;, guest: &lt;span style=&#34;color:#006666;&#34;&gt;2300&lt;/span&gt;, host: &lt;span style=&#34;color:#006666;&#34;&gt;2300&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;network&lt;/span&gt; &lt;span style=&#34;color:#996600;&#34;&gt;&#34;forwarded_port&#34;&lt;/span&gt;, guest: &lt;span style=&#34;color:#006666;&#34;&gt;8153&lt;/span&gt;, host: &lt;span style=&#34;color:#006666;&#34;&gt;8153&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;provision&lt;/span&gt; &lt;span style=&#34;color:#996600;&#34;&gt;&#34;shell&#34;&lt;/span&gt;, path: &lt;span style=&#34;color:#996600;&#34;&gt;&#34;setup.sh&#34;&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;provider&lt;/span&gt; &lt;span style=&#34;color:#996600;&#34;&gt;&#34;virtualbox&#34;&lt;/span&gt; &lt;span style=&#34;color:#9966CC; font-weight:bold;&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#006600; font-weight:bold;&#34;&gt;|&lt;/span&gt;v&lt;span style=&#34;color:#006600; font-weight:bold;&#34;&gt;|&lt;/span&gt;
    v.&lt;span style=&#34;color:#9900CC;&#34;&gt;memory&lt;/span&gt; = &lt;span style=&#34;color:#006666;&#34;&gt;8192&lt;/span&gt;
    v.&lt;span style=&#34;color:#9900CC;&#34;&gt;cpus&lt;/span&gt; = &lt;span style=&#34;color:#006666;&#34;&gt;2&lt;/span&gt;
  &lt;span style=&#34;color:#9966CC; font-weight:bold;&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color:#9966CC; font-weight:bold;&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Very simple. I&amp;#8217;m setting up a trusty64(because docker requires 3.10 &amp;lt;= x)Â box and then doing a simple shell provision. Also, I gave it a bit juice, since go-server requires a raw power. Here is the shell script:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#/bin/bash&lt;/span&gt;
&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get update&lt;/span&gt;
&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get install&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-y&lt;/span&gt; software-properties-common python-software-properties
&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get update&lt;/span&gt;
&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get install&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-y&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;vim&lt;/span&gt;
&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; add-apt-repository &lt;span style=&#34;color: #660033;&#34;&gt;-y&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;ppa:webupd8team/java&#34;&lt;/span&gt;
&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get update&lt;/span&gt;
&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;debconf&lt;/span&gt; shared&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;accepted-oracle-license-v1-&lt;span style=&#34;color: #000000;&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; debconf-set-selections &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;&lt;/span&gt;amp;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;&lt;/span&gt;amp; &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;debconf&lt;/span&gt; shared&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;accepted-oracle-license-v1-&lt;span style=&#34;color: #000000;&#34;&gt;1&lt;/span&gt; seen &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; debconf-set-selections
&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get install&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-y&lt;/span&gt; oracle-java8-installer
&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get update&lt;/span&gt;
&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;wget&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-qO-&lt;/span&gt; https:&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;//&lt;/span&gt;get.docker.com&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sh&lt;/span&gt;
route add &lt;span style=&#34;color: #660033;&#34;&gt;-net&lt;/span&gt; 172.17.0.0 netmask 255.255.255.0 gw 172.17.42.1&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;The debconf at the end accepts java8&amp;#8217;s terms and conditions. And the last line installs docker in my box. This runs for a little while&amp;#8230;&lt;/p&gt;

&lt;p&gt;The routing on the end routes every traffic from 172.17.*.* to my vagrant box, which in turn I&amp;#8217;ll be able to use from my mac local, like 127.0.0.1:8153/go/home.&lt;/p&gt;

&lt;p&gt;After a vagrant up, my box is ready to be used.&lt;/p&gt;

&lt;h4 id=&#34;docker:364caadcaeab0c477e5f38267f76ea35&#34;&gt;Docker&lt;/h4&gt;

&lt;p&gt;When that&amp;#8217;s finished, we can move on to the next part, which is writing a little Dockerfile for our image. Go.cd will require java and a couple of other things, so let&amp;#8217;s automate the installation of that so we don&amp;#8217;t have to do itÂ by hand.&lt;/p&gt;

&lt;p&gt;Here is a Dockerfile I came up with:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;FROM ubuntu
MAINTAINER Skarlso
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;############ SETUP #############&lt;/span&gt;
RUN &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get update&lt;/span&gt;
RUN &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get install&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-y&lt;/span&gt; software-properties-common python-software-properties
RUN add-apt-repository &lt;span style=&#34;color: #660033;&#34;&gt;-y&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;ppa:webupd8team/java&#34;&lt;/span&gt;
RUN &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;debconf&lt;/span&gt; shared&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;accepted-oracle-license-v1-&lt;span style=&#34;color: #000000;&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; debconf-set-selections &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;&lt;/span&gt;amp;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;&lt;/span&gt;amp; &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;debconf&lt;/span&gt; shared&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;accepted-oracle-license-v1-&lt;span style=&#34;color: #000000;&#34;&gt;1&lt;/span&gt; seen &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; debconf-set-selections
RUN &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get update&lt;/span&gt;
RUN &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get install&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-y&lt;/span&gt; oracle-java8-installer
RUN &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get install&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-y&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;vim&lt;/span&gt;
RUN &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get install&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-y&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;unzip&lt;/span&gt;
RUN &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get install&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-y&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;git&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;So, our docker images have to be setup with Java as well for go.cd which I&amp;#8217;m taking care of here, and a little bit extra, to add vim, and unzip, which is required for dpkg later.&lt;/p&gt;

&lt;p&gt;At this point run: &lt;strong&gt;docker build -t ubuntu:go .&lt;/strong&gt; -&amp;gt; This will use the dockerfile and create the ubuntu:go image. Note theÂ &lt;strong&gt;.Â &lt;/strong&gt;at the end.&lt;/p&gt;

&lt;h4 id=&#34;go-cd:364caadcaeab0c477e5f38267f76ea35&#34;&gt;Go.cd&lt;/h4&gt;

&lt;p&gt;Now, I&amp;#8217;m creating two containers. One, go-server, will be the go server, and the other, go-agent, will be the go agent.&lt;/p&gt;

&lt;p&gt;First, go-server:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;docker run &lt;span style=&#34;color: #660033;&#34;&gt;-i&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-t&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;--name&lt;/span&gt; go-server &lt;span style=&#34;color: #660033;&#34;&gt;--hostname&lt;/span&gt;=go-server &lt;span style=&#34;color: #660033;&#34;&gt;-p&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;8153&lt;/span&gt;:&lt;span style=&#34;color: #000000;&#34;&gt;8153&lt;/span&gt; ubuntu:go &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;bin&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;bash&lt;/span&gt;
&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;wget&lt;/span&gt; http:&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;//&lt;/span&gt;download.go.cd&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;gocd-deb&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;go-server-15.1.0-&lt;span style=&#34;color: #000000;&#34;&gt;1863&lt;/span&gt;.deb
&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;dpkg&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-i&lt;/span&gt; go-server-15.1.0-&lt;span style=&#34;color: #000000;&#34;&gt;1863&lt;/span&gt;.deb&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Pretty straight forward, no? We forward 8153 to vagrant (which forwards it to my mac), so after we start go-server service we should be able to visit: &lt;a href=&#34;http://127.0.0.1:8153/go/home&#34;&gt;http://127.0.0.1:8153/go/home&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-00.00.08.png&#34;&gt;&lt;img class=&#34;alignnone size-thumbnail wp-image-519&#34; src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-00.00.08-150x150.png&#34; alt=&#34;Screen Shot 2015-06-06 at 00.00.08&#34; width=&#34;150&#34; height=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lo&amp;#8217;, and behold, go server. Let&amp;#8217;s add an agent too.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;docker run &lt;span style=&#34;color: #660033;&#34;&gt;-i&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-t&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;--name&lt;/span&gt; go-agent &lt;span style=&#34;color: #660033;&#34;&gt;--hostname&lt;/span&gt;=go-agent ubuntu:go &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;bin&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;bash&lt;/span&gt;
&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;wget&lt;/span&gt; http:&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;//&lt;/span&gt;download.go.cd&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;gocd-deb&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;go-agent-15.1.0-&lt;span style=&#34;color: #000000;&#34;&gt;1863&lt;/span&gt;.deb
&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;dpkg&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-i&lt;/span&gt; go-agent-15.1.0-&lt;span style=&#34;color: #000000;&#34;&gt;1863&lt;/span&gt;.deb
&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;vim&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;etc&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;default&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;go-agent
&lt;span style=&#34;color: #007800;&#34;&gt;GO_SERVER&lt;/span&gt;=172.17.0.1
service go-agent start&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;No need to forward anything here. And as you can see, my agent was added successfully.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-00.03.47.png&#34;&gt;&lt;img class=&#34;alignnone size-thumbnail wp-image-520&#34; src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-00.03.47-150x150.png&#34; alt=&#34;Screen Shot 2015-06-06 at 00.03.47&#34; width=&#34;150&#34; height=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All nice, and dandy. The agent is there, and I enabled it, so it&amp;#8217;s ready to work. Let&amp;#8217;s give it something to do, shall we?&lt;/p&gt;

&lt;h1 id=&#34;the-app:364caadcaeab0c477e5f38267f76ea35&#34;&gt;The App&lt;/h1&gt;

&lt;p&gt;I&amp;#8217;m going to use my gradle project which is on github. This one =&amp;gt;Â &lt;a href=&#34;https://github.com/Skarlso/DataMung.git&#34;&gt;https://github.com/Skarlso/DataMung.git&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Very basic setup. Just check it out and then build &amp;amp; run tests. Easy, right?&lt;/p&gt;

&lt;p&gt;First step in this process, define the pipeline. I&amp;#8217;m going to keep it simple. Name the pipeline DataMunger. Group is Linux. Now, in go.cd you have to define something called, an &lt;strong&gt;environment&lt;/strong&gt;. Environment can be anything you want, I&amp;#8217;m going to go with Linux. You have to assign &lt;strong&gt;agents&lt;/strong&gt; to this environment who fulfil it and the pipeline which will use that environment. More on that you can read in the go.cd documentation. This is how you would handle a pipeline which uses linux, and a windows environment at the same time.&lt;/p&gt;

&lt;p&gt;In step one you have to define something called the &lt;strong&gt;Material&lt;/strong&gt;. That will be the source on which the agent will work. This can be multiple, in different folders within the confines of the pipeline, or singular.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-09.09.55.png&#34;&gt;&lt;img class=&#34;alignnone size-thumbnail wp-image-523&#34; src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-09.09.55-150x150.png&#34; alt=&#34;Screen Shot 2015-06-06 at 09.09.55&#34; width=&#34;150&#34; height=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I defined my git project and tested the connection OK. Next up is the firstÂ &lt;strong&gt;StageÂ &lt;/strong&gt;and the initialÂ &lt;strong&gt;JobÂ &lt;/strong&gt;to perform. This, for me, will be a compile or an assemble, and later on a test run.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-09.12.19.png&#34;&gt;&lt;img class=&#34;alignnone size-thumbnail wp-image-524&#34; src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-09.12.19-150x150.png&#34; alt=&#34;Screen Shot 2015-06-06 at 09.12.19&#34; width=&#34;150&#34; height=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, Go is awesome in parallelising jobs. If my project would be large enough, I could have multiple jobsÂ here. But for now,Â I&amp;#8217;ll use stages because they run subsequently. So, first stage, compile. Next stage, testing and archiving the results.&lt;/p&gt;

&lt;p&gt;I added the next stage and defined the artefact. Go supports test-reports. If you define the path to a test artefact than go will parse it and create a nice report out of it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-09.20.23.png&#34;&gt;&lt;img class=&#34;alignnone size-thumbnail wp-image-525&#34; src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-09.20.23-150x150.png&#34; alt=&#34;Screen Shot 2015-06-06 at 09.20.23&#34; width=&#34;150&#34; height=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-09.22.23.png&#34;&gt;&lt;img class=&#34;alignnone size-thumbnail wp-image-526&#34; src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-09.22.23-150x150.png&#34; alt=&#34;Screen Shot 2015-06-06 at 09.22.23&#34; width=&#34;150&#34; height=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let&amp;#8217;s run it. It will probably fail on something. ð&lt;/p&gt;

&lt;p&gt;Well, I&amp;#8217;ll be&amp;#8230; It worked on the first run.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-09.29.51.png&#34;&gt;&lt;img class=&#34;alignnone size-thumbnail wp-image-529&#34; src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-09.29.51-150x150.png&#34; alt=&#34;Screen Shot 2015-06-06 at 09.29.51&#34; width=&#34;150&#34; height=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And here are the test results.&lt;/p&gt;

&lt;p&gt;[&lt;img class=&#34;alignnone size-thumbnail wp-image-530&#34; src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-09.30.54-150x150.png&#34; alt=&#34;Screen Shot 2015-06-06 at 09.30.54&#34; width=&#34;150&#34; height=&#34;150&#34; /&gt;][8]&lt;/p&gt;

&lt;h1 id=&#34;wrap-up:364caadcaeab0c477e5f38267f76ea35&#34;&gt;Wrap-up&lt;/h1&gt;

&lt;p&gt;Well, that&amp;#8217;s it folks. Gradle project, with vagrant, docker, and go.cd. I hope you all enjoyed reading about it as much as I did doing it.&lt;/p&gt;

&lt;p&gt;Any questions, please feel free to ask it in the comment section below.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;/p&gt;

&lt;p&gt;Have a nice weekend,&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;[8]: &lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-09.30.54.png&#34;&gt;http://ramblingsofaswtester.com/wp-content/uploads/2015/06/Screen-Shot-2015-06-06-at-09.30.54.png&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting Dual Card to work on Ubuntu 12.04.</title>
      <link>https://skarlso.github.io/2012/04/11/getting-dual-card-to-work-on-ubuntu-12-04/</link>
      <pubDate>Wed, 11 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2012/04/11/getting-dual-card-to-work-on-ubuntu-12-04/</guid>
      <description>&lt;p&gt;Hi guys.&lt;/p&gt;

&lt;p&gt;Today I want to talk about a little adventure I had yesterday night. It was quite the fun and frustration too. But neither comes without the other when it&amp;#8217;s about linux.&lt;/p&gt;

&lt;p&gt;So let us see what the problem is at hand. The problem machine is a Dell Inspiron N5110 with Nvidia card number one: GeForce GT 525M. And number two: Integrated. Optimus for the win.&lt;/p&gt;

&lt;p&gt;So how windows is handling this is actually with a software called Optimus. Now linux wasn&amp;#8217;t design to handle this properly but there are solutions. But I&amp;#8217;m getting ahead of myself. Let&amp;#8217;s start with the install.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ubuntu Install&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So first of all I installed &lt;a href=&#34;http://www.ubuntu.com/download/ubuntu/download&#34; target=&#34;_blank&#34;&gt;Ubuntu 32 bit&lt;/a&gt; because I experienced more problems with 64 bit. To be honest the ubuntu page also recommends 32 bit. You don&amp;#8217;t get to much from the 64 any ways.&lt;/p&gt;

&lt;p&gt;After I downloaded and burned my disc and installed ubuntu next to my windows 7, I went for the updates. Now HERE is the first key point in my struggle. After the install I went for the additional drivers listed. There were actually additional drivers listed at that point!! Which is interesting because AFTER I installed the updates they disappeared and never appeared again. I&amp;#8217;m guessing that one of the packages overrode my drivers. I would go back and reinstall the thing and experiment with it, but I don&amp;#8217;t care any more. &lt;img src=&#34;http://ramblingsofaswtester.com/wp-includes/images/smilies/simple-smile.png&#34; alt=&#34;:)&#34; class=&#34;wp-smiley&#34; style=&#34;height: 1em; max-height: 1em;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So let&amp;#8217;s move on&amp;#8230;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;After updating&amp;#8230;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So update went on and my Ubuntu was not using the proper resolution for my screen. It was stuck on 1024&amp;#215;768. Now at this point I would say I could have played around with xrandr and cvt but more about that later&amp;#8230;&lt;/p&gt;

&lt;p&gt;I was immediately searching for additional drivers only to find that my list was empty&amp;#8230;&lt;/p&gt;

&lt;p&gt;![Empty Additional Drivers][1]&lt;/p&gt;

&lt;p&gt;Like this. Now this isn&amp;#8217;t something new actually. I had this one before and I could not for the life of me solve it. Let&amp;#8217;s see what I did.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Common in Every solution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First let&amp;#8217;s go over some repository updates I did before starting to get some solutions.&lt;/p&gt;

&lt;p&gt;I added the x-swat repository to apt-get because that has the most recent packages that will be released.&lt;/p&gt;

&lt;p&gt;Add it with these commands:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;line_numbers&#34;&gt;
        &lt;pre&gt;1
2
3
4
&lt;/pre&gt;
      &lt;/td&gt;
      
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;    &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#Add swat repository&lt;/span&gt;
    &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; add-apt-repository ppa:ubuntu-x-swat&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;x-updates
    &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#Update and upgrade&lt;/span&gt;
    &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get update&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;&amp;&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get upgrade&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Now you&amp;#8217;re ready to move on&amp;#8230;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution Fail Number One&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My first guess was to reinstall nvidia driver because of the updates the new driver has to be built with the new version of kernel.&lt;/p&gt;

&lt;p&gt;So what I did was:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;line_numbers&#34;&gt;
        &lt;pre&gt;1
&lt;/pre&gt;
      &lt;/td&gt;
      
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;    &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get remove&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;--purge&lt;/span&gt; nvidia-current&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;After that finished I reinstalled everything:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;line_numbers&#34;&gt;
        &lt;pre&gt;1
&lt;/pre&gt;
      &lt;/td&gt;
      
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;    &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get update&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;&amp;&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get install&lt;/span&gt; nvidia-current nvidia-settings&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Additional drivers sometimes needs update to get new drivers. After that I rebooted. At this point I didn&amp;#8217;t have an xorg.conf files yet.&lt;/p&gt;

&lt;p&gt;After the reboot everything was the same. Nothing changed. nvidia-settings still said I don&amp;#8217;t appear to be using nvidia x. All right I thought let&amp;#8217;s do that.&lt;/p&gt;

&lt;p&gt;So I run:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;line_numbers&#34;&gt;
        &lt;pre&gt;1
&lt;/pre&gt;
      &lt;/td&gt;
      
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;    &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; nvidia-xconfig&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;And reboot..&lt;/p&gt;

&lt;p&gt;Now THIS messed up my resolution pretty badly. All I was able to get my desktop to was 640&amp;#215;480. At this point I begun to play with xrandr.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Xrandr&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So in order to get my resolution back I started to play around with xrandr at the first place. I wasn&amp;#8217;t trying to add anything to xorg.conf yet because I needed to find out if it would even work!&lt;/p&gt;

&lt;p&gt;Now xrandr adds unsupported resolutions to video cards. If you have a resolution which us unknown you can set it using cvt.&lt;/p&gt;

&lt;p&gt;Here is an article how to do so: &lt;a href=&#34;https://wiki.ubuntu.com/X/Config/Resolution&#34; target=&#34;_blank&#34;&gt;Xrandr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alas this didn&amp;#8217;t work&amp;#8230; LVDS1 which was the display for my laptop didn&amp;#8217;t wanted to allow the new resolution I added for 1366&amp;#215;768. The error was:&lt;/p&gt;

&lt;p&gt;X Error of failed request: BadMatch (invalid parameter attributes)&lt;/p&gt;

&lt;p&gt;Major opcode of failed request: 150 (RANDR)&lt;/p&gt;

&lt;p&gt;Minor opcode of failed request: 18 (RRAddOutputMode)&lt;/p&gt;

&lt;p&gt;Serial number of failed request: 25&lt;/p&gt;

&lt;p&gt;Current serial number in output stream: 26&lt;/p&gt;

&lt;p&gt;I couldn&amp;#8217;t make much of this rather then that my card was still not properly configured and additional drivers was still empty.&lt;/p&gt;

&lt;p&gt;As back to square one. I deleted xorg.conf and begun another solution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution Fail Number Two&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As I was going through problems I found one interesting one. It was a guide on how to install downloaded nvidia driver from scratch.&lt;/p&gt;

&lt;p&gt;So again I went and uninstalled nvidia and started this solution. The steps are these:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Start ubuntu with recovery mode. Login in root shell (with networking)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Remove your nvidia driver(what you did install) maybe this can be help: sudo apt-get purge nvidia-current sudo rm -rf /etc/X11/xorg.conf&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;restart your computer: sudo reboot&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;start ubuntu normally (not recovery)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;open /etc/default/grub : sudo gedit /etc/default/grub&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;replace the line GRUB_CMDLINE_LINUX=&amp;#8221;&amp;#8221; to GRUB_CMDLINE_LINUX=&amp;#8221;nomodeset&amp;#8221; (save and exit)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;update grub: sudo update-grub&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Download appropriate driver from nvidia&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;10.Give executable permission to the downloaded file : chmod a+x nvidia_driver.run&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Press CLT+ALT+F1 [command line shell will appear] and login&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;stop lightdm (display manager) service : sudo service lightdm stop&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;start nvidia installation: sudo ./nvidia_driver.run&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;reboot your system: sudo reboot&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now this brought up a couple of new problems. First that although I downloaded the proper driver from Nvidia it failed to detect my GPU for whatever reasons. And second it could not build because it couldn&amp;#8217;t find nvidia.ko. I couldn&amp;#8217;t resolve these issues although I guess there are some for it. But in the end it didn&amp;#8217;t matter.&lt;/p&gt;

&lt;p&gt;I reverted back to my original state&amp;#8230; which was removing all of the drivers and resetting grub to its original state and went on to solution number three&amp;#8230;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Working Solution Number Three&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At this point I just wanted SOMETHING to work. I didn&amp;#8217;t even care about my nvidia card any more. And that was when I came across a post about dual cards. Something I didn&amp;#8217;t care about because IT WAS WORKING before the UPDATE! But I want on any ways and that was the right solution in the end.&lt;/p&gt;

&lt;p&gt;You can find this solution &lt;a href=&#34;http://askubuntu.com/questions/120261/ubuntu-11-10-problem-with-nvidia/120600#comment143754_120600&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. The first answer.&lt;/p&gt;

&lt;p&gt;For my sanities sake I will write it down here too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Remove nvidia drivers&amp;#8230; Again. &lt;img src=&#34;http://ramblingsofaswtester.com/wp-includes/images/smilies/simple-smile.png&#34; alt=&#34;:)&#34; class=&#34;wp-smiley&#34; style=&#34;height: 1em; max-height: 1em;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Second&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Reinstall Mesa package for GL:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;line_numbers&#34;&gt;
        &lt;pre&gt;1
&lt;/pre&gt;
      &lt;/td&gt;
      
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;    &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;--reinstall&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;install&lt;/span&gt; libgl1-mesa-glx&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;This will get your first card to work with ubuntu.&lt;/p&gt;

&lt;p&gt;At this point I reinstalled my nvidia drivers too&amp;#8230; Something the other guy didn&amp;#8217;t mention.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Third&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Reboot&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fourth&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Install a program called bumblebee. Yes, &lt;a href=&#34;http://bumblebee-project.org/install.html&#34; target=&#34;_blank&#34;&gt;Bumblebee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is equal to Windows optimus. It will handle your dual video cards. You&amp;#8217;ll see in a moment how.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;line_numbers&#34;&gt;
        &lt;pre&gt;1
2
3
&lt;/pre&gt;
      &lt;/td&gt;
      
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;    &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; add-apt-repository ppa:bumblebee&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&lt;/span&gt;stable
    &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get update&lt;/span&gt;
    &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;apt-get install&lt;/span&gt; bumblebee bumblebee-nvidia&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Fifth&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Add yourself to use Bumblebee:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;line_numbers&#34;&gt;
        &lt;pre&gt;1
&lt;/pre&gt;
      &lt;/td&gt;
      
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;    &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; usermod &lt;span style=&#34;color: #660033;&#34;&gt;-a&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-G&lt;/span&gt; bumblebee &lt;span style=&#34;color: #007800;&#34;&gt;$USER&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;And then comes the magic. So in order for you to be able to use your second card with bumblebee you have to execute the program with optirun. This is much like windows optimus, just optimus works in the background.&lt;/p&gt;

&lt;p&gt;After this I could finally see my cards settings for example by typing in:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;line_numbers&#34;&gt;
        &lt;pre&gt;1
&lt;/pre&gt;
      &lt;/td&gt;
      
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;    &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sudo&lt;/span&gt; optirun nvidia-settings &lt;span style=&#34;color: #660033;&#34;&gt;-c&lt;/span&gt; :&lt;span style=&#34;color: #000000;&#34;&gt;8&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;This executed the settings app and I was able to edit some settings I required while ubuntu was running fine with my other video card as primary card. &lt;img src=&#34;http://ramblingsofaswtester.com/wp-includes/images/smilies/simple-smile.png&#34; alt=&#34;:)&#34; class=&#34;wp-smiley&#34; style=&#34;height: 1em; max-height: 1em;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now that was quite the fun, like I said, not?&lt;/p&gt;

&lt;p&gt;I hope this guide showed you my errors and problems and maybe it could help you get along with yours.&lt;/p&gt;

&lt;p&gt;If you have any questions, please feel free to write.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;[1]: &lt;a href=&#34;http://ielmira.com/uploads/gallery/album_114/gallery_635_114_12692.png&#34;&gt;http://ielmira.com/uploads/gallery/album_114/gallery_635_114_12692.png&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>