<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Kubernetes on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/categories/kubernetes/</link>
    <description>Recent content in Kubernetes on Ramblings of a cloud engineer</description>
    <generator>Hugo -- 0.136.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 21 Aug 2024 01:01:00 +0100</lastBuildDate>
    <atom:link href="https://skarlso.github.io/categories/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Update your CRDs with confidence</title>
      <link>https://skarlso.github.io/2024/08/21/update-your-crds-with-confidence/</link>
      <pubDate>Wed, 21 Aug 2024 01:01:00 +0100</pubDate>
      <guid>https://skarlso.github.io/2024/08/21/update-your-crds-with-confidence/</guid>
      <description>&lt;h1 id=&#34;update-your-crds-with-confidence&#34;&gt;Update your CRDs with confidence&lt;/h1&gt;
&lt;p&gt;Hello.&lt;/p&gt;
&lt;p&gt;I would like to write about a release for crd-to-sample-yaml&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. It&amp;rsquo;s the release version v0.8.0&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;This version brings with it a feature to test the validity of your CRD changes.&lt;/p&gt;
&lt;p&gt;It means that if you change your CRD it will test if the changes do not break working samples of that version.&lt;/p&gt;
&lt;p&gt;This is achieved by a helm unittest type of YAML based test scenarios and snapshot generation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Self-Signed locally trusted certificates with cert-manager</title>
      <link>https://skarlso.github.io/2023/10/25/self-signed-locally-trusted-certificates-with-cert-manager/</link>
      <pubDate>Wed, 25 Oct 2023 01:01:00 +0100</pubDate>
      <guid>https://skarlso.github.io/2023/10/25/self-signed-locally-trusted-certificates-with-cert-manager/</guid>
      <description>&lt;h1 id=&#34;self-signed-locally-trusted-certificates-with-cert-manager&#34;&gt;Self-Signed locally trusted certificates with cert-manager&lt;/h1&gt;
&lt;p&gt;We are going to discuss how to set up a Kubernetes environment where components can run using HTTPS without pain.&lt;/p&gt;
&lt;h2 id=&#34;premise&#34;&gt;Premise&lt;/h2&gt;
&lt;p&gt;Usually, people either generate certificates outside the cluster using either openssl, or mkcert, then mount them in or
use those as seeds for further generation. This poses a number of problems during testing and distribution of these
certificates. And then, switching to production, it proves that local certs will either no longer work or pose even
more problems in getting them properly distributed again.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comments are back</title>
      <link>https://skarlso.github.io/2023/05/11/comments-are-back/</link>
      <pubDate>Thu, 11 May 2023 02:01:00 +0100</pubDate>
      <guid>https://skarlso.github.io/2023/05/11/comments-are-back/</guid>
      <description>&lt;p&gt;Well, the previous post was a lie ( or rather a copy and paste error ).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Test comments</title>
      <link>https://skarlso.github.io/2023/05/11/test-comments/</link>
      <pubDate>Thu, 11 May 2023 01:01:00 +0100</pubDate>
      <guid>https://skarlso.github.io/2023/05/11/test-comments/</guid>
      <description>&lt;p&gt;Hello dear reader.&lt;/p&gt;
&lt;p&gt;I switched to a new theme that has Dark Mode. I&amp;rsquo;m hoping nothing changed regarding the RSS functionality.&lt;/p&gt;
&lt;p&gt;I removed the comments because I rarely used them.&lt;/p&gt;
&lt;p&gt;Also disabled any sort of tracking.&lt;/p&gt;
&lt;p&gt;Enjoy,
Gergely.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dark mode and a new theme</title>
      <link>https://skarlso.github.io/2023/05/10/dark-mode/</link>
      <pubDate>Wed, 10 May 2023 01:01:00 +0100</pubDate>
      <guid>https://skarlso.github.io/2023/05/10/dark-mode/</guid>
      <description>&lt;p&gt;Hello dear reader.&lt;/p&gt;
&lt;p&gt;I switched to a new theme that has Dark Mode. I&amp;rsquo;m hoping nothing changed regarding the RSS functionality.&lt;/p&gt;
&lt;p&gt;I removed the comments because I rarely used them.&lt;/p&gt;
&lt;p&gt;Also disabled any sort of tracking.&lt;/p&gt;
&lt;p&gt;Enjoy,
Gergely.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Painless controller testing with e2e-framework and tilt</title>
      <link>https://skarlso.github.io/2023/03/12/painless-controller-testing-with-e2e-framework-tilt/</link>
      <pubDate>Sun, 12 Mar 2023 01:01:00 +0100</pubDate>
      <guid>https://skarlso.github.io/2023/03/12/painless-controller-testing-with-e2e-framework-tilt/</guid>
      <description>&lt;p&gt;Welcome dear reader.&lt;/p&gt;
&lt;p&gt;When &lt;a href=&#34;https://skarlso.github.io/2023/02/25/rapid-controller-development-with-tilt/&#34;&gt;last&lt;/a&gt; we met, we talked a lot about setting up Tilt
for rapid controller development.&lt;/p&gt;
&lt;p&gt;Now, let&amp;rsquo;s see how powerful Tilt can be once we bring it together with Kubernetes&amp;rsquo; &lt;a href=&#34;https://github.com/kubernetes-sigs/e2e-framework&#34;&gt;e2e-framework&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;controller-e2e-framework&#34;&gt;Controller E2E Framework&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;d like to present my &lt;a href=&#34;https://github.com/controller-e2e-framework&#34;&gt;controller-e2e-framework&lt;/a&gt; which brings Tilt and e2e-framework together to easily write and run
tests for controllers that work together.&lt;/p&gt;
&lt;p&gt;This framework can be used to integration test or e2e test controllers that work together. They set up some kind of
ref connection between certain objects and perform some operation on said object.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rapid Kubernetes Controller Development with Tilt</title>
      <link>https://skarlso.github.io/2023/02/25/rapid-controller-development-with-tilt/</link>
      <pubDate>Sat, 25 Feb 2023 01:01:00 +0100</pubDate>
      <guid>https://skarlso.github.io/2023/02/25/rapid-controller-development-with-tilt/</guid>
      <description>&lt;p&gt;Welcome dear reader.&lt;/p&gt;
&lt;p&gt;Today, we are going to dive into how to use &lt;a href=&#34;https://tilt.dev&#34;&gt;Tilt&lt;/a&gt; to speed up the feedback loop of developing a
Kubernetes controller. We are going to do that using an open-source project called &lt;a href=&#34;https://ocm.software&#34;&gt;OCM&lt;/a&gt; which has
a controller called &lt;a href=&#34;github.com/open-component-model/ocm-controller&#34;&gt;ocm-controller&lt;/a&gt;. I&amp;rsquo;m going to walk through the
following process:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;researching tilt&lt;/li&gt;
&lt;li&gt;what it could do for me&lt;/li&gt;
&lt;li&gt;understanding the Tilt file&lt;/li&gt;
&lt;li&gt;trivial mapping of the developer process&lt;/li&gt;
&lt;li&gt;understanding Starlark&lt;/li&gt;
&lt;li&gt;adding more features&lt;/li&gt;
&lt;li&gt;tackling hot swapping&lt;/li&gt;
&lt;li&gt;troubleshooting&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&amp;rsquo;s dive in.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to deploy a Go (Golang) backend with a React frontend separately on Kubernetes - Part One</title>
      <link>https://skarlso.github.io/2020/07/23/kubernetes-deploy-golang-react-apps-separately-part1/</link>
      <pubDate>Thu, 23 Jul 2020 21:01:00 +0100</pubDate>
      <guid>https://skarlso.github.io/2020/07/23/kubernetes-deploy-golang-react-apps-separately-part1/</guid>
      <description>&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;
&lt;p&gt;Welcome. This is a longer post about how to deploy a Go backend with a React frontend
on Kubernetes as separate entities. Instead of the usual compiled together single binary Go
application, we are going to separate the two. Why? Because usually a React frontend is just a &amp;ldquo;static&amp;rdquo;
SPA app with very little requirements in terms of resources, while the Go backend does most of the
leg work, requiring a lot more resources.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using a Kubernetes based Cluster for Various Services with auto HTTPS - Part 2</title>
      <link>https://skarlso.github.io/2019/10/15/kubernetes-cluster-part2/</link>
      <pubDate>Tue, 15 Oct 2019 21:01:00 +0100</pubDate>
      <guid>https://skarlso.github.io/2019/10/15/kubernetes-cluster-part2/</guid>
      <description>&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;
&lt;p&gt;Hi folks.&lt;/p&gt;
&lt;p&gt;This is a continuation of the previous post about my Kubernetes infrastructure located &lt;a href=&#34;https://skarlso.github.io/2019/09/21/kubernetes-cluster/&#34;&gt;here&lt;/a&gt;. The two remaining points are to deploy Athens Go proxy and setting up monitoring.&lt;/p&gt;
&lt;h1 id=&#34;athens&#34;&gt;Athens&lt;/h1&gt;
&lt;p&gt;&lt;img alt=&#34;Athens&#34; loading=&#34;lazy&#34; src=&#34;https://skarlso.github.io/img/hosting/athens.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s start with &lt;a href=&#34;https://github.com/gomods/athens&#34;&gt;Athens&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First of all if you are a helm user, Athens has an awesome set of helm charts which you can use to deploy it in your cluster.
Located &lt;a href=&#34;https://github.com/gomods/athens/tree/master/charts/athens-proxy&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I prefer to deploy my own config files, but that&amp;rsquo;s me. So here is my preferred way of deploying Athens.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How I killed my entire Kubernetes cluster</title>
      <link>https://skarlso.github.io/2019/10/01/killing-kubernetes-cluster/</link>
      <pubDate>Tue, 01 Oct 2019 21:01:00 +0100</pubDate>
      <guid>https://skarlso.github.io/2019/10/01/killing-kubernetes-cluster/</guid>
      <description>&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;
&lt;p&gt;One morning I woke up and tried to access my gitea just to find that it wasn&amp;rsquo;t running.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;dead kube&#34; loading=&#34;lazy&#34; src=&#34;https://skarlso.github.io/img/kube_dead.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;I checked my cluster and found that the whole thing was dead as meat. I quickly jumped in and ran &lt;code&gt;k get pods -A&lt;/code&gt; to see what&amp;rsquo;s
going on. None of my services worked.&lt;/p&gt;
&lt;p&gt;What immediately struck my eye was a 100+ pods of my fork_updater cronjob. The fork_updater cronjob which runs once a month, looks
like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using a Kubernetes based Cluster for Various Services with auto HTTPS</title>
      <link>https://skarlso.github.io/2019/09/21/kubernetes-cluster/</link>
      <pubDate>Sat, 21 Sep 2019 21:01:00 +0100</pubDate>
      <guid>https://skarlso.github.io/2019/09/21/kubernetes-cluster/</guid>
      <description>&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;
&lt;p&gt;Hi folks.&lt;/p&gt;
&lt;p&gt;Today, I would like to show you how my infrastructure is deployed and managed. Spoiler alert, I&amp;rsquo;m using Kubernetes to do that.&lt;/p&gt;
&lt;p&gt;I know&amp;hellip; What a twist!&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s get to it.&lt;/p&gt;
&lt;h1 id=&#34;what&#34;&gt;What&lt;/h1&gt;
&lt;p&gt;&lt;img alt=&#34;kube-architecture&#34; loading=&#34;lazy&#34; src=&#34;https://skarlso.github.io/img/hosting/kube-architecture.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;What services am I running exactly? Here is a list I&amp;rsquo;m running at the time of this writing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Athens Go Proxy&lt;/li&gt;
&lt;li&gt;Gitea&lt;/li&gt;
&lt;li&gt;The Lounge (IRC bouncer)&lt;/li&gt;
&lt;li&gt;Two CronJobs
&lt;ul&gt;
&lt;li&gt;Fork Updater&lt;/li&gt;
&lt;li&gt;IDLE RPG online checker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;My WebSite (gergelybrautigam.com)&lt;/li&gt;
&lt;li&gt;Monitoring&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And it&amp;rsquo;s really simple to add more.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Updated Face-recog architecture drawing</title>
      <link>https://skarlso.github.io/2019/09/19/updated-face-recog-drawing/</link>
      <pubDate>Thu, 19 Sep 2019 13:01:00 +0100</pubDate>
      <guid>https://skarlso.github.io/2019/09/19/updated-face-recog-drawing/</guid>
      <description>&lt;p&gt;I had a lot of fun using &lt;a href=&#34;https://procreate.art&#34;&gt;Procreate&lt;/a&gt; to re-draw the architecture image I&amp;rsquo;ve drawn for my distribute face recognition application detailed in this post &lt;a href=&#34;https://skarlso.github.io/2018/03/15/kubernetes-distributed-application/&#34;&gt;Distributed Face-Recognition App&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Without much fanfare, here is the drawing:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;kube_architecture.png&#34; loading=&#34;lazy&#34; src=&#34;https://skarlso.github.io/img/kube/kube_architecture.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Thanks,
Gergely.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes distributed application deployment with sample Face Recognition App</title>
      <link>https://skarlso.github.io/2018/03/15/kubernetes-distributed-application/</link>
      <pubDate>Thu, 15 Mar 2018 23:01:00 +0100</pubDate>
      <guid>https://skarlso.github.io/2018/03/15/kubernetes-distributed-application/</guid>
      <description>&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;
&lt;p&gt;Alright folks. Settle in and get comfortable. This is going to be a long, but hopefully, fun ride.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m going to deploy a distributed application with &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;. I attempted to create an application that I thought resembled a real world app. Obviously I had to cut some corners due to time and energy constraints.&lt;/p&gt;
&lt;p&gt;My focus will be on Kubernetes and deployment.&lt;/p&gt;
&lt;p&gt;Shall we delve right in?&lt;/p&gt;
&lt;h1 id=&#34;the-application&#34;&gt;The Application&lt;/h1&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;kube overview&#34; loading=&#34;lazy&#34; src=&#34;https://skarlso.github.io/img/kube_overview.png&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
