<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>problem solving on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/categories/problem-solving/</link>
    <description>Recent content in problem solving on Ramblings of a cloud engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 26 Oct 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://skarlso.github.io/categories/problem-solving/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kill a Program on Connecting to a specific WiFi â€“ OSX</title>
      <link>https://skarlso.github.io/2015/10/26/kill-a-program-on-connecting-to-a-specific-wifi-osx/</link>
      <pubDate>Mon, 26 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/26/kill-a-program-on-connecting-to-a-specific-wifi-osx/</guid>
      <description>Hi folks.
If you have the tendency, like me, to forget that you are on the corporate VPN, or leave a certain software open when you bring your laptop to work, this might be helpful to you too.
It&amp;rsquo;s a small script which kills a program when you change your Wifi network.
Script:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63  #!</description>
      <content type="html"><![CDATA[<p>Hi folks.</p>
<p>If you have the tendency, like me, to forget that you are on the corporate VPN, or leave a certain software open when you bring your laptop to work, this might be helpful to you too.</p>
<p>It&rsquo;s a small script which kills a program when you change your Wifi network.</p>
<p>Script:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">
<span class="c1">#!/bin/bash</span>

<span class="k">function</span> log <span class="o">{</span>
    <span class="nv">directory</span><span class="o">=</span><span class="s2">&#34;/Users/&lt;username&gt;/wifi_detect&#34;</span>
    <span class="nv">log_dir_exists</span><span class="o">=</span><span class="nb">true</span>
    <span class="k">if</span> <span class="o">[</span> ! -d <span class="nv">$directory</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
        <span class="nb">echo</span> <span class="s2">&#34;Attempting to create =&gt; </span><span class="nv">$directory</span><span class="s2">&#34;</span>
        mkdir -p <span class="nv">$directory</span>
        <span class="k">if</span> <span class="o">[</span> ! -d <span class="nv">$directory</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
            <span class="nb">echo</span> <span class="s2">&#34;Could not create directory. Continue to log to echo.&#34;</span>
            <span class="nv">log_dir_exists</span><span class="o">=</span><span class="nb">false</span>
        <span class="k">fi</span>
    <span class="k">fi</span>
    <span class="k">if</span> <span class="nv">$log_dir_exists</span> <span class="p">;</span> <span class="k">then</span>
        <span class="nb">echo</span> <span class="s2">&#34;</span><span class="k">$(</span>date<span class="k">)</span><span class="s2">:</span><span class="nv">$1</span><span class="s2">&#34;</span> &gt;&gt; <span class="s2">&#34;</span><span class="nv">$directory</span><span class="s2">/log.txt&#34;</span>
    <span class="k">else</span>
        <span class="nb">echo</span> <span class="s2">&#34;</span><span class="k">$(</span>date<span class="k">)</span><span class="s2">:</span><span class="nv">$1</span><span class="s2">&#34;</span>
    <span class="k">fi</span>
<span class="o">}</span>

<span class="k">function</span> check_program <span class="o">{</span>
    <span class="nv">to_kill</span><span class="o">=</span><span class="s2">&#34;[</span><span class="si">${</span><span class="nv">1</span><span class="p">::</span><span class="nv">1</span><span class="si">}</span><span class="s2">]</span><span class="si">${</span><span class="nv">1</span><span class="p">:</span><span class="nv">1</span><span class="si">}</span><span class="s2">&#34;</span>
    log <span class="s2">&#34;Checking if </span><span class="nv">$to_kill</span><span class="s2"> really quit.&#34;</span>
    <span class="nv">ps</span><span class="o">=</span><span class="k">$(</span>ps aux <span class="p">|</span>grep <span class="s2">&#34;</span><span class="nv">$to_kill</span><span class="s2">&#34;</span><span class="k">)</span>
    log <span class="s2">&#34;ps =&gt; </span><span class="nv">$ps</span><span class="s2">&#34;</span>
    <span class="k">if</span> <span class="o">[</span> -z <span class="s2">&#34;</span><span class="nv">$ps</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
	<span class="c1"># 0 - True</span>
        <span class="k">return</span>
    <span class="k">else</span>
	<span class="c1"># 1 - False</span>
        <span class="k">return</span> <span class="m">1</span>
    <span class="k">fi</span>
<span class="o">}</span>

<span class="k">function</span> kill_program <span class="o">{</span>
    log <span class="s2">&#34;Killing program&#34;</span>
    <span class="sb">`</span>pkill -f <span class="s2">&#34;</span><span class="nv">$1</span><span class="s2">&#34;</span><span class="sb">`</span>
    sleep <span class="m">1</span>
    <span class="k">if</span> ! check_program <span class="nv">$1</span> <span class="p">;</span> <span class="k">then</span>
	log <span class="s2">&#34;</span><span class="nv">$1</span><span class="s2"> Did not quit!&#34;</span>
    <span class="k">else</span>
	log <span class="s2">&#34;</span><span class="nv">$1</span><span class="s2"> quit successfully&#34;</span>
    <span class="k">fi</span>
<span class="o">}</span>

<span class="nv">wifi_name</span><span class="o">=</span><span class="k">$(</span>networksetup -getairportnetwork en0 <span class="p">|</span>awk -F<span class="s2">&#34;: &#34;</span> <span class="s1">&#39;{print $2}&#39;</span><span class="k">)</span>
log <span class="s2">&#34;Wifi name: </span><span class="nv">$wifi_name</span><span class="s2">&#34;</span>
<span class="k">if</span> <span class="o">[</span> <span class="s2">&#34;</span><span class="nv">$wifi_name</span><span class="s2">&#34;</span> <span class="o">=</span> <span class="s2">&#34;&lt;wifi_name&gt;&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
    log <span class="s2">&#34;On corporate network... Killing Program&#34;</span>
    kill_program <span class="s2">&#34;&lt;programname&gt;&#34;</span>
<span class="k">elif</span> <span class="o">[</span> <span class="s2">&#34;</span><span class="nv">$wifi_name</span><span class="s2">&#34;</span> <span class="o">=</span> <span class="s2">&#34;&lt;home_wifi_name&gt;&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
    <span class="c1"># Kill &lt;program&gt; if enabled and if on &lt;home_wifi&gt; and if Tunnelblick is running.</span>
    log <span class="s2">&#34;Not on corporate network... Killing &lt;program&gt; if Tunnelblick is active.&#34;</span>
    <span class="k">if</span> ! check_program <span class="s2">&#34;Tunnelblick&#34;</span> <span class="p">;</span> <span class="k">then</span>
	log <span class="s2">&#34;Tunnelblick is active. Killing &lt;program&gt;&#34;</span>
	kill_program <span class="s2">&#34;&lt;program&gt;&#34;</span>
    <span class="k">else</span>
	log <span class="s2">&#34;All good... Happy coding.&#34;</span>
    <span class="k">fi</span>
<span class="k">else</span>
    log <span class="s2">&#34;No known Network...&#34;</span>
<span class="k">fi</span>
</code></pre></td></tr></table>
</div>
</div><p>Now, the trick is, on OSX to only trigger this when your network changes. For this, you can have a &lsquo;launchd&rsquo; daemon, which is configured to watch three files which relate to a network being changed.</p>
<p>The script sits under your ~/Library/LaunchAgents folder. Create something like, com.username.checknetwork.plist.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml">
<span class="cp">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;</span>
<span class="cp">&lt;!DOCTYPE plist PUBLIC &#34;-//Apple Computer//DTD PLIST 1.0//EN&#34; \
</span><span class="cp"> &#34;http://www.apple.com/DTDs/PropertyList-1.0.dtd&#34;&gt;</span>
<span class="nt">&lt;plist</span> <span class="na">version=</span><span class="s">&#34;1.0&#34;</span><span class="nt">&gt;</span>
<span class="nt">&lt;dict&gt;</span>
  <span class="nt">&lt;key&gt;</span>Label<span class="nt">&lt;/key&gt;</span>
  <span class="nt">&lt;string&gt;</span>ifup.ddns<span class="nt">&lt;/string&gt;</span>

  <span class="nt">&lt;key&gt;</span>LowPriorityIO<span class="nt">&lt;/key&gt;</span>
  <span class="nt">&lt;true/&gt;</span>

  <span class="nt">&lt;key&gt;</span>ProgramArguments<span class="nt">&lt;/key&gt;</span>
  <span class="nt">&lt;array&gt;</span>
    <span class="nt">&lt;string&gt;</span>/Users/username/scripts/ddns-update.sh<span class="nt">&lt;/string&gt;</span>
  <span class="nt">&lt;/array&gt;</span>

  <span class="nt">&lt;key&gt;</span>WatchPaths<span class="nt">&lt;/key&gt;</span>
  <span class="nt">&lt;array&gt;</span>
    <span class="nt">&lt;string&gt;</span>/etc/resolv.conf<span class="nt">&lt;/string&gt;</span>
    <span class="nt">&lt;string&gt;</span>/Library/Preferences/SystemConfiguration/NetworkInterfaces.plist<span class="nt">&lt;/string&gt;</span>
    <span class="nt">&lt;string&gt;</span>/Library/Preferences/SystemConfiguration/com.apple.airport.preferences.plist<span class="nt">&lt;/string&gt;</span>
  <span class="nt">&lt;/array&gt;</span>

  <span class="nt">&lt;key&gt;</span>RunAtLoad<span class="nt">&lt;/key&gt;</span>
  <span class="nt">&lt;true/&gt;</span>
<span class="nt">&lt;/dict&gt;</span>
<span class="nt">&lt;/plist&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>Now, when you change your network, to whatever your corporate network is, you&rsquo;ll kill Sublime.</p>
<p>Hope this helps somebody.</p>
<p>Cheers,</p>
<p>Gergely.</p>
]]></content>
    </item>
    
    <item>
      <title>Circular buffer in Go</title>
      <link>https://skarlso.github.io/2015/10/15/circular-buffer-in-go/</link>
      <pubDate>Thu, 15 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/15/circular-buffer-in-go/</guid>
      <description>I&amp;rsquo;m proud of this one too. No peaking. I like how go let&amp;rsquo;s you do this kind of stuff in a very nice way.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56  package circular import &amp;#34;fmt&amp;#34; //TestVersion testVersion const TestVersion = 1 //Buffer buffer type type Buffer struct { buffer []byte full int size int s, e int } //NewBuffer creates a new Buffer func NewBuffer(size int) *Buffer { return &amp;amp;Buffer{buffer: make([]byte, size), s: 0, e: 0, size: size, full: 0} } //ReadByte reads a byte from b Buffer func (b *Buffer) ReadByte() (byte, error) { if b.</description>
      <content type="html"><![CDATA[<p>I&rsquo;m proud of this one too. No peaking. I like how go let&rsquo;s you do this kind of stuff in a very nice way.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-go" data-lang="go"><span class="kn">package</span> <span class="nx">circular</span>

<span class="kn">import</span> <span class="s">&#34;fmt&#34;</span>

<span class="c1">//TestVersion testVersion
</span><span class="c1"></span><span class="kd">const</span> <span class="nx">TestVersion</span> <span class="p">=</span> <span class="mi">1</span>

<span class="c1">//Buffer buffer type
</span><span class="c1"></span><span class="kd">type</span> <span class="nx">Buffer</span> <span class="kd">struct</span> <span class="p">{</span>
	<span class="nx">buffer</span> <span class="p">[]</span><span class="kt">byte</span>
	<span class="nx">full</span>   <span class="kt">int</span>
	<span class="nx">size</span>   <span class="kt">int</span>
	<span class="nx">s</span><span class="p">,</span> <span class="nx">e</span>   <span class="kt">int</span>
<span class="p">}</span>

<span class="c1">//NewBuffer creates a new Buffer
</span><span class="c1"></span><span class="kd">func</span> <span class="nf">NewBuffer</span><span class="p">(</span><span class="nx">size</span> <span class="kt">int</span><span class="p">)</span> <span class="o">*</span><span class="nx">Buffer</span> <span class="p">{</span>
	<span class="k">return</span> <span class="o">&amp;</span><span class="nx">Buffer</span><span class="p">{</span><span class="nx">buffer</span><span class="p">:</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">byte</span><span class="p">,</span> <span class="nx">size</span><span class="p">),</span> <span class="nx">s</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">e</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">size</span><span class="p">:</span> <span class="nx">size</span><span class="p">,</span> <span class="nx">full</span><span class="p">:</span> <span class="mi">0</span><span class="p">}</span>
<span class="p">}</span>

<span class="c1">//ReadByte reads a byte from b Buffer
</span><span class="c1"></span><span class="kd">func</span> <span class="p">(</span><span class="nx">b</span> <span class="o">*</span><span class="nx">Buffer</span><span class="p">)</span> <span class="nf">ReadByte</span><span class="p">()</span> <span class="p">(</span><span class="kt">byte</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
	<span class="k">if</span> <span class="nx">b</span><span class="p">.</span><span class="nx">full</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
		<span class="k">return</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">fmt</span><span class="p">.</span><span class="nf">Errorf</span><span class="p">(</span><span class="s">&#34;Danger Will Robinson: %s&#34;</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span>
	<span class="p">}</span>
	<span class="nx">readByte</span> <span class="o">:=</span> <span class="nx">b</span><span class="p">.</span><span class="nx">buffer</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">s</span><span class="p">]</span>
	<span class="nx">b</span><span class="p">.</span><span class="nx">s</span> <span class="p">=</span> <span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">s</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="nx">b</span><span class="p">.</span><span class="nx">size</span>
	<span class="nx">b</span><span class="p">.</span><span class="nx">full</span><span class="o">--</span>
	<span class="k">return</span> <span class="nx">readByte</span><span class="p">,</span> <span class="kc">nil</span>
<span class="p">}</span>

<span class="c1">//WriteByte writes c byte to the buffer
</span><span class="c1"></span><span class="kd">func</span> <span class="p">(</span><span class="nx">b</span> <span class="o">*</span><span class="nx">Buffer</span><span class="p">)</span> <span class="nf">WriteByte</span><span class="p">(</span><span class="nx">c</span> <span class="kt">byte</span><span class="p">)</span> <span class="kt">error</span> <span class="p">{</span>
	<span class="k">if</span> <span class="nx">b</span><span class="p">.</span><span class="nx">full</span><span class="o">+</span><span class="mi">1</span> <span class="p">&gt;</span> <span class="nx">b</span><span class="p">.</span><span class="nx">size</span> <span class="p">{</span>
		<span class="k">return</span> <span class="nx">fmt</span><span class="p">.</span><span class="nf">Errorf</span><span class="p">(</span><span class="s">&#34;Danger Will Robinson: %s&#34;</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span>
	<span class="p">}</span>
	<span class="nx">b</span><span class="p">.</span><span class="nx">buffer</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">e</span><span class="p">]</span> <span class="p">=</span> <span class="nx">c</span>
	<span class="nx">b</span><span class="p">.</span><span class="nx">e</span> <span class="p">=</span> <span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">e</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="nx">b</span><span class="p">.</span><span class="nx">size</span>
	<span class="nx">b</span><span class="p">.</span><span class="nx">full</span><span class="o">++</span>
	<span class="k">return</span> <span class="kc">nil</span>
<span class="p">}</span>

<span class="c1">//Overwrite overwrites the oldest byte in Buffer
</span><span class="c1"></span><span class="kd">func</span> <span class="p">(</span><span class="nx">b</span> <span class="o">*</span><span class="nx">Buffer</span><span class="p">)</span> <span class="nf">Overwrite</span><span class="p">(</span><span class="nx">c</span> <span class="kt">byte</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">b</span><span class="p">.</span><span class="nx">buffer</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">s</span><span class="p">]</span> <span class="p">=</span> <span class="nx">c</span>
	<span class="nx">b</span><span class="p">.</span><span class="nx">s</span> <span class="p">=</span> <span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">s</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="nx">b</span><span class="p">.</span><span class="nx">size</span>
<span class="p">}</span>

<span class="c1">//Reset resets the buffer
</span><span class="c1"></span><span class="kd">func</span> <span class="p">(</span><span class="nx">b</span> <span class="o">*</span><span class="nx">Buffer</span><span class="p">)</span> <span class="nf">Reset</span><span class="p">()</span> <span class="p">{</span>
	<span class="o">*</span><span class="nx">b</span> <span class="p">=</span> <span class="o">*</span><span class="nf">NewBuffer</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">size</span><span class="p">)</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="p">(</span><span class="nx">b</span> <span class="o">*</span><span class="nx">Buffer</span><span class="p">)</span> <span class="nf">String</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span>
	<span class="k">return</span> <span class="nx">fmt</span><span class="p">.</span><span class="nf">Sprintf</span><span class="p">(</span><span class="s">&#34;Buffer: %d, %d, %d, %d&#34;</span><span class="p">,</span> <span class="nx">b</span><span class="p">.</span><span class="nx">buffer</span><span class="p">,</span> <span class="nx">b</span><span class="p">.</span><span class="nx">s</span><span class="p">,</span> <span class="nx">b</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span> <span class="nx">b</span><span class="p">.</span><span class="nx">size</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></content>
    </item>
    
    <item>
      <title>DataMunger Kata with Go</title>
      <link>https://skarlso.github.io/2015/10/04/datamunger-kata-with-go/</link>
      <pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/04/datamunger-kata-with-go/</guid>
      <description>Quickly wrote up the Data Munger code kata in Go.
Next time, I want better abstractions. And a way to select columns based on their header data. For now, this is not bad.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75  package main import ( &amp;#34;bufio&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;log&amp;#34; &amp;#34;math&amp;#34; &amp;#34;os&amp;#34; &amp;#34;regexp&amp;#34; &amp;#34;strconv&amp;#34; &amp;#34;strings&amp;#34; ) //Data which is Data type Data struct { columnName string compareOne float64 compareTwo float64 } func main() { // datas := []Data{WeatherData{}, FootballData{}} 	fmt.</description>
      <content type="html"><![CDATA[<p>Quickly wrote up the Data Munger code kata in Go.</p>
<p>Next time, I want better abstractions. And a way to select columns based on their header data. For now, this is not bad.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-go" data-lang="go">
<span class="kn">package</span> <span class="nx">main</span>

<span class="kn">import</span> <span class="p">(</span>
	<span class="s">&#34;bufio&#34;</span>
	<span class="s">&#34;fmt&#34;</span>
	<span class="s">&#34;log&#34;</span>
	<span class="s">&#34;math&#34;</span>
	<span class="s">&#34;os&#34;</span>
	<span class="s">&#34;regexp&#34;</span>
	<span class="s">&#34;strconv&#34;</span>
	<span class="s">&#34;strings&#34;</span>
<span class="p">)</span>

<span class="c1">//Data which is Data
</span><span class="c1"></span><span class="kd">type</span> <span class="nx">Data</span> <span class="kd">struct</span> <span class="p">{</span>
	<span class="nx">columnName</span> <span class="kt">string</span>
	<span class="nx">compareOne</span> <span class="kt">float64</span>
	<span class="nx">compareTwo</span> <span class="kt">float64</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="c1">// datas := []Data{WeatherData{}, FootballData{}}
</span><span class="c1"></span>	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;Minimum weather data:&#34;</span><span class="p">,</span> <span class="nf">GetDataMinimumDiff</span><span class="p">(</span><span class="s">&#34;weather.dat&#34;</span><span class="p">,</span> <span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;Minimum football data:&#34;</span><span class="p">,</span> <span class="nf">GetDataMinimumDiff</span><span class="p">(</span><span class="s">&#34;football.dat&#34;</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">))</span>
<span class="p">}</span>

<span class="c1">//GetDataMinimumDiff gathers data from file to fill up Columns.
</span><span class="c1"></span><span class="kd">func</span> <span class="nf">GetDataMinimumDiff</span><span class="p">(</span><span class="nx">filename</span> <span class="kt">string</span><span class="p">,</span> <span class="nx">nameColumn</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">compareColOne</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">compareColTwo</span> <span class="kt">int</span><span class="p">)</span> <span class="nx">Data</span> <span class="p">{</span>
	<span class="nx">data</span> <span class="o">:=</span> <span class="nx">Data</span><span class="p">{}</span>
	<span class="nx">minimum</span> <span class="o">:=</span> <span class="nx">math</span><span class="p">.</span><span class="nx">MaxFloat64</span>
	<span class="nx">readLines</span> <span class="o">:=</span> <span class="nf">ReadFile</span><span class="p">(</span><span class="nx">filename</span><span class="p">)</span>
	<span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">value</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">readLines</span> <span class="p">{</span>
		<span class="nx">valueArrays</span> <span class="o">:=</span> <span class="nx">strings</span><span class="p">.</span><span class="nf">Split</span><span class="p">(</span><span class="nx">value</span><span class="p">,</span> <span class="s">&#34;,&#34;</span><span class="p">)</span>
		<span class="nx">name</span> <span class="o">:=</span> <span class="nx">valueArrays</span><span class="p">[</span><span class="nx">nameColumn</span><span class="p">]</span>
		<span class="nx">trimmedFirst</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">strconv</span><span class="p">.</span><span class="nf">ParseFloat</span><span class="p">(</span><span class="nx">valueArrays</span><span class="p">[</span><span class="nx">compareColOne</span><span class="p">],</span> <span class="mi">64</span><span class="p">)</span>
		<span class="nx">trimmedSecond</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">strconv</span><span class="p">.</span><span class="nf">ParseFloat</span><span class="p">(</span><span class="nx">valueArrays</span><span class="p">[</span><span class="nx">compareColTwo</span><span class="p">],</span> <span class="mi">64</span><span class="p">)</span>
		<span class="nx">diff</span> <span class="o">:=</span> <span class="nx">trimmedFirst</span> <span class="o">-</span> <span class="nx">trimmedSecond</span>
		<span class="nx">diff</span> <span class="p">=</span> <span class="nx">math</span><span class="p">.</span><span class="nf">Abs</span><span class="p">(</span><span class="nx">diff</span><span class="p">)</span>
		<span class="k">if</span> <span class="nx">diff</span> <span class="o">&lt;=</span> <span class="nx">minimum</span> <span class="p">{</span>
			<span class="nx">minimum</span> <span class="p">=</span> <span class="nx">diff</span>
			<span class="nx">data</span><span class="p">.</span><span class="nx">columnName</span> <span class="p">=</span> <span class="nx">name</span>
			<span class="nx">data</span><span class="p">.</span><span class="nx">compareOne</span> <span class="p">=</span> <span class="nx">trimmedFirst</span>
			<span class="nx">data</span><span class="p">.</span><span class="nx">compareTwo</span> <span class="p">=</span> <span class="nx">trimmedSecond</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="nx">data</span>
<span class="p">}</span>

<span class="c1">//ReadFile reads lines from a file and gives back a string array which contains the lines.
</span><span class="c1"></span><span class="kd">func</span> <span class="nf">ReadFile</span><span class="p">(</span><span class="nx">fileName</span> <span class="kt">string</span><span class="p">)</span> <span class="p">(</span><span class="nx">fileLines</span> <span class="p">[]</span><span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">file</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nf">Open</span><span class="p">(</span><span class="nx">fileName</span><span class="p">)</span>
	<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
		<span class="nx">log</span><span class="p">.</span><span class="nf">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
	<span class="p">}</span>
	<span class="k">defer</span> <span class="nx">file</span><span class="p">.</span><span class="nf">Close</span><span class="p">()</span>

	<span class="nx">scanner</span> <span class="o">:=</span> <span class="nx">bufio</span><span class="p">.</span><span class="nf">NewScanner</span><span class="p">(</span><span class="nx">file</span><span class="p">)</span>
	<span class="c1">//Skipping the first line which is the header.
</span><span class="c1"></span>	<span class="nx">scanner</span><span class="p">.</span><span class="nf">Scan</span><span class="p">()</span>
	<span class="k">for</span> <span class="nx">scanner</span><span class="p">.</span><span class="nf">Scan</span><span class="p">()</span> <span class="p">{</span>
		<span class="nx">line</span> <span class="o">:=</span> <span class="nx">scanner</span><span class="p">.</span><span class="nf">Text</span><span class="p">()</span>
		<span class="nx">re</span> <span class="o">:=</span> <span class="nx">regexp</span><span class="p">.</span><span class="nf">MustCompile</span><span class="p">(</span><span class="s">&#34;\\w+&#34;</span><span class="p">)</span>
		<span class="nx">lines</span> <span class="o">:=</span> <span class="nx">re</span><span class="p">.</span><span class="nf">FindAllString</span><span class="p">(</span><span class="nx">line</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
		<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="nx">lines</span><span class="p">)</span> <span class="p">&gt;</span>  <span class="p">{</span>
			<span class="nx">fileLines</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">fileLines</span><span class="p">,</span> <span class="nx">strings</span><span class="p">.</span><span class="nf">Join</span><span class="p">(</span><span class="nx">lines</span><span class="p">,</span> <span class="s">&#34;,&#34;</span><span class="p">))</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">scanner</span><span class="p">.</span><span class="nf">Err</span><span class="p">();</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
		<span class="nx">log</span><span class="p">.</span><span class="nf">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="k">return</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></content>
    </item>
    
    <item>
      <title>How to Aggregate Tests with Jenkins with Aggregate Plugin on non-relating jobs</title>
      <link>https://skarlso.github.io/2015/10/02/how-to-aggregate-tests-with-jenkins-with-aggregate-plugin-on-non-relating-jobs/</link>
      <pubDate>Fri, 02 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/02/how-to-aggregate-tests-with-jenkins-with-aggregate-plugin-on-non-relating-jobs/</guid>
      <description>Hello folks.
Today, I would like to talk about something I came in contact with, and was hard to find a proper answer / solution for it.
So I&amp;rsquo;m writing this down to document my findings. Like the title says, this is about aggregating test result with Jenkins, using the plug-in provided. If you, like me, have a pipeline structure which do not work on the same artifact, but do have a upstream-downstream relationship, you will have a hard time configuring and making Aggregation work.</description>
      <content type="html"><![CDATA[<p>Hello folks.</p>
<p>Today, I would like to talk about something I came in contact with, and was hard to find a proper answer / solution for it.</p>
<p>So I&rsquo;m writing this down to document my findings. Like the title says, this is about aggregating test result with Jenkins, using the plug-in provided. If you, like me, have a pipeline structure which do not work on the same artifact, but do have a upstream-downstream relationship, you will have a hard time configuring and making Aggregation work. So here is how, I fixed the issue.</p>
<h1 id="connection">Connection</h1>
<p>In order for the aggregation to work, there needs to be an <strong>artifact connection</strong> between the upstream and downstream projects. And that is the key. But if you don&rsquo;t have that, well, let&rsquo;s create one. I have a parent job configured like this one. =&gt;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml">
<span class="cp">&lt;?xml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;?&gt;</span>
<span class="nt">&lt;project&gt;</span>
  <span class="nt">&lt;actions/&gt;</span>
  <span class="nt">&lt;description&gt;&lt;/description&gt;</span>
  <span class="nt">&lt;keepDependencies&gt;</span>false<span class="nt">&lt;/keepDependencies&gt;</span>
  <span class="nt">&lt;properties/&gt;</span>
  <span class="nt">&lt;scm</span> <span class="na">class=</span><span class="s">&#34;hudson.scm.NullSCM&#34;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;canRoam&gt;</span>true<span class="nt">&lt;/canRoam&gt;</span>
  <span class="nt">&lt;disabled&gt;</span>false<span class="nt">&lt;/disabled&gt;</span>
  <span class="nt">&lt;blockBuildWhenDownstreamBuilding&gt;</span>false<span class="nt">&lt;/blockBuildWhenDownstreamBuilding&gt;</span>
  <span class="nt">&lt;blockBuildWhenUpstreamBuilding&gt;</span>false<span class="nt">&lt;/blockBuildWhenUpstreamBuilding&gt;</span>
  <span class="nt">&lt;triggers/&gt;</span>
  <span class="nt">&lt;concurrentBuild&gt;</span>false<span class="nt">&lt;/concurrentBuild&gt;</span>
  <span class="nt">&lt;builders/&gt;</span>
  <span class="nt">&lt;publishers&gt;</span>
    <span class="nt">&lt;hudson.tasks.test.AggregatedTestResultPublisher</span> <span class="na">plugin=</span><span class="s">&#34;junit@1.9&#34;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;includeFailedBuilds&gt;</span>false<span class="nt">&lt;/includeFailedBuilds&gt;</span>
    <span class="nt">&lt;/hudson.tasks.test.AggregatedTestResultPublisher&gt;</span>
    <span class="nt">&lt;hudson.tasks.BuildTrigger&gt;</span>
      <span class="nt">&lt;childProjects&gt;</span>ChildJob<span class="nt">&lt;/childProjects&gt;</span>
      <span class="nt">&lt;threshold&gt;</span>
        <span class="nt">&lt;name&gt;</span>SUCCESS<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;ordinal&gt;&lt;/ordinal&gt;</span>
        <span class="nt">&lt;color&gt;</span>BLUE<span class="nt">&lt;/color&gt;</span>
        <span class="nt">&lt;completeBuild&gt;</span>true<span class="nt">&lt;/completeBuild&gt;</span>
      <span class="nt">&lt;/threshold&gt;</span>
    <span class="nt">&lt;/hudson.tasks.BuildTrigger&gt;</span>
  <span class="nt">&lt;/publishers&gt;</span>
  <span class="nt">&lt;buildWrappers/&gt;</span>
<span class="nt">&lt;/project&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>As you can see, it&rsquo;s pretty basic. It isn&rsquo;t much. It&rsquo;s supposed to be a trigger job for downstream projects. You could have this one at anything. Maybe scheduled, or have some kind of gathering here of some results, and so on and so forth. The end part of the configuration is the interesting bit.</p>
<p>Aggregation is setup, but it won&rsquo;t work, because despite there being an upstream/downstream relationship, there also needs to be an artifact connection which uses <strong>fingerprinting</strong>. Fingerprinting for Jenkins is needed in oder to make the physical connection between the jobs via hashes. This is what you will get if that is not setup:</p>
<p>But if there is no artifact between them, what do you do? You create one.</p>
<h1 id="the-artifact-which-binds-us">The Artifact which Binds Us</h1>
<p>Adding a simple <strong>timestamp file</strong> is enough to make a connection. So let&rsquo;s do that. This is how it will look like =&gt;</p>
<p>The important bits about this picture are the small echo which simply creates a file which will contain some time stamp data, and after that the archive artifact, which also fingerprints that file, marking it with a hash which identifies this job as using that particular artifact.</p>
<p>Now, the next step is to create the connection. For that, you need the artifact copy plugin =&gt; <a href="https://wiki.jenkins-ci.org/display/JENKINS/Copy+Artifact+Plugin" target="_blank">Copy Artifact Plugin</a>.</p>
<p>With this, we create the childs configuration like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml">
<span class="cp">&lt;?xml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;?&gt;</span>
<span class="nt">&lt;project&gt;</span>
  <span class="nt">&lt;actions/&gt;</span>
  <span class="nt">&lt;description&gt;&lt;/description&gt;</span>
  <span class="nt">&lt;keepDependencies&gt;</span>false<span class="nt">&lt;/keepDependencies&gt;</span>
  <span class="nt">&lt;properties/&gt;</span>
  <span class="nt">&lt;scm</span> <span class="na">class=</span><span class="s">&#34;hudson.plugins.git.GitSCM&#34;</span> <span class="na">plugin=</span><span class="s">&#34;git@2.4.0&#34;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;configVersion&gt;</span>2<span class="nt">&lt;/configVersion&gt;</span>
    <span class="nt">&lt;userRemoteConfigs&gt;</span>
      <span class="nt">&lt;hudson.plugins.git.UserRemoteConfig&gt;</span>
        <span class="nt">&lt;url&gt;</span>https://github.com/Skarlso/DataMung.git<span class="nt">&lt;/url&gt;</span>
      <span class="nt">&lt;/hudson.plugins.git.UserRemoteConfig&gt;</span>
    <span class="nt">&lt;/userRemoteConfigs&gt;</span>
    <span class="nt">&lt;branches&gt;</span>
      <span class="nt">&lt;hudson.plugins.git.BranchSpec&gt;</span>
        <span class="nt">&lt;name&gt;</span>*/master<span class="nt">&lt;/name&gt;</span>
      <span class="nt">&lt;/hudson.plugins.git.BranchSpec&gt;</span>
    <span class="nt">&lt;/branches&gt;</span>
    <span class="nt">&lt;doGenerateSubmoduleConfigurations&gt;</span>false<span class="nt">&lt;/doGenerateSubmoduleConfigurations&gt;</span>
    <span class="nt">&lt;submoduleCfg</span> <span class="na">class=</span><span class="s">&#34;list&#34;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;extensions/&gt;</span>
  <span class="nt">&lt;/scm&gt;</span>
  <span class="nt">&lt;canRoam&gt;</span>true<span class="nt">&lt;/canRoam&gt;</span>
  <span class="nt">&lt;disabled&gt;</span>false<span class="nt">&lt;/disabled&gt;</span>
  <span class="nt">&lt;blockBuildWhenDownstreamBuilding&gt;</span>false<span class="nt">&lt;/blockBuildWhenDownstreamBuilding&gt;</span>
  <span class="nt">&lt;blockBuildWhenUpstreamBuilding&gt;</span>false<span class="nt">&lt;/blockBuildWhenUpstreamBuilding&gt;</span>
  <span class="nt">&lt;triggers/&gt;</span>
  <span class="nt">&lt;concurrentBuild&gt;</span>false<span class="nt">&lt;/concurrentBuild&gt;</span>
  <span class="nt">&lt;builders&gt;</span>
    <span class="nt">&lt;hudson.plugins.gradle.Gradle</span> <span class="na">plugin=</span><span class="s">&#34;gradle@1.24&#34;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;description&gt;&lt;/description&gt;</span>
      <span class="nt">&lt;switches&gt;&lt;/switches&gt;</span>
      <span class="nt">&lt;tasks&gt;</span>assemble check<span class="nt">&lt;/tasks&gt;</span>
      <span class="nt">&lt;rootBuildScriptDir&gt;&lt;/rootBuildScriptDir&gt;</span>
      <span class="nt">&lt;buildFile&gt;</span>build.gradle<span class="nt">&lt;/buildFile&gt;</span>
      <span class="nt">&lt;gradleName&gt;</span>(Default)<span class="nt">&lt;/gradleName&gt;</span>
      <span class="nt">&lt;useWrapper&gt;</span>true<span class="nt">&lt;/useWrapper&gt;</span>
      <span class="nt">&lt;makeExecutable&gt;</span>false<span class="nt">&lt;/makeExecutable&gt;</span>
      <span class="nt">&lt;fromRootBuildScriptDir&gt;</span>true<span class="nt">&lt;/fromRootBuildScriptDir&gt;</span>
      <span class="nt">&lt;useWorkspaceAsHome&gt;</span>false<span class="nt">&lt;/useWorkspaceAsHome&gt;</span>
    <span class="nt">&lt;/hudson.plugins.gradle.Gradle&gt;</span>
    <span class="nt">&lt;hudson.plugins.copyartifact.CopyArtifact</span> <span class="na">plugin=</span><span class="s">&#34;copyartifact@1.36&#34;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;project&gt;</span>ParentJob<span class="nt">&lt;/project&gt;</span>
      <span class="nt">&lt;filter&gt;</span>timestamp.data<span class="nt">&lt;/filter&gt;</span>
      <span class="nt">&lt;target&gt;&lt;/target&gt;</span>
      <span class="nt">&lt;excludes&gt;&lt;/excludes&gt;</span>
      <span class="nt">&lt;selector</span> <span class="na">class=</span><span class="s">&#34;hudson.plugins.copyartifact.TriggeredBuildSelector&#34;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;upstreamFilterStrategy&gt;</span>UseGlobalSetting<span class="nt">&lt;/upstreamFilterStrategy&gt;</span>
      <span class="nt">&lt;/selector&gt;</span>
      <span class="nt">&lt;doNotFingerprintArtifacts&gt;</span>false<span class="nt">&lt;/doNotFingerprintArtifacts&gt;</span>
    <span class="nt">&lt;/hudson.plugins.copyartifact.CopyArtifact&gt;</span>
  <span class="nt">&lt;/builders&gt;</span>
  <span class="nt">&lt;publishers&gt;</span>
    <span class="nt">&lt;hudson.tasks.junit.JUnitResultArchiver</span> <span class="na">plugin=</span><span class="s">&#34;junit@1.9&#34;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;testResults&gt;</span>build/test-results/*.xml<span class="nt">&lt;/testResults&gt;</span>
      <span class="nt">&lt;keepLongStdio&gt;</span>false<span class="nt">&lt;/keepLongStdio&gt;</span>
      <span class="nt">&lt;healthScaleFactor&gt;</span>1.0<span class="nt">&lt;/healthScaleFactor&gt;</span>
    <span class="nt">&lt;/hudson.tasks.junit.JUnitResultArchiver&gt;</span>
  <span class="nt">&lt;/publishers&gt;</span>
  <span class="nt">&lt;buildWrappers&gt;</span>
    <span class="nt">&lt;hudson.plugins.ws__cleanup.PreBuildCleanup</span> <span class="na">plugin=</span><span class="s">&#34;ws-cleanup@0.28&#34;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;deleteDirs&gt;</span>false<span class="nt">&lt;/deleteDirs&gt;</span>
      <span class="nt">&lt;cleanupParameter&gt;&lt;/cleanupParameter&gt;</span>
      <span class="nt">&lt;externalDelete&gt;&lt;/externalDelete&gt;</span>
    <span class="nt">&lt;/hudson.plugins.ws__cleanup.PreBuildCleanup&gt;</span>
  <span class="nt">&lt;/buildWrappers&gt;</span>
<span class="nt">&lt;/project&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>Again, the improtant bit is this:</p>
<p>After the copy is setup, we launch our parent job and if everything is correct, you should see something like this:</p>
<h1 id="wrapping-it-up">Wrapping it Up</h1>
<p>For final words, important bit to take away from this is that you need an <strong>artifact connection between the jobs</strong> to make this work. Whatever your downstream / upstream connection is, it doesn&rsquo;t matter. Also, there can be a problem that you have everything set up, and there are artifacts which bind the jobs together but you still can&rsquo;t see the results, then your best option is to specify the jobs BY NAME in the aggregate test plug-in like this:</p>
<p>I know this is a pain if there are multiple jobs, but at least, jenkins is providing you with Autoexpande once you start typing.</p>
<p>Of course this also works with multiple downstream jobs if they copy the artifact to themselves.</p>
<p>Any questions, please feel free to comment and I will answer to the best of my knowledge.</p>
<p>Cheers,
Gergely.</p>
]]></content>
    </item>
    
    <item>
      <title>Sieve of Eratosthenes in Go</title>
      <link>https://skarlso.github.io/2015/07/30/sieve-of-eratosthenes-in-go/</link>
      <pubDate>Thu, 30 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/30/sieve-of-eratosthenes-in-go/</guid>
      <description>I&amp;rsquo;m pretty proud of this one as well.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  package sieve //Sieve Uses the Sieve of Eratosthenes to calculate primes to a certain limit func Sieve(limit int) []int { var listOfPrimes []int markers := make([]bool, limit) for i := 2; i &amp;lt; limit; i++ { if !markers[i] { for j := i + i; j &amp;lt; limit; j += i { markers[j] = true } listOfPrimes = append(listOfPrimes, i) } } return listOfPrimes }   </description>
      <content type="html"><![CDATA[<p>I&rsquo;m pretty proud of this one as well.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-go" data-lang="go">
<span class="kn">package</span> <span class="nx">sieve</span>

<span class="c1">//Sieve Uses the Sieve of Eratosthenes to calculate primes to a certain limit
</span><span class="c1"></span><span class="kd">func</span> <span class="nf">Sieve</span><span class="p">(</span><span class="nx">limit</span> <span class="kt">int</span><span class="p">)</span> <span class="p">[]</span><span class="kt">int</span> <span class="p">{</span>
	<span class="kd">var</span> <span class="nx">listOfPrimes</span> <span class="p">[]</span><span class="kt">int</span>
	<span class="nx">markers</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">bool</span><span class="p">,</span> <span class="nx">limit</span><span class="p">)</span>

	<span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">2</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">limit</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
		<span class="k">if</span> <span class="p">!</span><span class="nx">markers</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="p">{</span>
			<span class="k">for</span> <span class="nx">j</span> <span class="o">:=</span> <span class="nx">i</span> <span class="o">+</span> <span class="nx">i</span><span class="p">;</span> <span class="nx">j</span> <span class="p">&lt;</span> <span class="nx">limit</span><span class="p">;</span> <span class="nx">j</span> <span class="o">+=</span> <span class="nx">i</span> <span class="p">{</span>
				<span class="nx">markers</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span> <span class="p">=</span> <span class="kc">true</span>
			<span class="p">}</span>
			<span class="nx">listOfPrimes</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">listOfPrimes</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="k">return</span> <span class="nx">listOfPrimes</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></content>
    </item>
    
    <item>
      <title>Quick Tip for Debugging Headless Locally</title>
      <link>https://skarlso.github.io/2015/07/22/quick-tip-for-debugging-headless-locally/</link>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/22/quick-tip-for-debugging-headless-locally/</guid>
      <description>If you are installing something with Packer and you have Headless enabled(and you are lazy and don&amp;rsquo;t want to switch it off), it gets difficult, to see output.
Especially on a windows install the Answer File / Unattended install can be like =&amp;gt; Waiting for SSH. for about an hour or two! If you are doing this locally fret not. Just start VirtualBox, and watch the Preview section which will display the current state even if it&amp;rsquo;s a headless install!</description>
      <content type="html"><![CDATA[<p>If you are installing something with Packer and you have Headless enabled(and you are lazy and don&rsquo;t want to switch it off), it gets difficult, to see output.</p>
<p>Especially on a windows install the Answer File / Unattended install can be like =&gt; Waiting for SSH. for about an hour or two! If you are doing this locally fret not. Just start VirtualBox, and watch the Preview section which will display the current state even if it&rsquo;s a headless install!</p>
<p>It&rsquo;s a small windows, but your can click on <strong>Show</strong> which will open the VM in a proper view.</p>
<p>Enjoy,
Gergely.</p>
]]></content>
    </item>
    
    <item>
      <title>Converting numbers into string representations</title>
      <link>https://skarlso.github.io/2015/07/19/converting-numbers-into-string-representations/</link>
      <pubDate>Sun, 19 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/19/converting-numbers-into-string-representations/</guid>
      <description>I quiet like this one. My first go program snippet without any peaking or googling. I&amp;rsquo;m proud, though it could be improved with a bit of struct magic and such and such. And it only counts &amp;lsquo;till 1000.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58  package main import &amp;#34;fmt&amp;#34; var words = map[int]string{1: &amp;#34;one&amp;#34;, 2: &amp;#34;two&amp;#34;, 3: &amp;#34;three&amp;#34;, 4: &amp;#34;four&amp;#34;, 5: &amp;#34;five&amp;#34;, 6: &amp;#34;six&amp;#34;, 7: &amp;#34;seven&amp;#34;, 8: &amp;#34;eight&amp;#34;, 9: &amp;#34;nine&amp;#34;, 10: &amp;#34;ten&amp;#34;, 11: &amp;#34;eleven&amp;#34;, 12: &amp;#34;twelve&amp;#34;, 13: &amp;#34;thirteen&amp;#34;, 14: &amp;#34;fourteen&amp;#34;, 15: &amp;#34;fifteen&amp;#34;, 16: &amp;#34;sixteen&amp;#34;, 17: &amp;#34;seventeen&amp;#34;, 18: &amp;#34;eighteen&amp;#34;, 19: &amp;#34;nineteen&amp;#34;, 20: &amp;#34;twenty&amp;#34;, 30: &amp;#34;thirty&amp;#34;, 40: &amp;#34;forty&amp;#34;, 50: &amp;#34;fifty&amp;#34;, 60: &amp;#34;sixty&amp;#34;, 70: &amp;#34;seventy&amp;#34;, 80: &amp;#34;eighty&amp;#34;, 90: &amp;#34;ninety&amp;#34;} // CountLetters count the letters in a long string number representation func CountLetters(limit int) { myLongNumberString := &amp;#34;&amp;#34; for i := 1; i &amp;lt;= limit; i++ { addLettersToMyString(&amp;amp;myLongNumberString, i) } // fmt.</description>
      <content type="html"><![CDATA[<p>I quiet like this one. My first go program snippet without any peaking or googling. I&rsquo;m proud, though it could be improved with a bit of struct magic and such and such. And it only counts &lsquo;till 1000.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-go" data-lang="go">
<span class="kn">package</span> <span class="nx">main</span>

<span class="kn">import</span> <span class="s">&#34;fmt&#34;</span>

<span class="kd">var</span> <span class="nx">words</span> <span class="p">=</span> <span class="kd">map</span><span class="p">[</span><span class="kt">int</span><span class="p">]</span><span class="kt">string</span><span class="p">{</span><span class="mi">1</span><span class="p">:</span> <span class="s">&#34;one&#34;</span><span class="p">,</span> <span class="mi">2</span><span class="p">:</span> <span class="s">&#34;two&#34;</span><span class="p">,</span> <span class="mi">3</span><span class="p">:</span> <span class="s">&#34;three&#34;</span><span class="p">,</span> <span class="mi">4</span><span class="p">:</span> <span class="s">&#34;four&#34;</span><span class="p">,</span> <span class="mi">5</span><span class="p">:</span> <span class="s">&#34;five&#34;</span><span class="p">,</span> <span class="mi">6</span><span class="p">:</span> <span class="s">&#34;six&#34;</span><span class="p">,</span> <span class="mi">7</span><span class="p">:</span> <span class="s">&#34;seven&#34;</span><span class="p">,</span>
	<span class="mi">8</span><span class="p">:</span> <span class="s">&#34;eight&#34;</span><span class="p">,</span> <span class="mi">9</span><span class="p">:</span> <span class="s">&#34;nine&#34;</span><span class="p">,</span> <span class="mi">10</span><span class="p">:</span> <span class="s">&#34;ten&#34;</span><span class="p">,</span> <span class="mi">11</span><span class="p">:</span> <span class="s">&#34;eleven&#34;</span><span class="p">,</span> <span class="mi">12</span><span class="p">:</span> <span class="s">&#34;twelve&#34;</span><span class="p">,</span> <span class="mi">13</span><span class="p">:</span> <span class="s">&#34;thirteen&#34;</span><span class="p">,</span> <span class="mi">14</span><span class="p">:</span> <span class="s">&#34;fourteen&#34;</span><span class="p">,</span> <span class="mi">15</span><span class="p">:</span> <span class="s">&#34;fifteen&#34;</span><span class="p">,</span>
	<span class="mi">16</span><span class="p">:</span> <span class="s">&#34;sixteen&#34;</span><span class="p">,</span> <span class="mi">17</span><span class="p">:</span> <span class="s">&#34;seventeen&#34;</span><span class="p">,</span> <span class="mi">18</span><span class="p">:</span> <span class="s">&#34;eighteen&#34;</span><span class="p">,</span> <span class="mi">19</span><span class="p">:</span> <span class="s">&#34;nineteen&#34;</span><span class="p">,</span> <span class="mi">20</span><span class="p">:</span> <span class="s">&#34;twenty&#34;</span><span class="p">,</span> <span class="mi">30</span><span class="p">:</span> <span class="s">&#34;thirty&#34;</span><span class="p">,</span> <span class="mi">40</span><span class="p">:</span> <span class="s">&#34;forty&#34;</span><span class="p">,</span>
	<span class="mi">50</span><span class="p">:</span> <span class="s">&#34;fifty&#34;</span><span class="p">,</span> <span class="mi">60</span><span class="p">:</span> <span class="s">&#34;sixty&#34;</span><span class="p">,</span> <span class="mi">70</span><span class="p">:</span> <span class="s">&#34;seventy&#34;</span><span class="p">,</span> <span class="mi">80</span><span class="p">:</span> <span class="s">&#34;eighty&#34;</span><span class="p">,</span> <span class="mi">90</span><span class="p">:</span> <span class="s">&#34;ninety&#34;</span><span class="p">}</span>

<span class="c1">// CountLetters count the letters in a long string number representation
</span><span class="c1"></span><span class="kd">func</span> <span class="nf">CountLetters</span><span class="p">(</span><span class="nx">limit</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">myLongNumberString</span> <span class="o">:=</span> <span class="s">&#34;&#34;</span>
	<span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="nx">limit</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
		<span class="nf">addLettersToMyString</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">myLongNumberString</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
	<span class="p">}</span>
	<span class="c1">// fmt.Println(&#34;1-9 written with letters is: &#34;, len(myLongNumberString))
</span><span class="c1"></span>	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;The string is:&#34;</span><span class="p">,</span> <span class="nx">myLongNumberString</span><span class="p">)</span>
	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;Lenght of string is:&#34;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="nx">myLongNumberString</span><span class="p">))</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nf">addLettersToMyString</span><span class="p">(</span><span class="nx">myString</span> <span class="o">*</span><span class="kt">string</span><span class="p">,</span> <span class="nx">num</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
	<span class="k">if</span> <span class="nx">num</span> <span class="p">&lt;</span> <span class="mi">20</span> <span class="p">{</span>
		<span class="o">*</span><span class="nx">myString</span> <span class="o">+=</span> <span class="nx">words</span><span class="p">[</span><span class="nx">num</span><span class="p">]</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="nx">num</span> <span class="o">&gt;=</span> <span class="mi">20</span> <span class="o">&amp;&amp;</span> <span class="nx">num</span> <span class="p">&lt;</span> <span class="mi">100</span> <span class="p">{</span>
		<span class="o">*</span><span class="nx">myString</span> <span class="o">+=</span> <span class="nf">countMiddle</span><span class="p">(</span><span class="nx">num</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="nx">num</span> <span class="o">&gt;=</span> <span class="mi">100</span> <span class="o">&amp;&amp;</span> <span class="nx">num</span> <span class="p">&lt;</span> <span class="mi">1000</span> <span class="p">{</span>
		<span class="nx">hundred</span><span class="p">,</span> <span class="nx">tenth</span> <span class="o">:=</span> <span class="nf">countHundred</span><span class="p">(</span><span class="nx">num</span><span class="p">)</span>
		<span class="k">if</span> <span class="nx">tenth</span> <span class="o">==</span>  <span class="p">{</span>
			<span class="o">*</span><span class="nx">myString</span> <span class="o">+=</span> <span class="nx">hundred</span>
		<span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="nx">tenth</span> <span class="o">&gt;=</span> <span class="mi">11</span> <span class="o">&amp;&amp;</span> <span class="nx">tenth</span> <span class="p">&lt;</span> <span class="mi">20</span> <span class="p">{</span>
			<span class="o">*</span><span class="nx">myString</span> <span class="o">+=</span> <span class="nx">hundred</span> <span class="o">+</span> <span class="s">&#34;and&#34;</span> <span class="o">+</span> <span class="nx">words</span><span class="p">[</span><span class="nx">tenth</span><span class="p">]</span>
		<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
			<span class="o">*</span><span class="nx">myString</span> <span class="o">+=</span> <span class="nx">hundred</span> <span class="o">+</span> <span class="s">&#34;and&#34;</span> <span class="o">+</span> <span class="nf">countMiddle</span><span class="p">(</span><span class="nx">tenth</span><span class="p">)</span>
		<span class="p">}</span>

	<span class="p">}</span>

	<span class="k">if</span> <span class="nx">num</span> <span class="o">==</span> <span class="mi">1000</span> <span class="p">{</span>
		<span class="o">*</span><span class="nx">myString</span> <span class="o">+=</span> <span class="s">&#34;onethousand&#34;</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nf">countMiddle</span><span class="p">(</span><span class="nx">num</span> <span class="kt">int</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
	<span class="nx">minues</span> <span class="o">:=</span> <span class="nx">num</span> <span class="o">%</span> <span class="mi">10</span>
	<span class="nx">num</span> <span class="o">-=</span> <span class="nx">minues</span>
	<span class="k">return</span> <span class="nx">words</span><span class="p">[</span><span class="nx">num</span><span class="p">]</span> <span class="o">+</span> <span class="nx">words</span><span class="p">[</span><span class="nx">minues</span><span class="p">]</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nf">countHundred</span><span class="p">(</span><span class="nx">num</span> <span class="kt">int</span><span class="p">)</span> <span class="p">(</span><span class="kt">string</span><span class="p">,</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">minues</span> <span class="o">:=</span> <span class="nx">num</span> <span class="o">%</span> <span class="mi">100</span>
	<span class="nx">num</span> <span class="o">-=</span> <span class="nx">minues</span>
	<span class="k">return</span> <span class="p">(</span><span class="nx">words</span><span class="p">[(</span><span class="nx">num</span><span class="o">/</span><span class="mi">100</span><span class="p">)]</span> <span class="o">+</span> <span class="s">&#34;hundred&#34;</span><span class="p">),</span> <span class="nx">minues</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></content>
    </item>
    
    <item>
      <title>Selenium Testing with Packer and Vagrant</title>
      <link>https://skarlso.github.io/2015/07/16/selenium-testing-with-packer-and-vagrant/</link>
      <pubDate>Thu, 16 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/16/selenium-testing-with-packer-and-vagrant/</guid>
      <description>&lt;p&gt;So, recently, the tester team talked to me, that their build takes too long, and why is that? A quick look at their configuration and build scripts showed me, that they are actually using a vagrant box, which never gets destroyed or re-started at least. To remedy this problem, I came up with the following solution.&lt;/p&gt;</description>
      <content type="html"><![CDATA[<p>So, recently, the tester team talked to me, that their build takes too long, and why is that? A quick look at their configuration and build scripts showed me, that they are actually using a vagrant box, which never gets destroyed or re-started at least. To remedy this problem, I came up with the following solution.</p>
<h1 id="same-old">Same old.</h1>
<p>Same as in my previous post, we are going to build a Windows Machine for this purpose. The only addition to my previous settings, will be some Java install, downloading selenium and installing Chrome, and Firefox.</p>
<h1 id="installation">Installation</h1>
<h4 id="answer-file">Answer File</h4>
<p>Here is the configuration and setup of Windows before the provision phase.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml">
...
               <span class="nt">&lt;SynchronousCommand</span> <span class="na">wcm:action=</span><span class="s">&#34;add&#34;</span><span class="nt">&gt;</span>
                  <span class="nt">&lt;CommandLine&gt;</span>cmd.exe /c C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -File a:\jdk_inst.ps1 -AutoStart<span class="nt">&lt;/CommandLine&gt;</span>
                  <span class="nt">&lt;Description&gt;</span>Install Java<span class="nt">&lt;/Description&gt;</span>
                  <span class="nt">&lt;Order&gt;</span>103<span class="nt">&lt;/Order&gt;</span>
                  <span class="nt">&lt;RequiresUserInput&gt;</span>true<span class="nt">&lt;/RequiresUserInput&gt;</span>
               <span class="nt">&lt;/SynchronousCommand&gt;</span>
...
</code></pre></td></tr></table>
</div>
</div><p>This is the part were I&rsquo;m installing Java. The script for the jdk_inst.ps1 is in my previous post, but I&rsquo;ll paste it here for ease of read.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-powershell" data-lang="powershell">
<span class="k">function</span> <span class="n">LogWrite</span> <span class="p">{</span>
   <span class="k">Param</span> <span class="p">(</span><span class="no">[string]</span><span class="nv">$logstring</span><span class="p">)</span>
   <span class="nv">$now</span> <span class="p">=</span> <span class="nb">Get-Date</span> <span class="n">-format</span> <span class="n">s</span>
   <span class="nb">Add-Content</span> <span class="nv">$Logfile</span> <span class="n">-value</span> <span class="s2">&#34;$now $logstring&#34;</span>
   <span class="nb">Write-Host</span> <span class="nv">$logstring</span>
<span class="p">}</span>

<span class="nv">$Logfile</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\jdk-install.log&#34;</span>

<span class="nv">$JDK_VER</span><span class="p">=</span><span class="s2">&#34;7u75&#34;</span>
<span class="nv">$JDK_FULL_VER</span><span class="p">=</span><span class="s2">&#34;7u75-b13&#34;</span>
<span class="nv">$JDK_PATH</span><span class="p">=</span><span class="s2">&#34;1.7.0_75&#34;</span>
<span class="nv">$source86</span> <span class="p">=</span> <span class="s2">&#34;http://download.oracle.com/otn-pub/java/jdk/$JDK_FULL_VER/jdk-$JDK_VER-windows-i586.exe&#34;</span>
<span class="nv">$source64</span> <span class="p">=</span> <span class="s2">&#34;http://download.oracle.com/otn-pub/java/jdk/$JDK_FULL_VER/jdk-$JDK_VER-windows-x64.exe&#34;</span>
<span class="nv">$destination86</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\$JDK_VER-x86.exe&#34;</span>
<span class="nv">$destination64</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\$JDK_VER-x64.exe&#34;</span>
<span class="nv">$client</span> <span class="p">=</span> <span class="nb">new-object</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">WebClient</span>
<span class="nv">$cookie</span> <span class="p">=</span> <span class="s2">&#34;oraclelicense=accept-securebackup-cookie&#34;</span>
<span class="nv">$client</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="no">[System.Net.HttpRequestHeader]</span><span class="p">::</span><span class="n">Cookie</span><span class="p">,</span> <span class="nv">$cookie</span><span class="p">)</span>

<span class="n">LogWrite</span> <span class="s2">&#34;Setting Execution Policy level to Bypass&#34;</span>
<span class="nb">Set-ExecutionPolicy</span> <span class="n">-Scope</span> <span class="n">CurrentUser</span> <span class="n">-ExecutionPolicy</span> <span class="n">Bypass</span> <span class="n">-Force</span>

<span class="n">LogWrite</span> <span class="s1">&#39;Checking if Java is already installed&#39;</span>
<span class="k">if</span> <span class="p">((</span><span class="nb">Test-Path</span> <span class="s2">&#34;c:\Program Files (x86)\Java&#34;</span><span class="p">)</span> <span class="o">-Or</span> <span class="p">(</span><span class="nb">Test-Path</span> <span class="s2">&#34;c:\Program Files\Java&#34;</span><span class="p">))</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;No need to Install Java&#39;</span>
    <span class="n">Exit</span>
<span class="p">}</span>

<span class="n">LogWrite</span> <span class="s1">&#39;Downloading x86 to $destination86&#39;</span>
<span class="k">try</span> <span class="p">{</span>
  <span class="nv">$client</span><span class="p">.</span><span class="n">downloadFile</span><span class="p">(</span><span class="nv">$source86</span><span class="p">,</span> <span class="nv">$destination86</span><span class="p">)</span>
  <span class="k">if</span> <span class="p">(!(</span><span class="nb">Test-Path</span> <span class="nv">$destination86</span><span class="p">))</span> <span class="p">{</span>
      <span class="n">LogWrite</span> <span class="s2">&#34;Downloading $destination86 failed&#34;</span>
      <span class="n">Exit</span>
  <span class="p">}</span>
  <span class="n">LogWrite</span> <span class="s1">&#39;Downloading x64 to $destination64&#39;</span>

  <span class="nv">$client</span><span class="p">.</span><span class="n">downloadFile</span><span class="p">(</span><span class="nv">$source64</span><span class="p">,</span> <span class="nv">$destination64</span><span class="p">)</span>
  <span class="k">if</span> <span class="p">(!(</span><span class="nb">Test-Path</span> <span class="nv">$destination64</span><span class="p">))</span> <span class="p">{</span>
      <span class="n">LogWrite</span> <span class="s2">&#34;Downloading $destination64 failed&#34;</span>
      <span class="n">Exit</span>
  <span class="p">}</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[Exception]</span> <span class="p">{</span>
  <span class="n">LogWrite</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
<span class="p">}</span>

<span class="k">try</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Installing JDK-x64&#39;</span>
    <span class="nv">$proc1</span> <span class="p">=</span> <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="s2">&#34;$destination64&#34;</span> <span class="n">-ArgumentList</span> <span class="s2">&#34;/s REBOOT=ReallySuppress&#34;</span> <span class="n">-Wait</span> <span class="n">-PassThru</span>
    <span class="nv">$proc1</span><span class="p">.</span><span class="n">waitForExit</span><span class="p">()</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Installation Done.&#39;</span>

    <span class="n">LogWrite</span> <span class="s1">&#39;Installing JDK-x86&#39;</span>
    <span class="nv">$proc2</span> <span class="p">=</span> <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="s2">&#34;$destination86&#34;</span> <span class="n">-ArgumentList</span> <span class="s2">&#34;/s REBOOT=ReallySuppress&#34;</span> <span class="n">-Wait</span> <span class="n">-PassThru</span>
    <span class="nv">$proc2</span><span class="p">.</span><span class="n">waitForExit</span><span class="p">()</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Installtion Done.&#39;</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[exception]</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;$_ is&#39;</span> <span class="nv">$_</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;$_.GetType().FullName is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">GetType</span><span class="p">().</span><span class="n">FullName</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;$_.Exception.GetType().FullName is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span><span class="p">.</span><span class="n">GetType</span><span class="p">().</span><span class="n">FullName</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;$_.Exception.Message is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span><span class="p">.</span><span class="n">Message</span>
<span class="p">}</span>

<span class="k">if</span> <span class="p">((</span><span class="nb">Test-Path</span> <span class="s2">&#34;c:\Program Files (x86)\Java&#34;</span><span class="p">)</span> <span class="o">-Or</span> <span class="p">(</span><span class="nb">Test-Path</span> <span class="s2">&#34;c:\Program Files\Java&#34;</span><span class="p">))</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Java installed successfully.&#39;</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Java install Failed!&#39;</span>
<span class="p">}</span>
<span class="n">LogWrite</span> <span class="s1">&#39;Setting up Path variables.&#39;</span>
<span class="no">[System.Environment]</span><span class="p">::</span><span class="n">SetEnvironmentVariable</span><span class="p">(</span><span class="s2">&#34;JAVA_HOME&#34;</span><span class="p">,</span> <span class="s2">&#34;c:\Program Files (x86)\Java\jdk$JDK_PATH&#34;</span><span class="p">,</span> <span class="s2">&#34;Machine&#34;</span><span class="p">)</span>
<span class="no">[System.Environment]</span><span class="p">::</span><span class="n">SetEnvironmentVariable</span><span class="p">(</span><span class="s2">&#34;PATH&#34;</span><span class="p">,</span> <span class="nv">$Env:Path</span> <span class="p">+</span> <span class="s2">&#34;;c:\Program Files (x86)\Java\jdk$JDK_PATH\bin&#34;</span><span class="p">,</span> <span class="s2">&#34;Machine&#34;</span><span class="p">)</span>
<span class="n">LogWrite</span> <span class="s1">&#39;Done. Goodbye.&#39;</span>
</code></pre></td></tr></table>
</div>
</div><p>This installs both x86 and 64 bit version of Java.</p>
<h1 id="provision">Provision</h1>
<p>I decided to put these into the provision phase to get log messages written out properly. Because in the unattended file, you can&rsquo;t see any progress.</p>
<h4 id="chrome-and-firefox">Chrome And Firefox</h4>
<p>Installing these two proved a little bit more difficult. Chrome didn&rsquo;t really like me to download their installer without accepting something first, like Java. Luckily, after a LOT of digging, I found a chrome installer which lets you install silently. Here is the script to install the two.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-powershell" data-lang="powershell">
<span class="k">function</span> <span class="n">LogWrite</span> <span class="p">{</span>
    <span class="k">Param</span> <span class="p">(</span><span class="no">[string]</span><span class="nv">$logstring</span><span class="p">)</span>
    <span class="nv">$now</span> <span class="p">=</span> <span class="nb">Get-Date</span> <span class="n">-format</span> <span class="n">s</span>
    <span class="nb">Add-Content</span> <span class="nv">$Logfile</span> <span class="n">-value</span> <span class="s2">&#34;$now $logstring&#34;</span>
    <span class="nb">Write-Host</span> <span class="nv">$logstring</span>
<span class="p">}</span>

<span class="k">function</span> <span class="n">CheckLocation</span> <span class="p">{</span>
    <span class="k">Param</span> <span class="p">(</span><span class="no">[string]</span><span class="nv">$location</span><span class="p">)</span>
    <span class="k">if</span> <span class="p">(!(</span><span class="nb">Test-Path</span>  <span class="nv">$location</span><span class="p">))</span> <span class="p">{</span>
        <span class="k">throw</span> <span class="no">[System.IO.FileNotFoundException]</span> <span class="s2">&#34;Could not download to Destination $location.&#34;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="nv">$Logfile</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\chrome-firefox-install.log&#34;</span>

<span class="nv">$chrome_source</span> <span class="p">=</span> <span class="s2">&#34;http://dl.google.com/chrome/install/375.126/chrome_installer.exe&#34;</span>
<span class="nv">$chrome_destination</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\chrome_installer.exe&#34;</span>
<span class="nv">$firefox_source</span> <span class="p">=</span> <span class="s2">&#34;https://download-installer.cdn.mozilla.net/pub/firefox/releases/39.0/win32/hu/Firefox%20Setup%2039.0.exe&#34;</span>
<span class="nv">$firefox_destination</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\firefoxinstaller.exe&#34;</span>

<span class="n">LogWrite</span> <span class="s1">&#39;Starting to download files.&#39;</span>
<span class="k">try</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Downloading Chrome...&#39;</span>
    <span class="p">(</span><span class="nb">New-Object</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">WebClient</span><span class="p">).</span><span class="n">DownloadFile</span><span class="p">(</span><span class="nv">$chrome_source</span><span class="p">,</span> <span class="nv">$chrome_destination</span><span class="p">)</span>
    <span class="n">CheckLocation</span> <span class="nv">$chrome_destination</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Done...&#39;</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Downloading Firefox...&#39;</span>
    <span class="p">(</span><span class="nb">New-Object</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">WebClient</span><span class="p">).</span><span class="n">DownloadFile</span><span class="p">(</span><span class="nv">$firefox_source</span><span class="p">,</span> <span class="nv">$firefox_destination</span><span class="p">)</span>
    <span class="n">CheckLocation</span> <span class="nv">$firefox_destination</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[Exception]</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s2">&#34;Exception during download. Probable cause could be that the directory or the file didn&#39;t exist.&#34;</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
<span class="p">}</span>

<span class="n">LogWrite</span> <span class="s1">&#39;Starting firefox install process.&#39;</span>
<span class="k">try</span> <span class="p">{</span>
    <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="nv">$firefox_destination</span> <span class="n">-ArgumentList</span> <span class="s2">&#34;-ms&#34;</span> <span class="n">-Wait</span> <span class="n">-PassThru</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[Exception]</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Exception during install process.&#39;</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
<span class="p">}</span>
<span class="n">LogWrite</span> <span class="s1">&#39;Starting chrome install process.&#39;</span>

<span class="k">try</span> <span class="p">{</span>
    <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="nv">$chrome_destination</span> <span class="n">-ArgumentList</span> <span class="s2">&#34;/silent /install&#34;</span> <span class="n">-Wait</span> <span class="n">-PassThru</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[Exception]</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Exception during install process.&#39;</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
<span class="p">}</span>

<span class="n">LogWrite</span> <span class="s1">&#39;All done. Goodbye.&#39;</span>
</code></pre></td></tr></table>
</div>
</div><p>They both install silently. Pretty neat.</p>
<h4 id="selenium">Selenium</h4>
<p>This only has to be downloaded, so this is pretty simple. Vagrant will handle the startup of course when it does a vagrant up.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-powershell" data-lang="powershell">
<span class="k">function</span> <span class="n">LogWrite</span> <span class="p">{</span>
   <span class="k">Param</span> <span class="p">(</span><span class="no">[string]</span><span class="nv">$logstring</span><span class="p">)</span>
   <span class="nv">$now</span> <span class="p">=</span> <span class="nb">Get-Date</span> <span class="n">-format</span> <span class="n">s</span>
   <span class="nb">Add-Content</span> <span class="nv">$Logfile</span> <span class="n">-value</span> <span class="s2">&#34;$now $logstring&#34;</span>
   <span class="nb">Write-Host</span> <span class="nv">$logstring</span>
<span class="p">}</span>

<span class="nv">$Logfile</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\selenium-install.log&#34;</span>

<span class="nv">$source</span> <span class="p">=</span> <span class="s2">&#34;http://selenium-release.storage.googleapis.com/2.46/selenium-server-standalone-2.46.0.jar&#34;</span>
<span class="nv">$destination</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\selenium-server.jar&#34;</span>
<span class="n">LogWrite</span> <span class="s1">&#39;Starting to download selenium file.&#39;</span>
<span class="k">try</span> <span class="p">{</span>
  <span class="p">(</span><span class="nb">New-Object</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">WebClient</span><span class="p">).</span><span class="n">DownloadFile</span><span class="p">(</span><span class="nv">$source</span><span class="p">,</span> <span class="nv">$destination</span><span class="p">)</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[Exception]</span> <span class="p">{</span>
  <span class="n">LogWrite</span> <span class="s2">&#34;Exception during download. Probable cause could be that the directory or the file didn&#39;t exist.&#34;</span>
  <span class="n">LogWrite</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
<span class="p">}</span>
<span class="n">LogWrite</span> <span class="s1">&#39;Download done. Checking if file exists.&#39;</span>
<span class="k">if</span> <span class="p">(!(</span><span class="nb">Test-Path</span> <span class="nv">$destination</span><span class="p">))</span> <span class="p">{</span>
  <span class="n">LogWrite</span> <span class="s1">&#39;Downloading dotnet Failed!&#39;</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
  <span class="n">LogWrite</span> <span class="s1">&#39;Download successful.&#39;</span>
<span class="p">}</span>

<span class="n">LogWrite</span> <span class="s1">&#39;All done. Goodbye.&#39;</span>
</code></pre></td></tr></table>
</div>
</div><p>Straightforward.</p>
<h4 id="the-packer-json-file">The Packer Json File</h4>
<p>So putting this all together, here is the Packer JSON file for this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json">
<span class="p">{</span>
      <span class="nt">&#34;variables&#34;</span><span class="p">:</span> <span class="p">{</span>
      <span class="nt">&#34;vm_name&#34;</span><span class="p">:</span> <span class="s2">&#34;win7x64selenium&#34;</span><span class="p">,</span>
      <span class="nt">&#34;output_dir&#34;</span><span class="p">:</span> <span class="s2">&#34;output_win7_x64_selenium&#34;</span><span class="p">,</span>
      <span class="nt">&#34;vagrant_box_output&#34;</span><span class="p">:</span> <span class="s2">&#34;box_output&#34;</span><span class="p">,</span>
      <span class="nt">&#34;cpu_number&#34;</span><span class="p">:</span> <span class="s2">&#34;2&#34;</span><span class="p">,</span>
      <span class="nt">&#34;memory_size&#34;</span><span class="p">:</span> <span class="s2">&#34;4096&#34;</span><span class="p">,</span>
      <span class="nt">&#34;machine_type&#34;</span><span class="p">:</span> <span class="s2">&#34;pc-1.2&#34;</span><span class="p">,</span>
      <span class="nt">&#34;accelerator&#34;</span><span class="p">:</span> <span class="s2">&#34;kvm&#34;</span><span class="p">,</span>
      <span class="nt">&#34;disk_format&#34;</span><span class="p">:</span> <span class="s2">&#34;qcow2&#34;</span><span class="p">,</span>
      <span class="nt">&#34;disk_interface&#34;</span><span class="p">:</span> <span class="s2">&#34;virtio&#34;</span><span class="p">,</span>
      <span class="nt">&#34;net_device&#34;</span><span class="p">:</span> <span class="s2">&#34;virtio-net&#34;</span><span class="p">,</span>
      <span class="nt">&#34;cpu_model&#34;</span><span class="p">:</span> <span class="s2">&#34;host&#34;</span><span class="p">,</span>
      <span class="nt">&#34;disk_cache&#34;</span><span class="p">:</span> <span class="s2">&#34;writeback&#34;</span><span class="p">,</span>
      <span class="nt">&#34;disk_io&#34;</span><span class="p">:</span> <span class="s2">&#34;native&#34;</span>
   <span class="p">},</span>

  <span class="nt">&#34;builders&#34;</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;virtualbox-iso&#34;</span><span class="p">,</span>
      <span class="nt">&#34;iso_url&#34;</span><span class="p">:</span> <span class="s2">&#34;/home/user/vms/windows7.iso&#34;</span><span class="p">,</span>
      <span class="nt">&#34;iso_checksum_type&#34;</span><span class="p">:</span> <span class="s2">&#34;sha1&#34;</span><span class="p">,</span>
      <span class="nt">&#34;iso_checksum&#34;</span><span class="p">:</span> <span class="s2">&#34;0BCFC54019EA175B1EE51F6D2B207A3D14DD2B58&#34;</span><span class="p">,</span>
      <span class="nt">&#34;headless&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
      <span class="nt">&#34;boot_wait&#34;</span><span class="p">:</span> <span class="s2">&#34;2m&#34;</span><span class="p">,</span>
      <span class="nt">&#34;ssh_username&#34;</span><span class="p">:</span> <span class="s2">&#34;vagrant&#34;</span><span class="p">,</span>
      <span class="nt">&#34;ssh_password&#34;</span><span class="p">:</span> <span class="s2">&#34;vagrant&#34;</span><span class="p">,</span>
      <span class="nt">&#34;ssh_wait_timeout&#34;</span><span class="p">:</span> <span class="s2">&#34;8h&#34;</span><span class="p">,</span>
      <span class="nt">&#34;shutdown_command&#34;</span><span class="p">:</span> <span class="s2">&#34;shutdown /s /t 10 /f /d p:4:1 /c \&#34;Packer Shutdown\&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;guest_os_type&#34;</span><span class="p">:</span> <span class="s2">&#34;Windows7_64&#34;</span><span class="p">,</span>
      <span class="nt">&#34;disk_size&#34;</span><span class="p">:</span> <span class="mi">61440</span><span class="p">,</span>
      <span class="nt">&#34;floppy_files&#34;</span><span class="p">:</span> <span class="p">[</span>
        <span class="s2">&#34;./answer_files/7-selenium/Autounattend.xml&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/dis-updates.ps1&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/microsoft-updates.bat&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/openssh.ps1&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/jdk_inst.ps1&#34;</span>
      <span class="p">],</span>
      <span class="nt">&#34;vboxmanage&#34;</span><span class="p">:</span> <span class="p">[</span>
        <span class="p">[</span>
          <span class="s2">&#34;modifyvm&#34;</span><span class="p">,</span>
          <span class="s2">&#34;{{.Name}}&#34;</span><span class="p">,</span>
          <span class="s2">&#34;--memory&#34;</span><span class="p">,</span>
          <span class="s2">&#34;{{user `memory_size`}}&#34;</span>
        <span class="p">],</span>
        <span class="p">[</span>
          <span class="s2">&#34;modifyvm&#34;</span><span class="p">,</span>
          <span class="s2">&#34;{{.Name}}&#34;</span><span class="p">,</span>
          <span class="s2">&#34;--cpus&#34;</span><span class="p">,</span>
          <span class="s2">&#34;{{user `cpu_number`}}&#34;</span>
        <span class="p">]</span>
      <span class="p">]</span>
    <span class="p">}</span>
  <span class="p">],</span>
  <span class="nt">&#34;provisioners&#34;</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;powershell&#34;</span><span class="p">,</span>
      <span class="nt">&#34;scripts&#34;</span> <span class="p">:</span> <span class="p">[</span>
        <span class="s2">&#34;./scripts/install-selenium-server.ps1&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/install-chrome-firefox.ps1&#34;</span>
      <span class="p">]</span>
    <span class="p">},{</span>
      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;shell&#34;</span><span class="p">,</span>
      <span class="nt">&#34;remote_path&#34;</span><span class="p">:</span> <span class="s2">&#34;/tmp/script.bat&#34;</span><span class="p">,</span>
      <span class="nt">&#34;execute_command&#34;</span><span class="p">:</span> <span class="s2">&#34;{{.Vars}} cmd /c C:/Windows/Temp/script.bat&#34;</span><span class="p">,</span>
      <span class="nt">&#34;scripts&#34;</span><span class="p">:</span> <span class="p">[</span>
        <span class="s2">&#34;./scripts/vm-guest-tools.bat&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/vagrant-ssh.bat&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/rsync.bat&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/enable-rdp.bat&#34;</span>
      <span class="p">]</span>
    <span class="p">}</span>
  <span class="p">],</span>
    <span class="nt">&#34;post-processors&#34;</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;vagrant&#34;</span><span class="p">,</span>
      <span class="nt">&#34;keep_input_artifact&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
      <span class="nt">&#34;output&#34;</span><span class="p">:</span> <span class="s2">&#34;{{user `vm_name`}}_{{.Provider}}.box&#34;</span><span class="p">,</span>
      <span class="nt">&#34;vagrantfile_template&#34;</span><span class="p">:</span> <span class="s2">&#34;vagrantfile-template&#34;</span>
    <span class="p">}</span>
    <span class="p">]</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="additional-software">Additional Software</h4>
<p>This is not done here. Obviously, in order to test your stuff, you first need to install your software on this box. Ideally, everything you need should be in the code you clone to this box, and should be contained mostly. And your application deployment should take core of that. But, if you require something like a DB, postgres, oracle, whatnot, than this is the place where you would install all that.</p>
<h1 id="vagrant-and-using-the-packer-box">Vagrant and Using the Packer Box</h1>
<p>Now, this has been interesting so far, but how do you actually go about using this image? That&rsquo;s the real question now, isn&rsquo;t it? Having a box, just sitting on a shared folder, doesn&rsquo;t do you too much good. So let&rsquo;s create a Jenkins job, which utilizes this box in a job which runs a bunch of tests for some application.</p>
<h4 id="vagrantfile">Vagrantfile</h4>
<p>Your vagrant file, could either be generated automatically, under source control ( which is preferred ) or sitting somewhere entirely elsewhere. In any case, it would look something like this.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-ruby" data-lang="ruby">
<span class="c1"># -*- mode: ruby -*-</span>
<span class="c1"># vi: set ft=ruby :</span>

<span class="no">VAGRANTFILE_API_VERSION</span> <span class="o">=</span> <span class="s2">&#34;2&#34;</span>

<span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="no">VAGRANTFILE_API_VERSION</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>

  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="s2">&#34;virtualbox&#34;</span>

  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">define</span> <span class="s2">&#34;selenium-box&#34;</span> <span class="k">do</span> <span class="o">|</span><span class="n">vs2013</span><span class="o">|</span>
    <span class="n">vs2013</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="s2">&#34;windows7-x64-04-selenium&#34;</span>
    <span class="n">vs2013</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box_url</span> <span class="o">=</span> <span class="s2">&#34;path/to/your/share/win7x64_selenium_virtualbox.box&#34;</span>
  <span class="k">end</span>

  <span class="n">config</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">enable</span>

  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">guest</span> <span class="o">=</span> <span class="ss">:windows</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">communicator</span> <span class="o">=</span> <span class="s2">&#34;winrm&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">winrm</span><span class="o">.</span><span class="n">username</span> <span class="o">=</span> <span class="s2">&#34;vagrant&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">winrm</span><span class="o">.</span><span class="n">password</span> <span class="o">=</span> <span class="s2">&#34;vagrant&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">windows</span><span class="o">.</span><span class="n">set_work_network</span> <span class="o">=</span> <span class="kp">true</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:forwarded_port</span><span class="p">,</span> <span class="ss">guest</span><span class="p">:</span> <span class="mi">3389</span><span class="p">,</span> <span class="ss">host</span><span class="p">:</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;RDESKTOP_PORT&#39;</span><span class="o">]</span><span class="p">,</span> <span class="ss">host_ip</span><span class="p">:</span> <span class="s2">&#34;0.0.0.0&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:forwarded_port</span><span class="p">,</span> <span class="ss">guest</span><span class="p">:</span> <span class="mi">5985</span><span class="p">,</span> <span class="ss">host</span><span class="p">:</span> <span class="mi">5985</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="s2">&#34;winrm&#34;</span><span class="p">,</span> <span class="ss">auto_correct</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">host_ip</span><span class="p">:</span> <span class="s2">&#34;0.0.0.0&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:forwarded_port</span><span class="p">,</span> <span class="ss">guest</span><span class="p">:</span> <span class="mi">9991</span><span class="p">,</span> <span class="ss">host</span><span class="p">:</span> <span class="mi">9991</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="s2">&#34;selenium&#34;</span><span class="p">,</span> <span class="ss">auto_correct</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">host_ip</span><span class="p">:</span> <span class="s2">&#34;0.0.0.0&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="ss">:virtualbox</span> <span class="k">do</span> <span class="o">|</span><span class="n">vbox</span><span class="o">|</span>
    <span class="n">vbox</span><span class="o">.</span><span class="n">gui</span> <span class="o">=</span> <span class="kp">false</span>
    <span class="n">vbox</span><span class="o">.</span><span class="n">memory</span> <span class="o">=</span> <span class="mi">4096</span>
    <span class="n">vbox</span><span class="o">.</span><span class="n">cpus</span> <span class="o">=</span> <span class="mi">2</span>
  <span class="k">end</span>


  <span class="n">config</span><span class="o">.</span><span class="n">winrm</span><span class="o">.</span><span class="n">max_tries</span> <span class="o">=</span> <span class="mi">10</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">synced_folder</span> <span class="s2">&#34;.&#34;</span><span class="p">,</span> <span class="s2">&#34;/vagrant&#34;</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="s2">&#34;rsync&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="s2">&#34;shell&#34;</span><span class="p">,</span> <span class="ss">path</span><span class="p">:</span> <span class="s2">&#34;init.bat&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="s2">&#34;shell&#34;</span><span class="p">,</span> <span class="ss">path</span><span class="p">:</span> <span class="s2">&#34;utils_inst.bat&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="s2">&#34;shell&#34;</span><span class="p">,</span> <span class="ss">path</span><span class="p">:</span> <span class="s2">&#34;jenkins_reg.ps1&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="s2">&#34;shell&#34;</span><span class="p">,</span> <span class="ss">path</span><span class="p">:</span> <span class="s2">&#34;start_selenium.bat&#34;</span>
<span class="k">end</span>
</code></pre></td></tr></table>
</div>
</div><p>Easy, no? Here is the script to start selenium.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">java -jar c:\Windows\Temp\selenium-server.jar -Dhttp.proxyPort=9991
</code></pre></td></tr></table>
</div>
</div><p>Straight forward. We also are forwarding the port on which Selenium is running in order for the test to see it.</p>
<h4 id="the-jenkins-job">The Jenkins Job</h4>
<p>The job can be anything. This is actually too large to cover here. It could be a gradle job, a maven job, an ant, a nant - or whatever is running the test -, job; it&rsquo;s up to you.</p>
<p>Just make sure that before the test runs, do a <strong>vagrant up</strong> and after the test finishes, in an ALWAYS TO BE EXECUTED HOOK -like gradle&rsquo;s finalizedBy , call a <strong>vagrant destroy</strong>. This way, your test will always run on a clean instance that has the necessary stuff on it.</p>
<h1 id="closing-words">Closing words</h1>
<p>So, there you have it. It&rsquo;s relatively simple. Tying this all into your infrastructure might prove difficult though depending on how rigid your deployment is. But it will always help you make your tests a bit more robust.</p>
<p>Also, you could run the whole deployment and test phase on a vagrant box, from the start, which is tied to jenkins as a slave and gets started when the job starts and destroyed when the job ends. That way you wouldn&rsquo;t have to create a, box in a box running on a box, kind of effect.</p>
<p>Thanks for reading,</p>
<p>Gergely.</p>]]></content>
    </item>
    
    <item>
      <title>Packer 0.8.1.</title>
      <link>https://skarlso.github.io/2015/07/01/packer-0-8-1/</link>
      <pubDate>Wed, 01 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/01/packer-0-8-1/</guid>
      <description>Previously I wrote that the scripts I&amp;rsquo;m writing, are failing because Packer hangs.
Apparently, this was a known issue. And apparently, I was using an older version, 0.7.5. After I updated everything is working wonderfully!!!
And for my thanks, here is an updated PowerShell script for provisioning my dotnet stuff.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  $source = &amp;#34;http://download.</description>
      <content type="html"><![CDATA[<p>Previously I wrote that the scripts I&rsquo;m writing, are failing because Packer hangs.</p>
<p>Apparently, this was a known issue. And apparently, I was using an older version, 0.7.5. After I updated everything is working wonderfully!!!</p>
<p>And for my thanks, here is an updated PowerShell script for provisioning my dotnet stuff.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-powershell" data-lang="powershell">
<span class="nv">$source</span> <span class="p">=</span> <span class="s2">&#34;http://download.microsoft.com/download/1/6/7/167F0D79-9317-48AE-AEDB-17120579F8E2/NDP451-KB2858728-x86-x64-AllOS-ENU.exe&#34;</span>
<span class="nv">$destination</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\dotnet.exe&#34;</span>
<span class="nb">Write-Host</span> <span class="s1">&#39;Starting to download dotnet file.&#39;</span>
<span class="k">try</span> <span class="p">{</span>
  <span class="p">(</span><span class="nb">New-Object</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">WebClient</span><span class="p">).</span><span class="n">DownloadFile</span><span class="p">(</span><span class="nv">$source</span><span class="p">,</span> <span class="nv">$destination</span><span class="p">)</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[Exception]</span> <span class="p">{</span>
  <span class="nb">Write-Host</span> <span class="s2">&#34;Exception during download. Probable cause could be that the directory or the file didn&#39;t exist.&#34;</span>
  <span class="nb">Write-Host</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
<span class="p">}</span>
<span class="nb">Write-Host</span> <span class="s1">&#39;Download done. Checking if file exists.&#39;</span>
<span class="k">if</span> <span class="p">(!(</span><span class="nb">Test-Path</span> <span class="nv">$destination</span><span class="p">))</span> <span class="p">{</span>
  <span class="nb">Write-Host</span> <span class="s1">&#39;Downloading dotnet Failed!&#39;</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
  <span class="nb">Write-Host</span> <span class="s1">&#39;Download successful.&#39;</span>
<span class="p">}</span>

<span class="nb">Write-Host</span> <span class="s1">&#39;Starting install process.&#39;</span>
<span class="k">try</span> <span class="p">{</span>
  <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="nv">$source</span> <span class="n">-ArgumentList</span> <span class="s2">&#34;/q /norestart&#34;</span> <span class="n">-Wait</span> <span class="n">-PassThru</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[Exception]</span> <span class="p">{</span>
  <span class="nb">Write-Host</span> <span class="s1">&#39;Exception during install process.&#39;</span>
  <span class="nb">Write-Host</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
<span class="p">}</span>

<span class="nb">Write-Host</span> <span class="s1">&#39;All done. Goodbye.&#39;</span>
</code></pre></td></tr></table>
</div>
</div><p>Thanks for reading!</p>
<p>Gergely.</p>
]]></content>
    </item>
    
    <item>
      <title>Powershell can also be nice -Or Installing Java silently and waiting</title>
      <link>https://skarlso.github.io/2015/06/30/powershell-can-also-be-nice-or-installing-java-silently-and-waiting/</link>
      <pubDate>Tue, 30 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/06/30/powershell-can-also-be-nice-or-installing-java-silently-and-waiting/</guid>
      <description>Hello folks.
Today, I would like to show you a small script. It installs Java JDK, both version, x86 and 64 bit, silently, and wait for that process to finish.
The wait is necessary because /s on a java install has the nasty habit of running in the background. If you are using a .bat file, you shouldn&amp;rsquo;t, than you would use something like: start /w jdk-setup.exe /s. This gets it done, but is ugly.</description>
      <content type="html"><![CDATA[<p>Hello folks.</p>
<p>Today, I would like to show you a small script. It installs Java JDK, both version, x86 and 64 bit, silently, and wait for that process to finish.</p>
<p>The wait is necessary because /s on a java install has the nasty habit of running in the background. If you are using a .bat file, <strong>you shouldn&rsquo;t</strong>, than you would use something like: start /w jdk-setup.exe /s. This gets it done, but is ugly. Also, if you are using Packer and PowerShell provisioning, you might want to set up some environment variables as well for the next script. And you want that property to be available and you don&rsquo;t want to mess it up with setting a path into a file and then re-setting your path on the begin of your other script. Or pass it around with Packer. No. Use a proper PowerShell script. Learn it. It&rsquo;s not that hard. Be a professional. Don&rsquo;t hack something together for the next person to suffer at.</p>
<p>Here is how I did it. Hope it helps somebody out.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-powershell" data-lang="powershell">
<span class="nv">$JDK_VER</span><span class="p">=</span><span class="s2">&#34;7u75&#34;</span>
<span class="nv">$JDK_FULL_VER</span><span class="p">=</span><span class="s2">&#34;7u75-b13&#34;</span>
<span class="nv">$JDK_PATH</span><span class="p">=</span><span class="s2">&#34;1.7.0_75&#34;</span>
<span class="nv">$source86</span> <span class="p">=</span> <span class="s2">&#34;http://download.oracle.com/otn-pub/java/jdk/$JDK_FULL_VER/jdk-$JDK_VER-windows-i586.exe&#34;</span>
<span class="nv">$source64</span> <span class="p">=</span> <span class="s2">&#34;http://download.oracle.com/otn-pub/java/jdk/$JDK_FULL_VER/jdk-$JDK_VER-windows-x64.exe&#34;</span>
<span class="nv">$destination86</span> <span class="p">=</span> <span class="s2">&#34;C:\vagrant\$JDK_VER-x86.exe&#34;</span>
<span class="nv">$destination64</span> <span class="p">=</span> <span class="s2">&#34;C:\vagrant\$JDK_VER-x64.exe&#34;</span>
<span class="nv">$client</span> <span class="p">=</span> <span class="nb">new-object</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">WebClient</span>
<span class="nv">$cookie</span> <span class="p">=</span> <span class="s2">&#34;oraclelicense=accept-securebackup-cookie&#34;</span>
<span class="nv">$client</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="no">[System.Net.HttpRequestHeader]</span><span class="p">::</span><span class="n">Cookie</span><span class="p">,</span> <span class="nv">$cookie</span><span class="p">)</span>

<span class="nb">Write-Host</span> <span class="s1">&#39;Checking if Java is already installed&#39;</span>
<span class="k">if</span> <span class="p">((</span><span class="nb">Test-Path</span> <span class="s2">&#34;c:\Program Files (x86)\Java&#34;</span><span class="p">)</span> <span class="o">-Or</span> <span class="p">(</span><span class="nb">Test-Path</span> <span class="s2">&#34;c:\Program Files\Java&#34;</span><span class="p">))</span> <span class="p">{</span>
    <span class="nb">Write-Host</span> <span class="s1">&#39;No need to Install Java&#39;</span>
    <span class="n">Exit</span>
<span class="p">}</span>

<span class="nb">Write-Host</span> <span class="s1">&#39;Downloading x86 to $destination86&#39;</span>

<span class="nv">$client</span><span class="p">.</span><span class="n">downloadFile</span><span class="p">(</span><span class="nv">$source86</span><span class="p">,</span> <span class="nv">$destination86</span><span class="p">)</span>
<span class="k">if</span> <span class="p">(!(</span><span class="nb">Test-Path</span> <span class="nv">$destination86</span><span class="p">))</span> <span class="p">{</span>
    <span class="nb">Write-Host</span> <span class="s2">&#34;Downloading $destination86 failed&#34;</span>
    <span class="n">Exit</span>
<span class="p">}</span>
<span class="nb">Write-Host</span> <span class="s1">&#39;Downloading x64 to $destination64&#39;</span>

<span class="nv">$client</span><span class="p">.</span><span class="n">downloadFile</span><span class="p">(</span><span class="nv">$source64</span><span class="p">,</span> <span class="nv">$destination64</span><span class="p">)</span>
<span class="k">if</span> <span class="p">(!(</span><span class="nb">Test-Path</span> <span class="nv">$destination64</span><span class="p">))</span> <span class="p">{</span>
    <span class="nb">Write-Host</span> <span class="s2">&#34;Downloading $destination64 failed&#34;</span>
    <span class="n">Exit</span>
<span class="p">}</span>


<span class="k">try</span> <span class="p">{</span>
    <span class="nb">Write-Host</span> <span class="s1">&#39;Installing JDK-x64&#39;</span>
    <span class="nv">$proc1</span> <span class="p">=</span> <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="s2">&#34;$destination64&#34;</span> <span class="n">-ArgumentList</span> <span class="s2">&#34;/s REBOOT=ReallySuppress&#34;</span> <span class="n">-Wait</span> <span class="n">-PassThru</span>
    <span class="nv">$proc1</span><span class="p">.</span><span class="n">waitForExit</span><span class="p">()</span>
    <span class="nb">Write-Host</span> <span class="s1">&#39;Installation Done.&#39;</span>

    <span class="nb">Write-Host</span> <span class="s1">&#39;Installing JDK-x86&#39;</span>
    <span class="nv">$proc2</span> <span class="p">=</span> <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="s2">&#34;$destination86&#34;</span> <span class="n">-ArgumentList</span> <span class="s2">&#34;/s REBOOT=ReallySuppress&#34;</span> <span class="n">-Wait</span> <span class="n">-PassThru</span>
    <span class="nv">$proc2</span><span class="p">.</span><span class="n">waitForExit</span><span class="p">()</span>
    <span class="nb">Write-Host</span> <span class="s1">&#39;Installtion Done.&#39;</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[exception]</span> <span class="p">{</span>
    <span class="nb">write-host</span> <span class="s1">&#39;$_ is&#39;</span> <span class="nv">$_</span>
    <span class="nb">write-host</span> <span class="s1">&#39;$_.GetType().FullName is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">GetType</span><span class="p">().</span><span class="n">FullName</span>
    <span class="nb">write-host</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
    <span class="nb">write-host</span> <span class="s1">&#39;$_.Exception.GetType().FullName is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span><span class="p">.</span><span class="n">GetType</span><span class="p">().</span><span class="n">FullName</span>
    <span class="nb">write-host</span> <span class="s1">&#39;$_.Exception.Message is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span><span class="p">.</span><span class="n">Message</span>
<span class="p">}</span>

<span class="k">if</span> <span class="p">((</span><span class="nb">Test-Path</span> <span class="s2">&#34;c:\Program Files (x86)\Java&#34;</span><span class="p">)</span> <span class="o">-Or</span> <span class="p">(</span><span class="nb">Test-Path</span> <span class="s2">&#34;c:\Program Files\Java&#34;</span><span class="p">))</span> <span class="p">{</span>
    <span class="nb">Write-Host</span> <span class="s1">&#39;Java installed successfully.&#39;</span>
<span class="p">}</span>
<span class="nb">Write-Host</span> <span class="s1">&#39;Setting up Path variables.&#39;</span>
<span class="no">[System.Environment]</span><span class="p">::</span><span class="n">SetEnvironmentVariable</span><span class="p">(</span><span class="s2">&#34;JAVA_HOME&#34;</span><span class="p">,</span> <span class="s2">&#34;c:\Program Files (x86)\Java\jdk$JDK_PATH&#34;</span><span class="p">,</span> <span class="s2">&#34;Machine&#34;</span><span class="p">)</span>
<span class="no">[System.Environment]</span><span class="p">::</span><span class="n">SetEnvironmentVariable</span><span class="p">(</span><span class="s2">&#34;PATH&#34;</span><span class="p">,</span> <span class="nv">$Env:Path</span> <span class="p">+</span> <span class="s2">&#34;;c:\Program Files (x86)\Java\jdk$JDK_PATH\bin&#34;</span><span class="p">,</span> <span class="s2">&#34;Machine&#34;</span><span class="p">)</span>
<span class="nb">Write-Host</span> <span class="s1">&#39;Done. Goodbye.&#39;</span>
</code></pre></td></tr></table>
</div>
</div><p>Now, there is room for improvement here. Like checking exit code, doing something extra after a failed exit. Throwing an exception, and so on and so forth. But this is a much needed improvement from calling a BAT file.</p>
<p>And you would use this in a Packer JSON file like this..</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json">
<span class="p">{</span>
      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;powershell&#34;</span><span class="p">,</span>
      <span class="nt">&#34;scripts&#34;</span><span class="p">:</span> <span class="p">[</span>
        <span class="s2">&#34;./scripts/jdk_inst.ps1&#34;</span>
      <span class="p">]</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>Easy. And at the end, the System.Environment actually writes out into the registry permanently so no need to pass it around in a file or something ugly like that.</p>
<p>Hope this helps somebody.</p>
<p>Thanks for reading.</p>
<p>Gergely.</p>
]]></content>
    </item>
    
  </channel>
</rss>