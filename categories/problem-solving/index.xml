<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>problem solving on Ramblings of a cloud engineer</title>
    <link>https://skarlso.github.io/categories/problem-solving/</link>
    <description>Recent content in problem solving on Ramblings of a cloud engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 26 Oct 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://skarlso.github.io/categories/problem-solving/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kill a Program on Connecting to a specific WiFi â€“ OSX</title>
      <link>https://skarlso.github.io/2015/10/26/kill-a-program-on-connecting-to-a-specific-wifi-osx/</link>
      <pubDate>Mon, 26 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/26/kill-a-program-on-connecting-to-a-specific-wifi-osx/</guid>
      <description><![CDATA[<p>Hi folks.</p>
<p>If you have the tendency, like me, to forget that you are on the corporate VPN, or leave a certain software open when you bring your laptop to work, this might be helpful to you too.</p>
<p>It&rsquo;s a small script which kills a program when you change your Wifi network.</p>
<p>Script:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">
<span class="c1">#!/bin/bash</span>

<span class="k">function</span> log <span class="o">{</span>
    <span class="nv">directory</span><span class="o">=</span><span class="s2">&#34;/Users/&lt;username&gt;/wifi_detect&#34;</span>
    <span class="nv">log_dir_exists</span><span class="o">=</span><span class="nb">true</span>
    <span class="k">if</span> <span class="o">[</span> ! -d <span class="nv">$directory</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
        <span class="nb">echo</span> <span class="s2">&#34;Attempting to create =&gt; </span><span class="nv">$directory</span><span class="s2">&#34;</span>
        mkdir -p <span class="nv">$directory</span>
        <span class="k">if</span> <span class="o">[</span> ! -d <span class="nv">$directory</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
            <span class="nb">echo</span> <span class="s2">&#34;Could not create directory. Continue to log to echo.&#34;</span>
            <span class="nv">log_dir_exists</span><span class="o">=</span><span class="nb">false</span>
        <span class="k">fi</span>
    <span class="k">fi</span>
    <span class="k">if</span> <span class="nv">$log_dir_exists</span> <span class="p">;</span> <span class="k">then</span>
        <span class="nb">echo</span> <span class="s2">&#34;</span><span class="k">$(</span>date<span class="k">)</span><span class="s2">:</span><span class="nv">$1</span><span class="s2">&#34;</span> &gt;&gt; <span class="s2">&#34;</span><span class="nv">$directory</span><span class="s2">/log.txt&#34;</span>
    <span class="k">else</span>
        <span class="nb">echo</span> <span class="s2">&#34;</span><span class="k">$(</span>date<span class="k">)</span><span class="s2">:</span><span class="nv">$1</span><span class="s2">&#34;</span>
    <span class="k">fi</span>
<span class="o">}</span>

<span class="k">function</span> check_program <span class="o">{</span>
    <span class="nv">to_kill</span><span class="o">=</span><span class="s2">&#34;[</span><span class="si">${</span><span class="nv">1</span><span class="p">::</span><span class="nv">1</span><span class="si">}</span><span class="s2">]</span><span class="si">${</span><span class="nv">1</span><span class="p">:</span><span class="nv">1</span><span class="si">}</span><span class="s2">&#34;</span>
    log <span class="s2">&#34;Checking if </span><span class="nv">$to_kill</span><span class="s2"> really quit.&#34;</span>
    <span class="nv">ps</span><span class="o">=</span><span class="k">$(</span>ps aux <span class="p">|</span>grep <span class="s2">&#34;</span><span class="nv">$to_kill</span><span class="s2">&#34;</span><span class="k">)</span>
    log <span class="s2">&#34;ps =&gt; </span><span class="nv">$ps</span><span class="s2">&#34;</span>
    <span class="k">if</span> <span class="o">[</span> -z <span class="s2">&#34;</span><span class="nv">$ps</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
	<span class="c1"># 0 - True</span>
        <span class="k">return</span>
    <span class="k">else</span>
	<span class="c1"># 1 - False</span>
        <span class="k">return</span> <span class="m">1</span>
    <span class="k">fi</span>
<span class="o">}</span>

<span class="k">function</span> kill_program <span class="o">{</span>
    log <span class="s2">&#34;Killing program&#34;</span>
    <span class="sb">`</span>pkill -f <span class="s2">&#34;</span><span class="nv">$1</span><span class="s2">&#34;</span><span class="sb">`</span>
    sleep <span class="m">1</span>
    <span class="k">if</span> ! check_program <span class="nv">$1</span> <span class="p">;</span> <span class="k">then</span>
	log <span class="s2">&#34;</span><span class="nv">$1</span><span class="s2"> Did not quit!&#34;</span>
    <span class="k">else</span>
	log <span class="s2">&#34;</span><span class="nv">$1</span><span class="s2"> quit successfully&#34;</span>
    <span class="k">fi</span>
<span class="o">}</span>

<span class="nv">wifi_name</span><span class="o">=</span><span class="k">$(</span>networksetup -getairportnetwork en0 <span class="p">|</span>awk -F<span class="s2">&#34;: &#34;</span> <span class="s1">&#39;{print $2}&#39;</span><span class="k">)</span>
log <span class="s2">&#34;Wifi name: </span><span class="nv">$wifi_name</span><span class="s2">&#34;</span>
<span class="k">if</span> <span class="o">[</span> <span class="s2">&#34;</span><span class="nv">$wifi_name</span><span class="s2">&#34;</span> <span class="o">=</span> <span class="s2">&#34;&lt;wifi_name&gt;&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
    log <span class="s2">&#34;On corporate network... Killing Program&#34;</span>
    kill_program <span class="s2">&#34;&lt;programname&gt;&#34;</span>
<span class="k">elif</span> <span class="o">[</span> <span class="s2">&#34;</span><span class="nv">$wifi_name</span><span class="s2">&#34;</span> <span class="o">=</span> <span class="s2">&#34;&lt;home_wifi_name&gt;&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
    <span class="c1"># Kill &lt;program&gt; if enabled and if on &lt;home_wifi&gt; and if Tunnelblick is running.</span>
    log <span class="s2">&#34;Not on corporate network... Killing &lt;program&gt; if Tunnelblick is active.&#34;</span>
    <span class="k">if</span> ! check_program <span class="s2">&#34;Tunnelblick&#34;</span> <span class="p">;</span> <span class="k">then</span>
	log <span class="s2">&#34;Tunnelblick is active. Killing &lt;program&gt;&#34;</span>
	kill_program <span class="s2">&#34;&lt;program&gt;&#34;</span>
    <span class="k">else</span>
	log <span class="s2">&#34;All good... Happy coding.&#34;</span>
    <span class="k">fi</span>
<span class="k">else</span>
    log <span class="s2">&#34;No known Network...&#34;</span>
<span class="k">fi</span>
</code></pre></td></tr></table>
</div>
</div><p>Now, the trick is, on OSX to only trigger this when your network changes. For this, you can have a &lsquo;launchd&rsquo; daemon, which is configured to watch three files which relate to a network being changed.</p>
<p>The script sits under your ~/Library/LaunchAgents folder. Create something like, com.username.checknetwork.plist.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml">
<span class="cp">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;</span>
<span class="cp">&lt;!DOCTYPE plist PUBLIC &#34;-//Apple Computer//DTD PLIST 1.0//EN&#34; \
</span><span class="cp"> &#34;http://www.apple.com/DTDs/PropertyList-1.0.dtd&#34;&gt;</span>
<span class="nt">&lt;plist</span> <span class="na">version=</span><span class="s">&#34;1.0&#34;</span><span class="nt">&gt;</span>
<span class="nt">&lt;dict&gt;</span>
  <span class="nt">&lt;key&gt;</span>Label<span class="nt">&lt;/key&gt;</span>
  <span class="nt">&lt;string&gt;</span>ifup.ddns<span class="nt">&lt;/string&gt;</span>

  <span class="nt">&lt;key&gt;</span>LowPriorityIO<span class="nt">&lt;/key&gt;</span>
  <span class="nt">&lt;true/&gt;</span>

  <span class="nt">&lt;key&gt;</span>ProgramArguments<span class="nt">&lt;/key&gt;</span>
  <span class="nt">&lt;array&gt;</span>
    <span class="nt">&lt;string&gt;</span>/Users/username/scripts/ddns-update.sh<span class="nt">&lt;/string&gt;</span>
  <span class="nt">&lt;/array&gt;</span>

  <span class="nt">&lt;key&gt;</span>WatchPaths<span class="nt">&lt;/key&gt;</span>
  <span class="nt">&lt;array&gt;</span>
    <span class="nt">&lt;string&gt;</span>/etc/resolv.conf<span class="nt">&lt;/string&gt;</span>
    <span class="nt">&lt;string&gt;</span>/Library/Preferences/SystemConfiguration/NetworkInterfaces.plist<span class="nt">&lt;/string&gt;</span>
    <span class="nt">&lt;string&gt;</span>/Library/Preferences/SystemConfiguration/com.apple.airport.preferences.plist<span class="nt">&lt;/string&gt;</span>
  <span class="nt">&lt;/array&gt;</span>

  <span class="nt">&lt;key&gt;</span>RunAtLoad<span class="nt">&lt;/key&gt;</span>
  <span class="nt">&lt;true/&gt;</span>
<span class="nt">&lt;/dict&gt;</span>
<span class="nt">&lt;/plist&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>Now, when you change your network, to whatever your corporate network is, you&rsquo;ll kill Sublime.</p>
<p>Hope this helps somebody.</p>
<p>Cheers,</p>
<p>Gergely.</p>
]]></description>
    </item>
    
    <item>
      <title>Circular buffer in Go</title>
      <link>https://skarlso.github.io/2015/10/15/circular-buffer-in-go/</link>
      <pubDate>Thu, 15 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/15/circular-buffer-in-go/</guid>
      <description><![CDATA[<p>I&rsquo;m proud of this one too. No peaking. I like how go let&rsquo;s you do this kind of stuff in a very nice way.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-go" data-lang="go"><span class="kn">package</span> <span class="nx">circular</span>

<span class="kn">import</span> <span class="s">&#34;fmt&#34;</span>

<span class="c1">//TestVersion testVersion
</span><span class="c1"></span><span class="kd">const</span> <span class="nx">TestVersion</span> <span class="p">=</span> <span class="mi">1</span>

<span class="c1">//Buffer buffer type
</span><span class="c1"></span><span class="kd">type</span> <span class="nx">Buffer</span> <span class="kd">struct</span> <span class="p">{</span>
	<span class="nx">buffer</span> <span class="p">[]</span><span class="kt">byte</span>
	<span class="nx">full</span>   <span class="kt">int</span>
	<span class="nx">size</span>   <span class="kt">int</span>
	<span class="nx">s</span><span class="p">,</span> <span class="nx">e</span>   <span class="kt">int</span>
<span class="p">}</span>

<span class="c1">//NewBuffer creates a new Buffer
</span><span class="c1"></span><span class="kd">func</span> <span class="nf">NewBuffer</span><span class="p">(</span><span class="nx">size</span> <span class="kt">int</span><span class="p">)</span> <span class="o">*</span><span class="nx">Buffer</span> <span class="p">{</span>
	<span class="k">return</span> <span class="o">&amp;</span><span class="nx">Buffer</span><span class="p">{</span><span class="nx">buffer</span><span class="p">:</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">byte</span><span class="p">,</span> <span class="nx">size</span><span class="p">),</span> <span class="nx">s</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">e</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">size</span><span class="p">:</span> <span class="nx">size</span><span class="p">,</span> <span class="nx">full</span><span class="p">:</span> <span class="mi">0</span><span class="p">}</span>
<span class="p">}</span>

<span class="c1">//ReadByte reads a byte from b Buffer
</span><span class="c1"></span><span class="kd">func</span> <span class="p">(</span><span class="nx">b</span> <span class="o">*</span><span class="nx">Buffer</span><span class="p">)</span> <span class="nf">ReadByte</span><span class="p">()</span> <span class="p">(</span><span class="kt">byte</span><span class="p">,</span> <span class="kt">error</span><span class="p">)</span> <span class="p">{</span>
	<span class="k">if</span> <span class="nx">b</span><span class="p">.</span><span class="nx">full</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
		<span class="k">return</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">fmt</span><span class="p">.</span><span class="nf">Errorf</span><span class="p">(</span><span class="s">&#34;Danger Will Robinson: %s&#34;</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span>
	<span class="p">}</span>
	<span class="nx">readByte</span> <span class="o">:=</span> <span class="nx">b</span><span class="p">.</span><span class="nx">buffer</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">s</span><span class="p">]</span>
	<span class="nx">b</span><span class="p">.</span><span class="nx">s</span> <span class="p">=</span> <span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">s</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="nx">b</span><span class="p">.</span><span class="nx">size</span>
	<span class="nx">b</span><span class="p">.</span><span class="nx">full</span><span class="o">--</span>
	<span class="k">return</span> <span class="nx">readByte</span><span class="p">,</span> <span class="kc">nil</span>
<span class="p">}</span>

<span class="c1">//WriteByte writes c byte to the buffer
</span><span class="c1"></span><span class="kd">func</span> <span class="p">(</span><span class="nx">b</span> <span class="o">*</span><span class="nx">Buffer</span><span class="p">)</span> <span class="nf">WriteByte</span><span class="p">(</span><span class="nx">c</span> <span class="kt">byte</span><span class="p">)</span> <span class="kt">error</span> <span class="p">{</span>
	<span class="k">if</span> <span class="nx">b</span><span class="p">.</span><span class="nx">full</span><span class="o">+</span><span class="mi">1</span> <span class="p">&gt;</span> <span class="nx">b</span><span class="p">.</span><span class="nx">size</span> <span class="p">{</span>
		<span class="k">return</span> <span class="nx">fmt</span><span class="p">.</span><span class="nf">Errorf</span><span class="p">(</span><span class="s">&#34;Danger Will Robinson: %s&#34;</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span>
	<span class="p">}</span>
	<span class="nx">b</span><span class="p">.</span><span class="nx">buffer</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">e</span><span class="p">]</span> <span class="p">=</span> <span class="nx">c</span>
	<span class="nx">b</span><span class="p">.</span><span class="nx">e</span> <span class="p">=</span> <span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">e</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="nx">b</span><span class="p">.</span><span class="nx">size</span>
	<span class="nx">b</span><span class="p">.</span><span class="nx">full</span><span class="o">++</span>
	<span class="k">return</span> <span class="kc">nil</span>
<span class="p">}</span>

<span class="c1">//Overwrite overwrites the oldest byte in Buffer
</span><span class="c1"></span><span class="kd">func</span> <span class="p">(</span><span class="nx">b</span> <span class="o">*</span><span class="nx">Buffer</span><span class="p">)</span> <span class="nf">Overwrite</span><span class="p">(</span><span class="nx">c</span> <span class="kt">byte</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">b</span><span class="p">.</span><span class="nx">buffer</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">s</span><span class="p">]</span> <span class="p">=</span> <span class="nx">c</span>
	<span class="nx">b</span><span class="p">.</span><span class="nx">s</span> <span class="p">=</span> <span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">s</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="nx">b</span><span class="p">.</span><span class="nx">size</span>
<span class="p">}</span>

<span class="c1">//Reset resets the buffer
</span><span class="c1"></span><span class="kd">func</span> <span class="p">(</span><span class="nx">b</span> <span class="o">*</span><span class="nx">Buffer</span><span class="p">)</span> <span class="nf">Reset</span><span class="p">()</span> <span class="p">{</span>
	<span class="o">*</span><span class="nx">b</span> <span class="p">=</span> <span class="o">*</span><span class="nf">NewBuffer</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">size</span><span class="p">)</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="p">(</span><span class="nx">b</span> <span class="o">*</span><span class="nx">Buffer</span><span class="p">)</span> <span class="nf">String</span><span class="p">()</span> <span class="kt">string</span> <span class="p">{</span>
	<span class="k">return</span> <span class="nx">fmt</span><span class="p">.</span><span class="nf">Sprintf</span><span class="p">(</span><span class="s">&#34;Buffer: %d, %d, %d, %d&#34;</span><span class="p">,</span> <span class="nx">b</span><span class="p">.</span><span class="nx">buffer</span><span class="p">,</span> <span class="nx">b</span><span class="p">.</span><span class="nx">s</span><span class="p">,</span> <span class="nx">b</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span> <span class="nx">b</span><span class="p">.</span><span class="nx">size</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
    </item>
    
    <item>
      <title>DataMunger Kata with Go</title>
      <link>https://skarlso.github.io/2015/10/04/datamunger-kata-with-go/</link>
      <pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/04/datamunger-kata-with-go/</guid>
      <description><![CDATA[<p>Quickly wrote up the Data Munger code kata in Go.</p>
<p>Next time, I want better abstractions. And a way to select columns based on their header data. For now, this is not bad.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-go" data-lang="go">
<span class="kn">package</span> <span class="nx">main</span>

<span class="kn">import</span> <span class="p">(</span>
	<span class="s">&#34;bufio&#34;</span>
	<span class="s">&#34;fmt&#34;</span>
	<span class="s">&#34;log&#34;</span>
	<span class="s">&#34;math&#34;</span>
	<span class="s">&#34;os&#34;</span>
	<span class="s">&#34;regexp&#34;</span>
	<span class="s">&#34;strconv&#34;</span>
	<span class="s">&#34;strings&#34;</span>
<span class="p">)</span>

<span class="c1">//Data which is Data
</span><span class="c1"></span><span class="kd">type</span> <span class="nx">Data</span> <span class="kd">struct</span> <span class="p">{</span>
	<span class="nx">columnName</span> <span class="kt">string</span>
	<span class="nx">compareOne</span> <span class="kt">float64</span>
	<span class="nx">compareTwo</span> <span class="kt">float64</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="c1">// datas := []Data{WeatherData{}, FootballData{}}
</span><span class="c1"></span>	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;Minimum weather data:&#34;</span><span class="p">,</span> <span class="nf">GetDataMinimumDiff</span><span class="p">(</span><span class="s">&#34;weather.dat&#34;</span><span class="p">,</span> <span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;Minimum football data:&#34;</span><span class="p">,</span> <span class="nf">GetDataMinimumDiff</span><span class="p">(</span><span class="s">&#34;football.dat&#34;</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">))</span>
<span class="p">}</span>

<span class="c1">//GetDataMinimumDiff gathers data from file to fill up Columns.
</span><span class="c1"></span><span class="kd">func</span> <span class="nf">GetDataMinimumDiff</span><span class="p">(</span><span class="nx">filename</span> <span class="kt">string</span><span class="p">,</span> <span class="nx">nameColumn</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">compareColOne</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">compareColTwo</span> <span class="kt">int</span><span class="p">)</span> <span class="nx">Data</span> <span class="p">{</span>
	<span class="nx">data</span> <span class="o">:=</span> <span class="nx">Data</span><span class="p">{}</span>
	<span class="nx">minimum</span> <span class="o">:=</span> <span class="nx">math</span><span class="p">.</span><span class="nx">MaxFloat64</span>
	<span class="nx">readLines</span> <span class="o">:=</span> <span class="nf">ReadFile</span><span class="p">(</span><span class="nx">filename</span><span class="p">)</span>
	<span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">value</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">readLines</span> <span class="p">{</span>
		<span class="nx">valueArrays</span> <span class="o">:=</span> <span class="nx">strings</span><span class="p">.</span><span class="nf">Split</span><span class="p">(</span><span class="nx">value</span><span class="p">,</span> <span class="s">&#34;,&#34;</span><span class="p">)</span>
		<span class="nx">name</span> <span class="o">:=</span> <span class="nx">valueArrays</span><span class="p">[</span><span class="nx">nameColumn</span><span class="p">]</span>
		<span class="nx">trimmedFirst</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">strconv</span><span class="p">.</span><span class="nf">ParseFloat</span><span class="p">(</span><span class="nx">valueArrays</span><span class="p">[</span><span class="nx">compareColOne</span><span class="p">],</span> <span class="mi">64</span><span class="p">)</span>
		<span class="nx">trimmedSecond</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">strconv</span><span class="p">.</span><span class="nf">ParseFloat</span><span class="p">(</span><span class="nx">valueArrays</span><span class="p">[</span><span class="nx">compareColTwo</span><span class="p">],</span> <span class="mi">64</span><span class="p">)</span>
		<span class="nx">diff</span> <span class="o">:=</span> <span class="nx">trimmedFirst</span> <span class="o">-</span> <span class="nx">trimmedSecond</span>
		<span class="nx">diff</span> <span class="p">=</span> <span class="nx">math</span><span class="p">.</span><span class="nf">Abs</span><span class="p">(</span><span class="nx">diff</span><span class="p">)</span>
		<span class="k">if</span> <span class="nx">diff</span> <span class="o">&lt;=</span> <span class="nx">minimum</span> <span class="p">{</span>
			<span class="nx">minimum</span> <span class="p">=</span> <span class="nx">diff</span>
			<span class="nx">data</span><span class="p">.</span><span class="nx">columnName</span> <span class="p">=</span> <span class="nx">name</span>
			<span class="nx">data</span><span class="p">.</span><span class="nx">compareOne</span> <span class="p">=</span> <span class="nx">trimmedFirst</span>
			<span class="nx">data</span><span class="p">.</span><span class="nx">compareTwo</span> <span class="p">=</span> <span class="nx">trimmedSecond</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="nx">data</span>
<span class="p">}</span>

<span class="c1">//ReadFile reads lines from a file and gives back a string array which contains the lines.
</span><span class="c1"></span><span class="kd">func</span> <span class="nf">ReadFile</span><span class="p">(</span><span class="nx">fileName</span> <span class="kt">string</span><span class="p">)</span> <span class="p">(</span><span class="nx">fileLines</span> <span class="p">[]</span><span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">file</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">os</span><span class="p">.</span><span class="nf">Open</span><span class="p">(</span><span class="nx">fileName</span><span class="p">)</span>
	<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
		<span class="nx">log</span><span class="p">.</span><span class="nf">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
	<span class="p">}</span>
	<span class="k">defer</span> <span class="nx">file</span><span class="p">.</span><span class="nf">Close</span><span class="p">()</span>

	<span class="nx">scanner</span> <span class="o">:=</span> <span class="nx">bufio</span><span class="p">.</span><span class="nf">NewScanner</span><span class="p">(</span><span class="nx">file</span><span class="p">)</span>
	<span class="c1">//Skipping the first line which is the header.
</span><span class="c1"></span>	<span class="nx">scanner</span><span class="p">.</span><span class="nf">Scan</span><span class="p">()</span>
	<span class="k">for</span> <span class="nx">scanner</span><span class="p">.</span><span class="nf">Scan</span><span class="p">()</span> <span class="p">{</span>
		<span class="nx">line</span> <span class="o">:=</span> <span class="nx">scanner</span><span class="p">.</span><span class="nf">Text</span><span class="p">()</span>
		<span class="nx">re</span> <span class="o">:=</span> <span class="nx">regexp</span><span class="p">.</span><span class="nf">MustCompile</span><span class="p">(</span><span class="s">&#34;\\w+&#34;</span><span class="p">)</span>
		<span class="nx">lines</span> <span class="o">:=</span> <span class="nx">re</span><span class="p">.</span><span class="nf">FindAllString</span><span class="p">(</span><span class="nx">line</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
		<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="nx">lines</span><span class="p">)</span> <span class="p">&gt;</span>  <span class="p">{</span>
			<span class="nx">fileLines</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">fileLines</span><span class="p">,</span> <span class="nx">strings</span><span class="p">.</span><span class="nf">Join</span><span class="p">(</span><span class="nx">lines</span><span class="p">,</span> <span class="s">&#34;,&#34;</span><span class="p">))</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">scanner</span><span class="p">.</span><span class="nf">Err</span><span class="p">();</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
		<span class="nx">log</span><span class="p">.</span><span class="nf">Fatal</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="k">return</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
    </item>
    
    <item>
      <title>How to Aggregate Tests with Jenkins with Aggregate Plugin on non-relating jobs</title>
      <link>https://skarlso.github.io/2015/10/02/how-to-aggregate-tests-with-jenkins-with-aggregate-plugin-on-non-relating-jobs/</link>
      <pubDate>Fri, 02 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/02/how-to-aggregate-tests-with-jenkins-with-aggregate-plugin-on-non-relating-jobs/</guid>
      <description><![CDATA[<p>Hello folks.</p>
<p>Today, I would like to talk about something I came in contact with, and was hard to find a proper answer / solution for it.</p>
<p>So I&rsquo;m writing this down to document my findings. Like the title says, this is about aggregating test result with Jenkins, using the plug-in provided. If you, like me, have a pipeline structure which do not work on the same artifact, but do have a upstream-downstream relationship, you will have a hard time configuring and making Aggregation work. So here is how, I fixed the issue.</p>
<h1 id="connection">Connection</h1>
<p>In order for the aggregation to work, there needs to be an <strong>artifact connection</strong> between the upstream and downstream projects. And that is the key. But if you don&rsquo;t have that, well, let&rsquo;s create one. I have a parent job configured like this one. =&gt;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml">
<span class="cp">&lt;?xml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;?&gt;</span>
<span class="nt">&lt;project&gt;</span>
  <span class="nt">&lt;actions/&gt;</span>
  <span class="nt">&lt;description&gt;&lt;/description&gt;</span>
  <span class="nt">&lt;keepDependencies&gt;</span>false<span class="nt">&lt;/keepDependencies&gt;</span>
  <span class="nt">&lt;properties/&gt;</span>
  <span class="nt">&lt;scm</span> <span class="na">class=</span><span class="s">&#34;hudson.scm.NullSCM&#34;</span><span class="nt">/&gt;</span>
  <span class="nt">&lt;canRoam&gt;</span>true<span class="nt">&lt;/canRoam&gt;</span>
  <span class="nt">&lt;disabled&gt;</span>false<span class="nt">&lt;/disabled&gt;</span>
  <span class="nt">&lt;blockBuildWhenDownstreamBuilding&gt;</span>false<span class="nt">&lt;/blockBuildWhenDownstreamBuilding&gt;</span>
  <span class="nt">&lt;blockBuildWhenUpstreamBuilding&gt;</span>false<span class="nt">&lt;/blockBuildWhenUpstreamBuilding&gt;</span>
  <span class="nt">&lt;triggers/&gt;</span>
  <span class="nt">&lt;concurrentBuild&gt;</span>false<span class="nt">&lt;/concurrentBuild&gt;</span>
  <span class="nt">&lt;builders/&gt;</span>
  <span class="nt">&lt;publishers&gt;</span>
    <span class="nt">&lt;hudson.tasks.test.AggregatedTestResultPublisher</span> <span class="na">plugin=</span><span class="s">&#34;junit@1.9&#34;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;includeFailedBuilds&gt;</span>false<span class="nt">&lt;/includeFailedBuilds&gt;</span>
    <span class="nt">&lt;/hudson.tasks.test.AggregatedTestResultPublisher&gt;</span>
    <span class="nt">&lt;hudson.tasks.BuildTrigger&gt;</span>
      <span class="nt">&lt;childProjects&gt;</span>ChildJob<span class="nt">&lt;/childProjects&gt;</span>
      <span class="nt">&lt;threshold&gt;</span>
        <span class="nt">&lt;name&gt;</span>SUCCESS<span class="nt">&lt;/name&gt;</span>
        <span class="nt">&lt;ordinal&gt;&lt;/ordinal&gt;</span>
        <span class="nt">&lt;color&gt;</span>BLUE<span class="nt">&lt;/color&gt;</span>
        <span class="nt">&lt;completeBuild&gt;</span>true<span class="nt">&lt;/completeBuild&gt;</span>
      <span class="nt">&lt;/threshold&gt;</span>
    <span class="nt">&lt;/hudson.tasks.BuildTrigger&gt;</span>
  <span class="nt">&lt;/publishers&gt;</span>
  <span class="nt">&lt;buildWrappers/&gt;</span>
<span class="nt">&lt;/project&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>As you can see, it&rsquo;s pretty basic. It isn&rsquo;t much. It&rsquo;s supposed to be a trigger job for downstream projects. You could have this one at anything. Maybe scheduled, or have some kind of gathering here of some results, and so on and so forth. The end part of the configuration is the interesting bit.</p>
<p>Aggregation is setup, but it won&rsquo;t work, because despite there being an upstream/downstream relationship, there also needs to be an artifact connection which uses <strong>fingerprinting</strong>. Fingerprinting for Jenkins is needed in oder to make the physical connection between the jobs via hashes. This is what you will get if that is not setup:</p>
<p>But if there is no artifact between them, what do you do? You create one.</p>
<h1 id="the-artifact-which-binds-us">The Artifact which Binds Us</h1>
<p>Adding a simple <strong>timestamp file</strong> is enough to make a connection. So let&rsquo;s do that. This is how it will look like =&gt;</p>
<p>The important bits about this picture are the small echo which simply creates a file which will contain some time stamp data, and after that the archive artifact, which also fingerprints that file, marking it with a hash which identifies this job as using that particular artifact.</p>
<p>Now, the next step is to create the connection. For that, you need the artifact copy plugin =&gt; <a href="https://wiki.jenkins-ci.org/display/JENKINS/Copy+Artifact+Plugin" target="_blank">Copy Artifact Plugin</a>.</p>
<p>With this, we create the childs configuration like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml">
<span class="cp">&lt;?xml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;?&gt;</span>
<span class="nt">&lt;project&gt;</span>
  <span class="nt">&lt;actions/&gt;</span>
  <span class="nt">&lt;description&gt;&lt;/description&gt;</span>
  <span class="nt">&lt;keepDependencies&gt;</span>false<span class="nt">&lt;/keepDependencies&gt;</span>
  <span class="nt">&lt;properties/&gt;</span>
  <span class="nt">&lt;scm</span> <span class="na">class=</span><span class="s">&#34;hudson.plugins.git.GitSCM&#34;</span> <span class="na">plugin=</span><span class="s">&#34;git@2.4.0&#34;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;configVersion&gt;</span>2<span class="nt">&lt;/configVersion&gt;</span>
    <span class="nt">&lt;userRemoteConfigs&gt;</span>
      <span class="nt">&lt;hudson.plugins.git.UserRemoteConfig&gt;</span>
        <span class="nt">&lt;url&gt;</span>https://github.com/Skarlso/DataMung.git<span class="nt">&lt;/url&gt;</span>
      <span class="nt">&lt;/hudson.plugins.git.UserRemoteConfig&gt;</span>
    <span class="nt">&lt;/userRemoteConfigs&gt;</span>
    <span class="nt">&lt;branches&gt;</span>
      <span class="nt">&lt;hudson.plugins.git.BranchSpec&gt;</span>
        <span class="nt">&lt;name&gt;</span>*/master<span class="nt">&lt;/name&gt;</span>
      <span class="nt">&lt;/hudson.plugins.git.BranchSpec&gt;</span>
    <span class="nt">&lt;/branches&gt;</span>
    <span class="nt">&lt;doGenerateSubmoduleConfigurations&gt;</span>false<span class="nt">&lt;/doGenerateSubmoduleConfigurations&gt;</span>
    <span class="nt">&lt;submoduleCfg</span> <span class="na">class=</span><span class="s">&#34;list&#34;</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;extensions/&gt;</span>
  <span class="nt">&lt;/scm&gt;</span>
  <span class="nt">&lt;canRoam&gt;</span>true<span class="nt">&lt;/canRoam&gt;</span>
  <span class="nt">&lt;disabled&gt;</span>false<span class="nt">&lt;/disabled&gt;</span>
  <span class="nt">&lt;blockBuildWhenDownstreamBuilding&gt;</span>false<span class="nt">&lt;/blockBuildWhenDownstreamBuilding&gt;</span>
  <span class="nt">&lt;blockBuildWhenUpstreamBuilding&gt;</span>false<span class="nt">&lt;/blockBuildWhenUpstreamBuilding&gt;</span>
  <span class="nt">&lt;triggers/&gt;</span>
  <span class="nt">&lt;concurrentBuild&gt;</span>false<span class="nt">&lt;/concurrentBuild&gt;</span>
  <span class="nt">&lt;builders&gt;</span>
    <span class="nt">&lt;hudson.plugins.gradle.Gradle</span> <span class="na">plugin=</span><span class="s">&#34;gradle@1.24&#34;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;description&gt;&lt;/description&gt;</span>
      <span class="nt">&lt;switches&gt;&lt;/switches&gt;</span>
      <span class="nt">&lt;tasks&gt;</span>assemble check<span class="nt">&lt;/tasks&gt;</span>
      <span class="nt">&lt;rootBuildScriptDir&gt;&lt;/rootBuildScriptDir&gt;</span>
      <span class="nt">&lt;buildFile&gt;</span>build.gradle<span class="nt">&lt;/buildFile&gt;</span>
      <span class="nt">&lt;gradleName&gt;</span>(Default)<span class="nt">&lt;/gradleName&gt;</span>
      <span class="nt">&lt;useWrapper&gt;</span>true<span class="nt">&lt;/useWrapper&gt;</span>
      <span class="nt">&lt;makeExecutable&gt;</span>false<span class="nt">&lt;/makeExecutable&gt;</span>
      <span class="nt">&lt;fromRootBuildScriptDir&gt;</span>true<span class="nt">&lt;/fromRootBuildScriptDir&gt;</span>
      <span class="nt">&lt;useWorkspaceAsHome&gt;</span>false<span class="nt">&lt;/useWorkspaceAsHome&gt;</span>
    <span class="nt">&lt;/hudson.plugins.gradle.Gradle&gt;</span>
    <span class="nt">&lt;hudson.plugins.copyartifact.CopyArtifact</span> <span class="na">plugin=</span><span class="s">&#34;copyartifact@1.36&#34;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;project&gt;</span>ParentJob<span class="nt">&lt;/project&gt;</span>
      <span class="nt">&lt;filter&gt;</span>timestamp.data<span class="nt">&lt;/filter&gt;</span>
      <span class="nt">&lt;target&gt;&lt;/target&gt;</span>
      <span class="nt">&lt;excludes&gt;&lt;/excludes&gt;</span>
      <span class="nt">&lt;selector</span> <span class="na">class=</span><span class="s">&#34;hudson.plugins.copyartifact.TriggeredBuildSelector&#34;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;upstreamFilterStrategy&gt;</span>UseGlobalSetting<span class="nt">&lt;/upstreamFilterStrategy&gt;</span>
      <span class="nt">&lt;/selector&gt;</span>
      <span class="nt">&lt;doNotFingerprintArtifacts&gt;</span>false<span class="nt">&lt;/doNotFingerprintArtifacts&gt;</span>
    <span class="nt">&lt;/hudson.plugins.copyartifact.CopyArtifact&gt;</span>
  <span class="nt">&lt;/builders&gt;</span>
  <span class="nt">&lt;publishers&gt;</span>
    <span class="nt">&lt;hudson.tasks.junit.JUnitResultArchiver</span> <span class="na">plugin=</span><span class="s">&#34;junit@1.9&#34;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;testResults&gt;</span>build/test-results/*.xml<span class="nt">&lt;/testResults&gt;</span>
      <span class="nt">&lt;keepLongStdio&gt;</span>false<span class="nt">&lt;/keepLongStdio&gt;</span>
      <span class="nt">&lt;healthScaleFactor&gt;</span>1.0<span class="nt">&lt;/healthScaleFactor&gt;</span>
    <span class="nt">&lt;/hudson.tasks.junit.JUnitResultArchiver&gt;</span>
  <span class="nt">&lt;/publishers&gt;</span>
  <span class="nt">&lt;buildWrappers&gt;</span>
    <span class="nt">&lt;hudson.plugins.ws__cleanup.PreBuildCleanup</span> <span class="na">plugin=</span><span class="s">&#34;ws-cleanup@0.28&#34;</span><span class="nt">&gt;</span>
      <span class="nt">&lt;deleteDirs&gt;</span>false<span class="nt">&lt;/deleteDirs&gt;</span>
      <span class="nt">&lt;cleanupParameter&gt;&lt;/cleanupParameter&gt;</span>
      <span class="nt">&lt;externalDelete&gt;&lt;/externalDelete&gt;</span>
    <span class="nt">&lt;/hudson.plugins.ws__cleanup.PreBuildCleanup&gt;</span>
  <span class="nt">&lt;/buildWrappers&gt;</span>
<span class="nt">&lt;/project&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>Again, the improtant bit is this:</p>
<p>After the copy is setup, we launch our parent job and if everything is correct, you should see something like this:</p>
<h1 id="wrapping-it-up">Wrapping it Up</h1>
<p>For final words, important bit to take away from this is that you need an <strong>artifact connection between the jobs</strong> to make this work. Whatever your downstream / upstream connection is, it doesn&rsquo;t matter. Also, there can be a problem that you have everything set up, and there are artifacts which bind the jobs together but you still can&rsquo;t see the results, then your best option is to specify the jobs BY NAME in the aggregate test plug-in like this:</p>
<p>I know this is a pain if there are multiple jobs, but at least, jenkins is providing you with Autoexpande once you start typing.</p>
<p>Of course this also works with multiple downstream jobs if they copy the artifact to themselves.</p>
<p>Any questions, please feel free to comment and I will answer to the best of my knowledge.</p>
<p>Cheers,
Gergely.</p>
]]></description>
    </item>
    
    <item>
      <title>Sieve of Eratosthenes in Go</title>
      <link>https://skarlso.github.io/2015/07/30/sieve-of-eratosthenes-in-go/</link>
      <pubDate>Thu, 30 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/30/sieve-of-eratosthenes-in-go/</guid>
      <description><![CDATA[<p>I&rsquo;m pretty proud of this one as well.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-go" data-lang="go">
<span class="kn">package</span> <span class="nx">sieve</span>

<span class="c1">//Sieve Uses the Sieve of Eratosthenes to calculate primes to a certain limit
</span><span class="c1"></span><span class="kd">func</span> <span class="nf">Sieve</span><span class="p">(</span><span class="nx">limit</span> <span class="kt">int</span><span class="p">)</span> <span class="p">[]</span><span class="kt">int</span> <span class="p">{</span>
	<span class="kd">var</span> <span class="nx">listOfPrimes</span> <span class="p">[]</span><span class="kt">int</span>
	<span class="nx">markers</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">bool</span><span class="p">,</span> <span class="nx">limit</span><span class="p">)</span>

	<span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">2</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">limit</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
		<span class="k">if</span> <span class="p">!</span><span class="nx">markers</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="p">{</span>
			<span class="k">for</span> <span class="nx">j</span> <span class="o">:=</span> <span class="nx">i</span> <span class="o">+</span> <span class="nx">i</span><span class="p">;</span> <span class="nx">j</span> <span class="p">&lt;</span> <span class="nx">limit</span><span class="p">;</span> <span class="nx">j</span> <span class="o">+=</span> <span class="nx">i</span> <span class="p">{</span>
				<span class="nx">markers</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span> <span class="p">=</span> <span class="kc">true</span>
			<span class="p">}</span>
			<span class="nx">listOfPrimes</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">listOfPrimes</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="k">return</span> <span class="nx">listOfPrimes</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
    </item>
    
    <item>
      <title>Quick Tip for Debugging Headless Locally</title>
      <link>https://skarlso.github.io/2015/07/22/quick-tip-for-debugging-headless-locally/</link>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/22/quick-tip-for-debugging-headless-locally/</guid>
      <description><![CDATA[<p>If you are installing something with Packer and you have Headless enabled(and you are lazy and don&rsquo;t want to switch it off), it gets difficult, to see output.</p>
<p>Especially on a windows install the Answer File / Unattended install can be like =&gt; Waiting for SSH. for about an hour or two! If you are doing this locally fret not. Just start VirtualBox, and watch the Preview section which will display the current state even if it&rsquo;s a headless install!</p>
<p>It&rsquo;s a small windows, but your can click on <strong>Show</strong> which will open the VM in a proper view.</p>
<p>Enjoy,
Gergely.</p>
]]></description>
    </item>
    
    <item>
      <title>Converting numbers into string representations</title>
      <link>https://skarlso.github.io/2015/07/19/converting-numbers-into-string-representations/</link>
      <pubDate>Sun, 19 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/19/converting-numbers-into-string-representations/</guid>
      <description><![CDATA[<p>I quiet like this one. My first go program snippet without any peaking or googling. I&rsquo;m proud, though it could be improved with a bit of struct magic and such and such. And it only counts &lsquo;till 1000.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-go" data-lang="go">
<span class="kn">package</span> <span class="nx">main</span>

<span class="kn">import</span> <span class="s">&#34;fmt&#34;</span>

<span class="kd">var</span> <span class="nx">words</span> <span class="p">=</span> <span class="kd">map</span><span class="p">[</span><span class="kt">int</span><span class="p">]</span><span class="kt">string</span><span class="p">{</span><span class="mi">1</span><span class="p">:</span> <span class="s">&#34;one&#34;</span><span class="p">,</span> <span class="mi">2</span><span class="p">:</span> <span class="s">&#34;two&#34;</span><span class="p">,</span> <span class="mi">3</span><span class="p">:</span> <span class="s">&#34;three&#34;</span><span class="p">,</span> <span class="mi">4</span><span class="p">:</span> <span class="s">&#34;four&#34;</span><span class="p">,</span> <span class="mi">5</span><span class="p">:</span> <span class="s">&#34;five&#34;</span><span class="p">,</span> <span class="mi">6</span><span class="p">:</span> <span class="s">&#34;six&#34;</span><span class="p">,</span> <span class="mi">7</span><span class="p">:</span> <span class="s">&#34;seven&#34;</span><span class="p">,</span>
	<span class="mi">8</span><span class="p">:</span> <span class="s">&#34;eight&#34;</span><span class="p">,</span> <span class="mi">9</span><span class="p">:</span> <span class="s">&#34;nine&#34;</span><span class="p">,</span> <span class="mi">10</span><span class="p">:</span> <span class="s">&#34;ten&#34;</span><span class="p">,</span> <span class="mi">11</span><span class="p">:</span> <span class="s">&#34;eleven&#34;</span><span class="p">,</span> <span class="mi">12</span><span class="p">:</span> <span class="s">&#34;twelve&#34;</span><span class="p">,</span> <span class="mi">13</span><span class="p">:</span> <span class="s">&#34;thirteen&#34;</span><span class="p">,</span> <span class="mi">14</span><span class="p">:</span> <span class="s">&#34;fourteen&#34;</span><span class="p">,</span> <span class="mi">15</span><span class="p">:</span> <span class="s">&#34;fifteen&#34;</span><span class="p">,</span>
	<span class="mi">16</span><span class="p">:</span> <span class="s">&#34;sixteen&#34;</span><span class="p">,</span> <span class="mi">17</span><span class="p">:</span> <span class="s">&#34;seventeen&#34;</span><span class="p">,</span> <span class="mi">18</span><span class="p">:</span> <span class="s">&#34;eighteen&#34;</span><span class="p">,</span> <span class="mi">19</span><span class="p">:</span> <span class="s">&#34;nineteen&#34;</span><span class="p">,</span> <span class="mi">20</span><span class="p">:</span> <span class="s">&#34;twenty&#34;</span><span class="p">,</span> <span class="mi">30</span><span class="p">:</span> <span class="s">&#34;thirty&#34;</span><span class="p">,</span> <span class="mi">40</span><span class="p">:</span> <span class="s">&#34;forty&#34;</span><span class="p">,</span>
	<span class="mi">50</span><span class="p">:</span> <span class="s">&#34;fifty&#34;</span><span class="p">,</span> <span class="mi">60</span><span class="p">:</span> <span class="s">&#34;sixty&#34;</span><span class="p">,</span> <span class="mi">70</span><span class="p">:</span> <span class="s">&#34;seventy&#34;</span><span class="p">,</span> <span class="mi">80</span><span class="p">:</span> <span class="s">&#34;eighty&#34;</span><span class="p">,</span> <span class="mi">90</span><span class="p">:</span> <span class="s">&#34;ninety&#34;</span><span class="p">}</span>

<span class="c1">// CountLetters count the letters in a long string number representation
</span><span class="c1"></span><span class="kd">func</span> <span class="nf">CountLetters</span><span class="p">(</span><span class="nx">limit</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">myLongNumberString</span> <span class="o">:=</span> <span class="s">&#34;&#34;</span>
	<span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="nx">limit</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
		<span class="nf">addLettersToMyString</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">myLongNumberString</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
	<span class="p">}</span>
	<span class="c1">// fmt.Println(&#34;1-9 written with letters is: &#34;, len(myLongNumberString))
</span><span class="c1"></span>	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;The string is:&#34;</span><span class="p">,</span> <span class="nx">myLongNumberString</span><span class="p">)</span>
	<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;Lenght of string is:&#34;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="nx">myLongNumberString</span><span class="p">))</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nf">addLettersToMyString</span><span class="p">(</span><span class="nx">myString</span> <span class="o">*</span><span class="kt">string</span><span class="p">,</span> <span class="nx">num</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
	<span class="k">if</span> <span class="nx">num</span> <span class="p">&lt;</span> <span class="mi">20</span> <span class="p">{</span>
		<span class="o">*</span><span class="nx">myString</span> <span class="o">+=</span> <span class="nx">words</span><span class="p">[</span><span class="nx">num</span><span class="p">]</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="nx">num</span> <span class="o">&gt;=</span> <span class="mi">20</span> <span class="o">&amp;&amp;</span> <span class="nx">num</span> <span class="p">&lt;</span> <span class="mi">100</span> <span class="p">{</span>
		<span class="o">*</span><span class="nx">myString</span> <span class="o">+=</span> <span class="nf">countMiddle</span><span class="p">(</span><span class="nx">num</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="nx">num</span> <span class="o">&gt;=</span> <span class="mi">100</span> <span class="o">&amp;&amp;</span> <span class="nx">num</span> <span class="p">&lt;</span> <span class="mi">1000</span> <span class="p">{</span>
		<span class="nx">hundred</span><span class="p">,</span> <span class="nx">tenth</span> <span class="o">:=</span> <span class="nf">countHundred</span><span class="p">(</span><span class="nx">num</span><span class="p">)</span>
		<span class="k">if</span> <span class="nx">tenth</span> <span class="o">==</span>  <span class="p">{</span>
			<span class="o">*</span><span class="nx">myString</span> <span class="o">+=</span> <span class="nx">hundred</span>
		<span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="nx">tenth</span> <span class="o">&gt;=</span> <span class="mi">11</span> <span class="o">&amp;&amp;</span> <span class="nx">tenth</span> <span class="p">&lt;</span> <span class="mi">20</span> <span class="p">{</span>
			<span class="o">*</span><span class="nx">myString</span> <span class="o">+=</span> <span class="nx">hundred</span> <span class="o">+</span> <span class="s">&#34;and&#34;</span> <span class="o">+</span> <span class="nx">words</span><span class="p">[</span><span class="nx">tenth</span><span class="p">]</span>
		<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
			<span class="o">*</span><span class="nx">myString</span> <span class="o">+=</span> <span class="nx">hundred</span> <span class="o">+</span> <span class="s">&#34;and&#34;</span> <span class="o">+</span> <span class="nf">countMiddle</span><span class="p">(</span><span class="nx">tenth</span><span class="p">)</span>
		<span class="p">}</span>

	<span class="p">}</span>

	<span class="k">if</span> <span class="nx">num</span> <span class="o">==</span> <span class="mi">1000</span> <span class="p">{</span>
		<span class="o">*</span><span class="nx">myString</span> <span class="o">+=</span> <span class="s">&#34;onethousand&#34;</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nf">countMiddle</span><span class="p">(</span><span class="nx">num</span> <span class="kt">int</span><span class="p">)</span> <span class="kt">string</span> <span class="p">{</span>
	<span class="nx">minues</span> <span class="o">:=</span> <span class="nx">num</span> <span class="o">%</span> <span class="mi">10</span>
	<span class="nx">num</span> <span class="o">-=</span> <span class="nx">minues</span>
	<span class="k">return</span> <span class="nx">words</span><span class="p">[</span><span class="nx">num</span><span class="p">]</span> <span class="o">+</span> <span class="nx">words</span><span class="p">[</span><span class="nx">minues</span><span class="p">]</span>
<span class="p">}</span>

<span class="kd">func</span> <span class="nf">countHundred</span><span class="p">(</span><span class="nx">num</span> <span class="kt">int</span><span class="p">)</span> <span class="p">(</span><span class="kt">string</span><span class="p">,</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">minues</span> <span class="o">:=</span> <span class="nx">num</span> <span class="o">%</span> <span class="mi">100</span>
	<span class="nx">num</span> <span class="o">-=</span> <span class="nx">minues</span>
	<span class="k">return</span> <span class="p">(</span><span class="nx">words</span><span class="p">[(</span><span class="nx">num</span><span class="o">/</span><span class="mi">100</span><span class="p">)]</span> <span class="o">+</span> <span class="s">&#34;hundred&#34;</span><span class="p">),</span> <span class="nx">minues</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
    </item>
    
    <item>
      <title>Selenium Testing with Packer and Vagrant</title>
      <link>https://skarlso.github.io/2015/07/16/selenium-testing-with-packer-and-vagrant/</link>
      <pubDate>Thu, 16 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/16/selenium-testing-with-packer-and-vagrant/</guid>
      <description><![CDATA[<p>So, recently, the tester team talked to me, that their build takes too long, and why is that? A quick look at their configuration and build scripts showed me, that they are actually using a vagrant box, which never gets destroyed or re-started at least. To remedy this problem, I came up with the following solution.</p>
<h1 id="same-old">Same old.</h1>
<p>Same as in my previous post, we are going to build a Windows Machine for this purpose. The only addition to my previous settings, will be some Java install, downloading selenium and installing Chrome, and Firefox.</p>
<h1 id="installation">Installation</h1>
<h4 id="answer-file">Answer File</h4>
<p>Here is the configuration and setup of Windows before the provision phase.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml">
...
               <span class="nt">&lt;SynchronousCommand</span> <span class="na">wcm:action=</span><span class="s">&#34;add&#34;</span><span class="nt">&gt;</span>
                  <span class="nt">&lt;CommandLine&gt;</span>cmd.exe /c C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -File a:\jdk_inst.ps1 -AutoStart<span class="nt">&lt;/CommandLine&gt;</span>
                  <span class="nt">&lt;Description&gt;</span>Install Java<span class="nt">&lt;/Description&gt;</span>
                  <span class="nt">&lt;Order&gt;</span>103<span class="nt">&lt;/Order&gt;</span>
                  <span class="nt">&lt;RequiresUserInput&gt;</span>true<span class="nt">&lt;/RequiresUserInput&gt;</span>
               <span class="nt">&lt;/SynchronousCommand&gt;</span>
...
</code></pre></td></tr></table>
</div>
</div><p>This is the part were I&rsquo;m installing Java. The script for the jdk_inst.ps1 is in my previous post, but I&rsquo;ll paste it here for ease of read.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-powershell" data-lang="powershell">
<span class="k">function</span> <span class="n">LogWrite</span> <span class="p">{</span>
   <span class="k">Param</span> <span class="p">(</span><span class="no">[string]</span><span class="nv">$logstring</span><span class="p">)</span>
   <span class="nv">$now</span> <span class="p">=</span> <span class="nb">Get-Date</span> <span class="n">-format</span> <span class="n">s</span>
   <span class="nb">Add-Content</span> <span class="nv">$Logfile</span> <span class="n">-value</span> <span class="s2">&#34;$now $logstring&#34;</span>
   <span class="nb">Write-Host</span> <span class="nv">$logstring</span>
<span class="p">}</span>

<span class="nv">$Logfile</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\jdk-install.log&#34;</span>

<span class="nv">$JDK_VER</span><span class="p">=</span><span class="s2">&#34;7u75&#34;</span>
<span class="nv">$JDK_FULL_VER</span><span class="p">=</span><span class="s2">&#34;7u75-b13&#34;</span>
<span class="nv">$JDK_PATH</span><span class="p">=</span><span class="s2">&#34;1.7.0_75&#34;</span>
<span class="nv">$source86</span> <span class="p">=</span> <span class="s2">&#34;http://download.oracle.com/otn-pub/java/jdk/$JDK_FULL_VER/jdk-$JDK_VER-windows-i586.exe&#34;</span>
<span class="nv">$source64</span> <span class="p">=</span> <span class="s2">&#34;http://download.oracle.com/otn-pub/java/jdk/$JDK_FULL_VER/jdk-$JDK_VER-windows-x64.exe&#34;</span>
<span class="nv">$destination86</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\$JDK_VER-x86.exe&#34;</span>
<span class="nv">$destination64</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\$JDK_VER-x64.exe&#34;</span>
<span class="nv">$client</span> <span class="p">=</span> <span class="nb">new-object</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">WebClient</span>
<span class="nv">$cookie</span> <span class="p">=</span> <span class="s2">&#34;oraclelicense=accept-securebackup-cookie&#34;</span>
<span class="nv">$client</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="no">[System.Net.HttpRequestHeader]</span><span class="p">::</span><span class="n">Cookie</span><span class="p">,</span> <span class="nv">$cookie</span><span class="p">)</span>

<span class="n">LogWrite</span> <span class="s2">&#34;Setting Execution Policy level to Bypass&#34;</span>
<span class="nb">Set-ExecutionPolicy</span> <span class="n">-Scope</span> <span class="n">CurrentUser</span> <span class="n">-ExecutionPolicy</span> <span class="n">Bypass</span> <span class="n">-Force</span>

<span class="n">LogWrite</span> <span class="s1">&#39;Checking if Java is already installed&#39;</span>
<span class="k">if</span> <span class="p">((</span><span class="nb">Test-Path</span> <span class="s2">&#34;c:\Program Files (x86)\Java&#34;</span><span class="p">)</span> <span class="o">-Or</span> <span class="p">(</span><span class="nb">Test-Path</span> <span class="s2">&#34;c:\Program Files\Java&#34;</span><span class="p">))</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;No need to Install Java&#39;</span>
    <span class="n">Exit</span>
<span class="p">}</span>

<span class="n">LogWrite</span> <span class="s1">&#39;Downloading x86 to $destination86&#39;</span>
<span class="k">try</span> <span class="p">{</span>
  <span class="nv">$client</span><span class="p">.</span><span class="n">downloadFile</span><span class="p">(</span><span class="nv">$source86</span><span class="p">,</span> <span class="nv">$destination86</span><span class="p">)</span>
  <span class="k">if</span> <span class="p">(!(</span><span class="nb">Test-Path</span> <span class="nv">$destination86</span><span class="p">))</span> <span class="p">{</span>
      <span class="n">LogWrite</span> <span class="s2">&#34;Downloading $destination86 failed&#34;</span>
      <span class="n">Exit</span>
  <span class="p">}</span>
  <span class="n">LogWrite</span> <span class="s1">&#39;Downloading x64 to $destination64&#39;</span>

  <span class="nv">$client</span><span class="p">.</span><span class="n">downloadFile</span><span class="p">(</span><span class="nv">$source64</span><span class="p">,</span> <span class="nv">$destination64</span><span class="p">)</span>
  <span class="k">if</span> <span class="p">(!(</span><span class="nb">Test-Path</span> <span class="nv">$destination64</span><span class="p">))</span> <span class="p">{</span>
      <span class="n">LogWrite</span> <span class="s2">&#34;Downloading $destination64 failed&#34;</span>
      <span class="n">Exit</span>
  <span class="p">}</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[Exception]</span> <span class="p">{</span>
  <span class="n">LogWrite</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
<span class="p">}</span>

<span class="k">try</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Installing JDK-x64&#39;</span>
    <span class="nv">$proc1</span> <span class="p">=</span> <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="s2">&#34;$destination64&#34;</span> <span class="n">-ArgumentList</span> <span class="s2">&#34;/s REBOOT=ReallySuppress&#34;</span> <span class="n">-Wait</span> <span class="n">-PassThru</span>
    <span class="nv">$proc1</span><span class="p">.</span><span class="n">waitForExit</span><span class="p">()</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Installation Done.&#39;</span>

    <span class="n">LogWrite</span> <span class="s1">&#39;Installing JDK-x86&#39;</span>
    <span class="nv">$proc2</span> <span class="p">=</span> <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="s2">&#34;$destination86&#34;</span> <span class="n">-ArgumentList</span> <span class="s2">&#34;/s REBOOT=ReallySuppress&#34;</span> <span class="n">-Wait</span> <span class="n">-PassThru</span>
    <span class="nv">$proc2</span><span class="p">.</span><span class="n">waitForExit</span><span class="p">()</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Installtion Done.&#39;</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[exception]</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;$_ is&#39;</span> <span class="nv">$_</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;$_.GetType().FullName is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">GetType</span><span class="p">().</span><span class="n">FullName</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;$_.Exception.GetType().FullName is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span><span class="p">.</span><span class="n">GetType</span><span class="p">().</span><span class="n">FullName</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;$_.Exception.Message is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span><span class="p">.</span><span class="n">Message</span>
<span class="p">}</span>

<span class="k">if</span> <span class="p">((</span><span class="nb">Test-Path</span> <span class="s2">&#34;c:\Program Files (x86)\Java&#34;</span><span class="p">)</span> <span class="o">-Or</span> <span class="p">(</span><span class="nb">Test-Path</span> <span class="s2">&#34;c:\Program Files\Java&#34;</span><span class="p">))</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Java installed successfully.&#39;</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Java install Failed!&#39;</span>
<span class="p">}</span>
<span class="n">LogWrite</span> <span class="s1">&#39;Setting up Path variables.&#39;</span>
<span class="no">[System.Environment]</span><span class="p">::</span><span class="n">SetEnvironmentVariable</span><span class="p">(</span><span class="s2">&#34;JAVA_HOME&#34;</span><span class="p">,</span> <span class="s2">&#34;c:\Program Files (x86)\Java\jdk$JDK_PATH&#34;</span><span class="p">,</span> <span class="s2">&#34;Machine&#34;</span><span class="p">)</span>
<span class="no">[System.Environment]</span><span class="p">::</span><span class="n">SetEnvironmentVariable</span><span class="p">(</span><span class="s2">&#34;PATH&#34;</span><span class="p">,</span> <span class="nv">$Env:Path</span> <span class="p">+</span> <span class="s2">&#34;;c:\Program Files (x86)\Java\jdk$JDK_PATH\bin&#34;</span><span class="p">,</span> <span class="s2">&#34;Machine&#34;</span><span class="p">)</span>
<span class="n">LogWrite</span> <span class="s1">&#39;Done. Goodbye.&#39;</span>
</code></pre></td></tr></table>
</div>
</div><p>This installs both x86 and 64 bit version of Java.</p>
<h1 id="provision">Provision</h1>
<p>I decided to put these into the provision phase to get log messages written out properly. Because in the unattended file, you can&rsquo;t see any progress.</p>
<h4 id="chrome-and-firefox">Chrome And Firefox</h4>
<p>Installing these two proved a little bit more difficult. Chrome didn&rsquo;t really like me to download their installer without accepting something first, like Java. Luckily, after a LOT of digging, I found a chrome installer which lets you install silently. Here is the script to install the two.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-powershell" data-lang="powershell">
<span class="k">function</span> <span class="n">LogWrite</span> <span class="p">{</span>
    <span class="k">Param</span> <span class="p">(</span><span class="no">[string]</span><span class="nv">$logstring</span><span class="p">)</span>
    <span class="nv">$now</span> <span class="p">=</span> <span class="nb">Get-Date</span> <span class="n">-format</span> <span class="n">s</span>
    <span class="nb">Add-Content</span> <span class="nv">$Logfile</span> <span class="n">-value</span> <span class="s2">&#34;$now $logstring&#34;</span>
    <span class="nb">Write-Host</span> <span class="nv">$logstring</span>
<span class="p">}</span>

<span class="k">function</span> <span class="n">CheckLocation</span> <span class="p">{</span>
    <span class="k">Param</span> <span class="p">(</span><span class="no">[string]</span><span class="nv">$location</span><span class="p">)</span>
    <span class="k">if</span> <span class="p">(!(</span><span class="nb">Test-Path</span>  <span class="nv">$location</span><span class="p">))</span> <span class="p">{</span>
        <span class="k">throw</span> <span class="no">[System.IO.FileNotFoundException]</span> <span class="s2">&#34;Could not download to Destination $location.&#34;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="nv">$Logfile</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\chrome-firefox-install.log&#34;</span>

<span class="nv">$chrome_source</span> <span class="p">=</span> <span class="s2">&#34;http://dl.google.com/chrome/install/375.126/chrome_installer.exe&#34;</span>
<span class="nv">$chrome_destination</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\chrome_installer.exe&#34;</span>
<span class="nv">$firefox_source</span> <span class="p">=</span> <span class="s2">&#34;https://download-installer.cdn.mozilla.net/pub/firefox/releases/39.0/win32/hu/Firefox%20Setup%2039.0.exe&#34;</span>
<span class="nv">$firefox_destination</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\firefoxinstaller.exe&#34;</span>

<span class="n">LogWrite</span> <span class="s1">&#39;Starting to download files.&#39;</span>
<span class="k">try</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Downloading Chrome...&#39;</span>
    <span class="p">(</span><span class="nb">New-Object</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">WebClient</span><span class="p">).</span><span class="n">DownloadFile</span><span class="p">(</span><span class="nv">$chrome_source</span><span class="p">,</span> <span class="nv">$chrome_destination</span><span class="p">)</span>
    <span class="n">CheckLocation</span> <span class="nv">$chrome_destination</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Done...&#39;</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Downloading Firefox...&#39;</span>
    <span class="p">(</span><span class="nb">New-Object</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">WebClient</span><span class="p">).</span><span class="n">DownloadFile</span><span class="p">(</span><span class="nv">$firefox_source</span><span class="p">,</span> <span class="nv">$firefox_destination</span><span class="p">)</span>
    <span class="n">CheckLocation</span> <span class="nv">$firefox_destination</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[Exception]</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s2">&#34;Exception during download. Probable cause could be that the directory or the file didn&#39;t exist.&#34;</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
<span class="p">}</span>

<span class="n">LogWrite</span> <span class="s1">&#39;Starting firefox install process.&#39;</span>
<span class="k">try</span> <span class="p">{</span>
    <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="nv">$firefox_destination</span> <span class="n">-ArgumentList</span> <span class="s2">&#34;-ms&#34;</span> <span class="n">-Wait</span> <span class="n">-PassThru</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[Exception]</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Exception during install process.&#39;</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
<span class="p">}</span>
<span class="n">LogWrite</span> <span class="s1">&#39;Starting chrome install process.&#39;</span>

<span class="k">try</span> <span class="p">{</span>
    <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="nv">$chrome_destination</span> <span class="n">-ArgumentList</span> <span class="s2">&#34;/silent /install&#34;</span> <span class="n">-Wait</span> <span class="n">-PassThru</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[Exception]</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;Exception during install process.&#39;</span>
    <span class="n">LogWrite</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
<span class="p">}</span>

<span class="n">LogWrite</span> <span class="s1">&#39;All done. Goodbye.&#39;</span>
</code></pre></td></tr></table>
</div>
</div><p>They both install silently. Pretty neat.</p>
<h4 id="selenium">Selenium</h4>
<p>This only has to be downloaded, so this is pretty simple. Vagrant will handle the startup of course when it does a vagrant up.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-powershell" data-lang="powershell">
<span class="k">function</span> <span class="n">LogWrite</span> <span class="p">{</span>
   <span class="k">Param</span> <span class="p">(</span><span class="no">[string]</span><span class="nv">$logstring</span><span class="p">)</span>
   <span class="nv">$now</span> <span class="p">=</span> <span class="nb">Get-Date</span> <span class="n">-format</span> <span class="n">s</span>
   <span class="nb">Add-Content</span> <span class="nv">$Logfile</span> <span class="n">-value</span> <span class="s2">&#34;$now $logstring&#34;</span>
   <span class="nb">Write-Host</span> <span class="nv">$logstring</span>
<span class="p">}</span>

<span class="nv">$Logfile</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\selenium-install.log&#34;</span>

<span class="nv">$source</span> <span class="p">=</span> <span class="s2">&#34;http://selenium-release.storage.googleapis.com/2.46/selenium-server-standalone-2.46.0.jar&#34;</span>
<span class="nv">$destination</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\selenium-server.jar&#34;</span>
<span class="n">LogWrite</span> <span class="s1">&#39;Starting to download selenium file.&#39;</span>
<span class="k">try</span> <span class="p">{</span>
  <span class="p">(</span><span class="nb">New-Object</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">WebClient</span><span class="p">).</span><span class="n">DownloadFile</span><span class="p">(</span><span class="nv">$source</span><span class="p">,</span> <span class="nv">$destination</span><span class="p">)</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[Exception]</span> <span class="p">{</span>
  <span class="n">LogWrite</span> <span class="s2">&#34;Exception during download. Probable cause could be that the directory or the file didn&#39;t exist.&#34;</span>
  <span class="n">LogWrite</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
<span class="p">}</span>
<span class="n">LogWrite</span> <span class="s1">&#39;Download done. Checking if file exists.&#39;</span>
<span class="k">if</span> <span class="p">(!(</span><span class="nb">Test-Path</span> <span class="nv">$destination</span><span class="p">))</span> <span class="p">{</span>
  <span class="n">LogWrite</span> <span class="s1">&#39;Downloading dotnet Failed!&#39;</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
  <span class="n">LogWrite</span> <span class="s1">&#39;Download successful.&#39;</span>
<span class="p">}</span>

<span class="n">LogWrite</span> <span class="s1">&#39;All done. Goodbye.&#39;</span>
</code></pre></td></tr></table>
</div>
</div><p>Straightforward.</p>
<h4 id="the-packer-json-file">The Packer Json File</h4>
<p>So putting this all together, here is the Packer JSON file for this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json">
<span class="p">{</span>
      <span class="nt">&#34;variables&#34;</span><span class="p">:</span> <span class="p">{</span>
      <span class="nt">&#34;vm_name&#34;</span><span class="p">:</span> <span class="s2">&#34;win7x64selenium&#34;</span><span class="p">,</span>
      <span class="nt">&#34;output_dir&#34;</span><span class="p">:</span> <span class="s2">&#34;output_win7_x64_selenium&#34;</span><span class="p">,</span>
      <span class="nt">&#34;vagrant_box_output&#34;</span><span class="p">:</span> <span class="s2">&#34;box_output&#34;</span><span class="p">,</span>
      <span class="nt">&#34;cpu_number&#34;</span><span class="p">:</span> <span class="s2">&#34;2&#34;</span><span class="p">,</span>
      <span class="nt">&#34;memory_size&#34;</span><span class="p">:</span> <span class="s2">&#34;4096&#34;</span><span class="p">,</span>
      <span class="nt">&#34;machine_type&#34;</span><span class="p">:</span> <span class="s2">&#34;pc-1.2&#34;</span><span class="p">,</span>
      <span class="nt">&#34;accelerator&#34;</span><span class="p">:</span> <span class="s2">&#34;kvm&#34;</span><span class="p">,</span>
      <span class="nt">&#34;disk_format&#34;</span><span class="p">:</span> <span class="s2">&#34;qcow2&#34;</span><span class="p">,</span>
      <span class="nt">&#34;disk_interface&#34;</span><span class="p">:</span> <span class="s2">&#34;virtio&#34;</span><span class="p">,</span>
      <span class="nt">&#34;net_device&#34;</span><span class="p">:</span> <span class="s2">&#34;virtio-net&#34;</span><span class="p">,</span>
      <span class="nt">&#34;cpu_model&#34;</span><span class="p">:</span> <span class="s2">&#34;host&#34;</span><span class="p">,</span>
      <span class="nt">&#34;disk_cache&#34;</span><span class="p">:</span> <span class="s2">&#34;writeback&#34;</span><span class="p">,</span>
      <span class="nt">&#34;disk_io&#34;</span><span class="p">:</span> <span class="s2">&#34;native&#34;</span>
   <span class="p">},</span>

  <span class="nt">&#34;builders&#34;</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;virtualbox-iso&#34;</span><span class="p">,</span>
      <span class="nt">&#34;iso_url&#34;</span><span class="p">:</span> <span class="s2">&#34;/home/user/vms/windows7.iso&#34;</span><span class="p">,</span>
      <span class="nt">&#34;iso_checksum_type&#34;</span><span class="p">:</span> <span class="s2">&#34;sha1&#34;</span><span class="p">,</span>
      <span class="nt">&#34;iso_checksum&#34;</span><span class="p">:</span> <span class="s2">&#34;0BCFC54019EA175B1EE51F6D2B207A3D14DD2B58&#34;</span><span class="p">,</span>
      <span class="nt">&#34;headless&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
      <span class="nt">&#34;boot_wait&#34;</span><span class="p">:</span> <span class="s2">&#34;2m&#34;</span><span class="p">,</span>
      <span class="nt">&#34;ssh_username&#34;</span><span class="p">:</span> <span class="s2">&#34;vagrant&#34;</span><span class="p">,</span>
      <span class="nt">&#34;ssh_password&#34;</span><span class="p">:</span> <span class="s2">&#34;vagrant&#34;</span><span class="p">,</span>
      <span class="nt">&#34;ssh_wait_timeout&#34;</span><span class="p">:</span> <span class="s2">&#34;8h&#34;</span><span class="p">,</span>
      <span class="nt">&#34;shutdown_command&#34;</span><span class="p">:</span> <span class="s2">&#34;shutdown /s /t 10 /f /d p:4:1 /c \&#34;Packer Shutdown\&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;guest_os_type&#34;</span><span class="p">:</span> <span class="s2">&#34;Windows7_64&#34;</span><span class="p">,</span>
      <span class="nt">&#34;disk_size&#34;</span><span class="p">:</span> <span class="mi">61440</span><span class="p">,</span>
      <span class="nt">&#34;floppy_files&#34;</span><span class="p">:</span> <span class="p">[</span>
        <span class="s2">&#34;./answer_files/7-selenium/Autounattend.xml&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/dis-updates.ps1&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/microsoft-updates.bat&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/openssh.ps1&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/jdk_inst.ps1&#34;</span>
      <span class="p">],</span>
      <span class="nt">&#34;vboxmanage&#34;</span><span class="p">:</span> <span class="p">[</span>
        <span class="p">[</span>
          <span class="s2">&#34;modifyvm&#34;</span><span class="p">,</span>
          <span class="s2">&#34;{{.Name}}&#34;</span><span class="p">,</span>
          <span class="s2">&#34;--memory&#34;</span><span class="p">,</span>
          <span class="s2">&#34;{{user `memory_size`}}&#34;</span>
        <span class="p">],</span>
        <span class="p">[</span>
          <span class="s2">&#34;modifyvm&#34;</span><span class="p">,</span>
          <span class="s2">&#34;{{.Name}}&#34;</span><span class="p">,</span>
          <span class="s2">&#34;--cpus&#34;</span><span class="p">,</span>
          <span class="s2">&#34;{{user `cpu_number`}}&#34;</span>
        <span class="p">]</span>
      <span class="p">]</span>
    <span class="p">}</span>
  <span class="p">],</span>
  <span class="nt">&#34;provisioners&#34;</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;powershell&#34;</span><span class="p">,</span>
      <span class="nt">&#34;scripts&#34;</span> <span class="p">:</span> <span class="p">[</span>
        <span class="s2">&#34;./scripts/install-selenium-server.ps1&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/install-chrome-firefox.ps1&#34;</span>
      <span class="p">]</span>
    <span class="p">},{</span>
      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;shell&#34;</span><span class="p">,</span>
      <span class="nt">&#34;remote_path&#34;</span><span class="p">:</span> <span class="s2">&#34;/tmp/script.bat&#34;</span><span class="p">,</span>
      <span class="nt">&#34;execute_command&#34;</span><span class="p">:</span> <span class="s2">&#34;{{.Vars}} cmd /c C:/Windows/Temp/script.bat&#34;</span><span class="p">,</span>
      <span class="nt">&#34;scripts&#34;</span><span class="p">:</span> <span class="p">[</span>
        <span class="s2">&#34;./scripts/vm-guest-tools.bat&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/vagrant-ssh.bat&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/rsync.bat&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/enable-rdp.bat&#34;</span>
      <span class="p">]</span>
    <span class="p">}</span>
  <span class="p">],</span>
    <span class="nt">&#34;post-processors&#34;</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;vagrant&#34;</span><span class="p">,</span>
      <span class="nt">&#34;keep_input_artifact&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
      <span class="nt">&#34;output&#34;</span><span class="p">:</span> <span class="s2">&#34;{{user `vm_name`}}_{{.Provider}}.box&#34;</span><span class="p">,</span>
      <span class="nt">&#34;vagrantfile_template&#34;</span><span class="p">:</span> <span class="s2">&#34;vagrantfile-template&#34;</span>
    <span class="p">}</span>
    <span class="p">]</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="additional-software">Additional Software</h4>
<p>This is not done here. Obviously, in order to test your stuff, you first need to install your software on this box. Ideally, everything you need should be in the code you clone to this box, and should be contained mostly. And your application deployment should take core of that. But, if you require something like a DB, postgres, oracle, whatnot, than this is the place where you would install all that.</p>
<h1 id="vagrant-and-using-the-packer-box">Vagrant and Using the Packer Box</h1>
<p>Now, this has been interesting so far, but how do you actually go about using this image? That&rsquo;s the real question now, isn&rsquo;t it? Having a box, just sitting on a shared folder, doesn&rsquo;t do you too much good. So let&rsquo;s create a Jenkins job, which utilizes this box in a job which runs a bunch of tests for some application.</p>
<h4 id="vagrantfile">Vagrantfile</h4>
<p>Your vagrant file, could either be generated automatically, under source control ( which is preferred ) or sitting somewhere entirely elsewhere. In any case, it would look something like this.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-ruby" data-lang="ruby">
<span class="c1"># -*- mode: ruby -*-</span>
<span class="c1"># vi: set ft=ruby :</span>

<span class="no">VAGRANTFILE_API_VERSION</span> <span class="o">=</span> <span class="s2">&#34;2&#34;</span>

<span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="no">VAGRANTFILE_API_VERSION</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>

  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="s2">&#34;virtualbox&#34;</span>

  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">define</span> <span class="s2">&#34;selenium-box&#34;</span> <span class="k">do</span> <span class="o">|</span><span class="n">vs2013</span><span class="o">|</span>
    <span class="n">vs2013</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="s2">&#34;windows7-x64-04-selenium&#34;</span>
    <span class="n">vs2013</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box_url</span> <span class="o">=</span> <span class="s2">&#34;path/to/your/share/win7x64_selenium_virtualbox.box&#34;</span>
  <span class="k">end</span>

  <span class="n">config</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">enable</span>

  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">guest</span> <span class="o">=</span> <span class="ss">:windows</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">communicator</span> <span class="o">=</span> <span class="s2">&#34;winrm&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">winrm</span><span class="o">.</span><span class="n">username</span> <span class="o">=</span> <span class="s2">&#34;vagrant&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">winrm</span><span class="o">.</span><span class="n">password</span> <span class="o">=</span> <span class="s2">&#34;vagrant&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">windows</span><span class="o">.</span><span class="n">set_work_network</span> <span class="o">=</span> <span class="kp">true</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:forwarded_port</span><span class="p">,</span> <span class="ss">guest</span><span class="p">:</span> <span class="mi">3389</span><span class="p">,</span> <span class="ss">host</span><span class="p">:</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;RDESKTOP_PORT&#39;</span><span class="o">]</span><span class="p">,</span> <span class="ss">host_ip</span><span class="p">:</span> <span class="s2">&#34;0.0.0.0&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:forwarded_port</span><span class="p">,</span> <span class="ss">guest</span><span class="p">:</span> <span class="mi">5985</span><span class="p">,</span> <span class="ss">host</span><span class="p">:</span> <span class="mi">5985</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="s2">&#34;winrm&#34;</span><span class="p">,</span> <span class="ss">auto_correct</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">host_ip</span><span class="p">:</span> <span class="s2">&#34;0.0.0.0&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:forwarded_port</span><span class="p">,</span> <span class="ss">guest</span><span class="p">:</span> <span class="mi">9991</span><span class="p">,</span> <span class="ss">host</span><span class="p">:</span> <span class="mi">9991</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="s2">&#34;selenium&#34;</span><span class="p">,</span> <span class="ss">auto_correct</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">host_ip</span><span class="p">:</span> <span class="s2">&#34;0.0.0.0&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="ss">:virtualbox</span> <span class="k">do</span> <span class="o">|</span><span class="n">vbox</span><span class="o">|</span>
    <span class="n">vbox</span><span class="o">.</span><span class="n">gui</span> <span class="o">=</span> <span class="kp">false</span>
    <span class="n">vbox</span><span class="o">.</span><span class="n">memory</span> <span class="o">=</span> <span class="mi">4096</span>
    <span class="n">vbox</span><span class="o">.</span><span class="n">cpus</span> <span class="o">=</span> <span class="mi">2</span>
  <span class="k">end</span>


  <span class="n">config</span><span class="o">.</span><span class="n">winrm</span><span class="o">.</span><span class="n">max_tries</span> <span class="o">=</span> <span class="mi">10</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">synced_folder</span> <span class="s2">&#34;.&#34;</span><span class="p">,</span> <span class="s2">&#34;/vagrant&#34;</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="s2">&#34;rsync&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="s2">&#34;shell&#34;</span><span class="p">,</span> <span class="ss">path</span><span class="p">:</span> <span class="s2">&#34;init.bat&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="s2">&#34;shell&#34;</span><span class="p">,</span> <span class="ss">path</span><span class="p">:</span> <span class="s2">&#34;utils_inst.bat&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="s2">&#34;shell&#34;</span><span class="p">,</span> <span class="ss">path</span><span class="p">:</span> <span class="s2">&#34;jenkins_reg.ps1&#34;</span>
  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="s2">&#34;shell&#34;</span><span class="p">,</span> <span class="ss">path</span><span class="p">:</span> <span class="s2">&#34;start_selenium.bat&#34;</span>
<span class="k">end</span>
</code></pre></td></tr></table>
</div>
</div><p>Easy, no? Here is the script to start selenium.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">java -jar c:\Windows\Temp\selenium-server.jar -Dhttp.proxyPort=9991
</code></pre></td></tr></table>
</div>
</div><p>Straight forward. We also are forwarding the port on which Selenium is running in order for the test to see it.</p>
<h4 id="the-jenkins-job">The Jenkins Job</h4>
<p>The job can be anything. This is actually too large to cover here. It could be a gradle job, a maven job, an ant, a nant - or whatever is running the test -, job; it&rsquo;s up to you.</p>
<p>Just make sure that before the test runs, do a <strong>vagrant up</strong> and after the test finishes, in an ALWAYS TO BE EXECUTED HOOK -like gradle&rsquo;s finalizedBy , call a <strong>vagrant destroy</strong>. This way, your test will always run on a clean instance that has the necessary stuff on it.</p>
<h1 id="closing-words">Closing words</h1>
<p>So, there you have it. It&rsquo;s relatively simple. Tying this all into your infrastructure might prove difficult though depending on how rigid your deployment is. But it will always help you make your tests a bit more robust.</p>
<p>Also, you could run the whole deployment and test phase on a vagrant box, from the start, which is tied to jenkins as a slave and gets started when the job starts and destroyed when the job ends. That way you wouldn&rsquo;t have to create a, box in a box running on a box, kind of effect.</p>
<p>Thanks for reading,</p>
<p>Gergely.</p>]]></description>
    </item>
    
    <item>
      <title>Packer 0.8.1.</title>
      <link>https://skarlso.github.io/2015/07/01/packer-0-8-1/</link>
      <pubDate>Wed, 01 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/01/packer-0-8-1/</guid>
      <description><![CDATA[<p>Previously I wrote that the scripts I&rsquo;m writing, are failing because Packer hangs.</p>
<p>Apparently, this was a known issue. And apparently, I was using an older version, 0.7.5. After I updated everything is working wonderfully!!!</p>
<p>And for my thanks, here is an updated PowerShell script for provisioning my dotnet stuff.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-powershell" data-lang="powershell">
<span class="nv">$source</span> <span class="p">=</span> <span class="s2">&#34;http://download.microsoft.com/download/1/6/7/167F0D79-9317-48AE-AEDB-17120579F8E2/NDP451-KB2858728-x86-x64-AllOS-ENU.exe&#34;</span>
<span class="nv">$destination</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\dotnet.exe&#34;</span>
<span class="nb">Write-Host</span> <span class="s1">&#39;Starting to download dotnet file.&#39;</span>
<span class="k">try</span> <span class="p">{</span>
  <span class="p">(</span><span class="nb">New-Object</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">WebClient</span><span class="p">).</span><span class="n">DownloadFile</span><span class="p">(</span><span class="nv">$source</span><span class="p">,</span> <span class="nv">$destination</span><span class="p">)</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[Exception]</span> <span class="p">{</span>
  <span class="nb">Write-Host</span> <span class="s2">&#34;Exception during download. Probable cause could be that the directory or the file didn&#39;t exist.&#34;</span>
  <span class="nb">Write-Host</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
<span class="p">}</span>
<span class="nb">Write-Host</span> <span class="s1">&#39;Download done. Checking if file exists.&#39;</span>
<span class="k">if</span> <span class="p">(!(</span><span class="nb">Test-Path</span> <span class="nv">$destination</span><span class="p">))</span> <span class="p">{</span>
  <span class="nb">Write-Host</span> <span class="s1">&#39;Downloading dotnet Failed!&#39;</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
  <span class="nb">Write-Host</span> <span class="s1">&#39;Download successful.&#39;</span>
<span class="p">}</span>

<span class="nb">Write-Host</span> <span class="s1">&#39;Starting install process.&#39;</span>
<span class="k">try</span> <span class="p">{</span>
  <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="nv">$source</span> <span class="n">-ArgumentList</span> <span class="s2">&#34;/q /norestart&#34;</span> <span class="n">-Wait</span> <span class="n">-PassThru</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[Exception]</span> <span class="p">{</span>
  <span class="nb">Write-Host</span> <span class="s1">&#39;Exception during install process.&#39;</span>
  <span class="nb">Write-Host</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
<span class="p">}</span>

<span class="nb">Write-Host</span> <span class="s1">&#39;All done. Goodbye.&#39;</span>
</code></pre></td></tr></table>
</div>
</div><p>Thanks for reading!</p>
<p>Gergely.</p>
]]></description>
    </item>
    
    <item>
      <title>Powershell can also be nice -Or Installing Java silently and waiting</title>
      <link>https://skarlso.github.io/2015/06/30/powershell-can-also-be-nice-or-installing-java-silently-and-waiting/</link>
      <pubDate>Tue, 30 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/06/30/powershell-can-also-be-nice-or-installing-java-silently-and-waiting/</guid>
      <description><![CDATA[<p>Hello folks.</p>
<p>Today, I would like to show you a small script. It installs Java JDK, both version, x86 and 64 bit, silently, and wait for that process to finish.</p>
<p>The wait is necessary because /s on a java install has the nasty habit of running in the background. If you are using a .bat file, <strong>you shouldn&rsquo;t</strong>, than you would use something like: start /w jdk-setup.exe /s. This gets it done, but is ugly. Also, if you are using Packer and PowerShell provisioning, you might want to set up some environment variables as well for the next script. And you want that property to be available and you don&rsquo;t want to mess it up with setting a path into a file and then re-setting your path on the begin of your other script. Or pass it around with Packer. No. Use a proper PowerShell script. Learn it. It&rsquo;s not that hard. Be a professional. Don&rsquo;t hack something together for the next person to suffer at.</p>
<p>Here is how I did it. Hope it helps somebody out.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-powershell" data-lang="powershell">
<span class="nv">$JDK_VER</span><span class="p">=</span><span class="s2">&#34;7u75&#34;</span>
<span class="nv">$JDK_FULL_VER</span><span class="p">=</span><span class="s2">&#34;7u75-b13&#34;</span>
<span class="nv">$JDK_PATH</span><span class="p">=</span><span class="s2">&#34;1.7.0_75&#34;</span>
<span class="nv">$source86</span> <span class="p">=</span> <span class="s2">&#34;http://download.oracle.com/otn-pub/java/jdk/$JDK_FULL_VER/jdk-$JDK_VER-windows-i586.exe&#34;</span>
<span class="nv">$source64</span> <span class="p">=</span> <span class="s2">&#34;http://download.oracle.com/otn-pub/java/jdk/$JDK_FULL_VER/jdk-$JDK_VER-windows-x64.exe&#34;</span>
<span class="nv">$destination86</span> <span class="p">=</span> <span class="s2">&#34;C:\vagrant\$JDK_VER-x86.exe&#34;</span>
<span class="nv">$destination64</span> <span class="p">=</span> <span class="s2">&#34;C:\vagrant\$JDK_VER-x64.exe&#34;</span>
<span class="nv">$client</span> <span class="p">=</span> <span class="nb">new-object</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">WebClient</span>
<span class="nv">$cookie</span> <span class="p">=</span> <span class="s2">&#34;oraclelicense=accept-securebackup-cookie&#34;</span>
<span class="nv">$client</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="no">[System.Net.HttpRequestHeader]</span><span class="p">::</span><span class="n">Cookie</span><span class="p">,</span> <span class="nv">$cookie</span><span class="p">)</span>

<span class="nb">Write-Host</span> <span class="s1">&#39;Checking if Java is already installed&#39;</span>
<span class="k">if</span> <span class="p">((</span><span class="nb">Test-Path</span> <span class="s2">&#34;c:\Program Files (x86)\Java&#34;</span><span class="p">)</span> <span class="o">-Or</span> <span class="p">(</span><span class="nb">Test-Path</span> <span class="s2">&#34;c:\Program Files\Java&#34;</span><span class="p">))</span> <span class="p">{</span>
    <span class="nb">Write-Host</span> <span class="s1">&#39;No need to Install Java&#39;</span>
    <span class="n">Exit</span>
<span class="p">}</span>

<span class="nb">Write-Host</span> <span class="s1">&#39;Downloading x86 to $destination86&#39;</span>

<span class="nv">$client</span><span class="p">.</span><span class="n">downloadFile</span><span class="p">(</span><span class="nv">$source86</span><span class="p">,</span> <span class="nv">$destination86</span><span class="p">)</span>
<span class="k">if</span> <span class="p">(!(</span><span class="nb">Test-Path</span> <span class="nv">$destination86</span><span class="p">))</span> <span class="p">{</span>
    <span class="nb">Write-Host</span> <span class="s2">&#34;Downloading $destination86 failed&#34;</span>
    <span class="n">Exit</span>
<span class="p">}</span>
<span class="nb">Write-Host</span> <span class="s1">&#39;Downloading x64 to $destination64&#39;</span>

<span class="nv">$client</span><span class="p">.</span><span class="n">downloadFile</span><span class="p">(</span><span class="nv">$source64</span><span class="p">,</span> <span class="nv">$destination64</span><span class="p">)</span>
<span class="k">if</span> <span class="p">(!(</span><span class="nb">Test-Path</span> <span class="nv">$destination64</span><span class="p">))</span> <span class="p">{</span>
    <span class="nb">Write-Host</span> <span class="s2">&#34;Downloading $destination64 failed&#34;</span>
    <span class="n">Exit</span>
<span class="p">}</span>


<span class="k">try</span> <span class="p">{</span>
    <span class="nb">Write-Host</span> <span class="s1">&#39;Installing JDK-x64&#39;</span>
    <span class="nv">$proc1</span> <span class="p">=</span> <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="s2">&#34;$destination64&#34;</span> <span class="n">-ArgumentList</span> <span class="s2">&#34;/s REBOOT=ReallySuppress&#34;</span> <span class="n">-Wait</span> <span class="n">-PassThru</span>
    <span class="nv">$proc1</span><span class="p">.</span><span class="n">waitForExit</span><span class="p">()</span>
    <span class="nb">Write-Host</span> <span class="s1">&#39;Installation Done.&#39;</span>

    <span class="nb">Write-Host</span> <span class="s1">&#39;Installing JDK-x86&#39;</span>
    <span class="nv">$proc2</span> <span class="p">=</span> <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="s2">&#34;$destination86&#34;</span> <span class="n">-ArgumentList</span> <span class="s2">&#34;/s REBOOT=ReallySuppress&#34;</span> <span class="n">-Wait</span> <span class="n">-PassThru</span>
    <span class="nv">$proc2</span><span class="p">.</span><span class="n">waitForExit</span><span class="p">()</span>
    <span class="nb">Write-Host</span> <span class="s1">&#39;Installtion Done.&#39;</span>
<span class="p">}</span> <span class="k">catch</span> <span class="no">[exception]</span> <span class="p">{</span>
    <span class="nb">write-host</span> <span class="s1">&#39;$_ is&#39;</span> <span class="nv">$_</span>
    <span class="nb">write-host</span> <span class="s1">&#39;$_.GetType().FullName is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">GetType</span><span class="p">().</span><span class="n">FullName</span>
    <span class="nb">write-host</span> <span class="s1">&#39;$_.Exception is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span>
    <span class="nb">write-host</span> <span class="s1">&#39;$_.Exception.GetType().FullName is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span><span class="p">.</span><span class="n">GetType</span><span class="p">().</span><span class="n">FullName</span>
    <span class="nb">write-host</span> <span class="s1">&#39;$_.Exception.Message is&#39;</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span><span class="p">.</span><span class="n">Message</span>
<span class="p">}</span>

<span class="k">if</span> <span class="p">((</span><span class="nb">Test-Path</span> <span class="s2">&#34;c:\Program Files (x86)\Java&#34;</span><span class="p">)</span> <span class="o">-Or</span> <span class="p">(</span><span class="nb">Test-Path</span> <span class="s2">&#34;c:\Program Files\Java&#34;</span><span class="p">))</span> <span class="p">{</span>
    <span class="nb">Write-Host</span> <span class="s1">&#39;Java installed successfully.&#39;</span>
<span class="p">}</span>
<span class="nb">Write-Host</span> <span class="s1">&#39;Setting up Path variables.&#39;</span>
<span class="no">[System.Environment]</span><span class="p">::</span><span class="n">SetEnvironmentVariable</span><span class="p">(</span><span class="s2">&#34;JAVA_HOME&#34;</span><span class="p">,</span> <span class="s2">&#34;c:\Program Files (x86)\Java\jdk$JDK_PATH&#34;</span><span class="p">,</span> <span class="s2">&#34;Machine&#34;</span><span class="p">)</span>
<span class="no">[System.Environment]</span><span class="p">::</span><span class="n">SetEnvironmentVariable</span><span class="p">(</span><span class="s2">&#34;PATH&#34;</span><span class="p">,</span> <span class="nv">$Env:Path</span> <span class="p">+</span> <span class="s2">&#34;;c:\Program Files (x86)\Java\jdk$JDK_PATH\bin&#34;</span><span class="p">,</span> <span class="s2">&#34;Machine&#34;</span><span class="p">)</span>
<span class="nb">Write-Host</span> <span class="s1">&#39;Done. Goodbye.&#39;</span>
</code></pre></td></tr></table>
</div>
</div><p>Now, there is room for improvement here. Like checking exit code, doing something extra after a failed exit. Throwing an exception, and so on and so forth. But this is a much needed improvement from calling a BAT file.</p>
<p>And you would use this in a Packer JSON file like this..</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json">
<span class="p">{</span>
      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;powershell&#34;</span><span class="p">,</span>
      <span class="nt">&#34;scripts&#34;</span><span class="p">:</span> <span class="p">[</span>
        <span class="s2">&#34;./scripts/jdk_inst.ps1&#34;</span>
      <span class="p">]</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>Easy. And at the end, the System.Environment actually writes out into the registry permanently so no need to pass it around in a file or something ugly like that.</p>
<p>Hope this helps somebody.</p>
<p>Thanks for reading.</p>
<p>Gergely.</p>
]]></description>
    </item>
    
    <item>
      <title>The Packer, The Windows, and the Vagrant box</title>
      <link>https://skarlso.github.io/2015/06/27/the-packer-the-windows-and-the-vagrant-box/</link>
      <pubDate>Sat, 27 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/06/27/the-packer-the-windows-and-the-vagrant-box/</guid>
      <description><![CDATA[<p>Hello folks.</p>
<p>Today, I would like to write about something close to my heart recently. I&rsquo;ve been fiddling with Packer, Windows and Vagrant these days. Trying to get a Windows box up in running is a pain in the arse though, so I thought I share my pain with you nice folks out there. Let&rsquo;s begin.</p>
<h1 id="setup">Setup</h1>
<p>First things first. You need <a href="https://packer.io/" target="_blank">Packer</a>, and <a href="https://www.vagrantup.com/" target="_blank">Vagrant</a> obviously. I&rsquo;ll leave the install up to you. Next, you should clone this git repo =&gt; <a href="https://github.com/joefitzgerald/packer-windows" target="_blank">Packer Windows Plugin</a>. This plugin contains all the files necessary to get, install, and provision Windows boxes. Luckily, some very nice and clever folks, figured out a lot of things about how to install stuff on Windows. And given that people at Microsoft realised that sys admins would like to install stuff remotely, there are a bunch of forums and places where you can search for how to install software without user interaction. And this is the keyword you should look for =&gt; <strong>unattended Windows install</strong>.</p>
<p>This will lead you further into the bowls of Windows technology and silent / quiet installs all over the place.</p>
<h1 id="packer-and-answer-files">Packer and Answer Files</h1>
<p>When it comes to installing software on Windows, you have quite a few obstacles to overtake. One of the biggest obstacle you are facing, are restarts. Windows has a special place in hell for that. Every time you install something important which requires system libraries or other kind of configuration which &ldquo;will only take effect after you restart Windows&rdquo; you have to do a restart. Now, a little background on how Packer interacts with Windows. At the moment, it uses OpenSSH to talk to the box which has to be the last which comes up. If it looses connection to openssh because, I don&rsquo;t know, it restarted itself, you loose communication to the box, and the setup process stops in mid tracks.</p>
<p>If you read about that in an earlier attempt to overtake this, you saw that you could use time-outs. You could kill ssh process which presumably makes packer do an attempt to start a new connection. If you are like me, you experienced that Packer does indeed NOT re-try. Because the previous task couldn&rsquo;t finish, the restart killed the ssh service which could tell Packer that the previous task, an install for example, has finished. Hence, Packer will stay there and wait for that task to complete; which will never happen at this point.</p>
<p>What can we do? Enter the world of <a href="https://technet.microsoft.com/en-us/library/cc749113(v=ws.10).aspx" target="_blank">Answer Files</a>. Basically, it&rsquo;s an xml file which sets up Windows. When Packer is running this file, the last service which should be installed, must be openSSH. And after that, in the provisioning phase, you should only install software which does not require restarts.</p>
<p>Let&rsquo;s look at an example.</p>
<h1 id="example-1-windows-updates">Example #1: Windows Updates</h1>
<p>This is another layer of purgatory for Windows. It&rsquo;s updates. The updates take massive amount of times, if you are doing them from scratch, and also require several restart before it&rsquo;s actually done. YouÂ **couldÂ **speed up the process a little bit, if you have a private network share where all of the Windows updates are sitting. At least that way you don&rsquo;t have to download them every time you are creating a box. But you can&rsquo;t avert the install process itself.</p>
<p>Let&rsquo;s look at a setup for packer. Packer works with JSON files for it&rsquo;s configuration. An example for a Windows 7 box would look something like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span><span class="lnt">93
</span><span class="lnt">94
</span><span class="lnt">95
</span><span class="lnt">96
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json">
<span class="p">{</span>
  <span class="nt">&#34;builders&#34;</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;vmware-iso&#34;</span><span class="p">,</span>
      <span class="nt">&#34;iso_url&#34;</span><span class="p">:</span> <span class="s2">&#34;http://care.dlservice.microsoft.com/dl/download/evalx/win7/x64/EN/7600.16385.090713-1255_x64fre_enterprise_en-us_EVAL_Eval_Enterprise-GRMCENXEVAL_EN_DVD.iso&#34;</span><span class="p">,</span>
      <span class="nt">&#34;iso_checksum_type&#34;</span><span class="p">:</span> <span class="s2">&#34;md5&#34;</span><span class="p">,</span>
      <span class="nt">&#34;iso_checksum&#34;</span><span class="p">:</span> <span class="s2">&#34;1d0d239a252cb53e466d39e752b17c28&#34;</span><span class="p">,</span>
      <span class="nt">&#34;headless&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
      <span class="nt">&#34;boot_wait&#34;</span><span class="p">:</span> <span class="s2">&#34;2m&#34;</span><span class="p">,</span>
      <span class="nt">&#34;ssh_username&#34;</span><span class="p">:</span> <span class="s2">&#34;vagrant&#34;</span><span class="p">,</span>
      <span class="nt">&#34;ssh_password&#34;</span><span class="p">:</span> <span class="s2">&#34;vagrant&#34;</span><span class="p">,</span>
      <span class="nt">&#34;ssh_wait_timeout&#34;</span><span class="p">:</span> <span class="s2">&#34;8h&#34;</span><span class="p">,</span>
      <span class="nt">&#34;shutdown_command&#34;</span><span class="p">:</span> <span class="s2">&#34;shutdown /s /t 10 /f /d p:4:1 /c \&#34;Packer Shutdown\&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;guest_os_type&#34;</span><span class="p">:</span> <span class="s2">&#34;windows7-64&#34;</span><span class="p">,</span>
      <span class="nt">&#34;tools_upload_flavor&#34;</span><span class="p">:</span> <span class="s2">&#34;windows&#34;</span><span class="p">,</span>
      <span class="nt">&#34;disk_size&#34;</span><span class="p">:</span> <span class="mi">61440</span><span class="p">,</span>
      <span class="nt">&#34;vnc_port_min&#34;</span><span class="p">:</span> <span class="mi">5900</span><span class="p">,</span>
      <span class="nt">&#34;vnc_port_max&#34;</span><span class="p">:</span> <span class="mi">5980</span><span class="p">,</span>
      <span class="nt">&#34;floppy_files&#34;</span><span class="p">:</span> <span class="p">[</span>
        <span class="s2">&#34;./answer_files/7/Autounattend.xml&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/dis-updates.ps1&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/microsoft-updates.bat&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/win-updates.ps1&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/openssh.ps1&#34;</span>
      <span class="p">],</span>
      <span class="nt">&#34;vmx_data&#34;</span><span class="p">:</span> <span class="p">{</span>
        <span class="nt">&#34;RemoteDisplay.vnc.enabled&#34;</span><span class="p">:</span> <span class="s2">&#34;false&#34;</span><span class="p">,</span>
        <span class="nt">&#34;RemoteDisplay.vnc.port&#34;</span><span class="p">:</span> <span class="s2">&#34;5900&#34;</span><span class="p">,</span>
        <span class="nt">&#34;memsize&#34;</span><span class="p">:</span> <span class="s2">&#34;2048&#34;</span><span class="p">,</span>
        <span class="nt">&#34;numvcpus&#34;</span><span class="p">:</span> <span class="s2">&#34;2&#34;</span><span class="p">,</span>
        <span class="nt">&#34;scsi0.virtualDev&#34;</span><span class="p">:</span> <span class="s2">&#34;lsisas1068&#34;</span>
      <span class="p">}</span>
    <span class="p">},</span>
    <span class="p">{</span>
      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;virtualbox-iso&#34;</span><span class="p">,</span>
      <span class="nt">&#34;iso_url&#34;</span><span class="p">:</span> <span class="s2">&#34;http://care.dlservice.microsoft.com/dl/download/evalx/win7/x64/EN/7600.16385.090713-1255_x64fre_enterprise_en-us_EVAL_Eval_Enterprise-GRMCENXEVAL_EN_DVD.iso&#34;</span><span class="p">,</span>
      <span class="nt">&#34;iso_checksum_type&#34;</span><span class="p">:</span> <span class="s2">&#34;md5&#34;</span><span class="p">,</span>
      <span class="nt">&#34;iso_checksum&#34;</span><span class="p">:</span> <span class="s2">&#34;1d0d239a252cb53e466d39e752b17c28&#34;</span><span class="p">,</span>
      <span class="nt">&#34;headless&#34;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
      <span class="nt">&#34;boot_wait&#34;</span><span class="p">:</span> <span class="s2">&#34;2m&#34;</span><span class="p">,</span>
      <span class="nt">&#34;ssh_username&#34;</span><span class="p">:</span> <span class="s2">&#34;vagrant&#34;</span><span class="p">,</span>
      <span class="nt">&#34;ssh_password&#34;</span><span class="p">:</span> <span class="s2">&#34;vagrant&#34;</span><span class="p">,</span>
      <span class="nt">&#34;ssh_wait_timeout&#34;</span><span class="p">:</span> <span class="s2">&#34;8h&#34;</span><span class="p">,</span>
      <span class="nt">&#34;shutdown_command&#34;</span><span class="p">:</span> <span class="s2">&#34;shutdown /s /t 10 /f /d p:4:1 /c \&#34;Packer Shutdown\&#34;&#34;</span><span class="p">,</span>
      <span class="nt">&#34;guest_os_type&#34;</span><span class="p">:</span> <span class="s2">&#34;Windows7_64&#34;</span><span class="p">,</span>
      <span class="nt">&#34;disk_size&#34;</span><span class="p">:</span> <span class="mi">61440</span><span class="p">,</span>
      <span class="nt">&#34;floppy_files&#34;</span><span class="p">:</span> <span class="p">[</span>
        <span class="s2">&#34;./answer_files/7/Autounattend.xml&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/dis-updates.ps1&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/microsoft-updates.bat&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/win-updates.ps1&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/openssh.ps1&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/oracle-cert.cer&#34;</span>
      <span class="p">],</span>
      <span class="nt">&#34;vboxmanage&#34;</span><span class="p">:</span> <span class="p">[</span>
        <span class="p">[</span>
          <span class="s2">&#34;modifyvm&#34;</span><span class="p">,</span>
          <span class="s2">&#34;{{.Name}}&#34;</span><span class="p">,</span>
          <span class="s2">&#34;--memory&#34;</span><span class="p">,</span>
          <span class="s2">&#34;2048&#34;</span>
        <span class="p">],</span>
        <span class="p">[</span>
          <span class="s2">&#34;modifyvm&#34;</span><span class="p">,</span>
          <span class="s2">&#34;{{.Name}}&#34;</span><span class="p">,</span>
          <span class="s2">&#34;--cpus&#34;</span><span class="p">,</span>
          <span class="s2">&#34;2&#34;</span>
        <span class="p">]</span>
      <span class="p">]</span>
    <span class="p">}</span>
  <span class="p">],</span>
  <span class="nt">&#34;provisioners&#34;</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;shell&#34;</span><span class="p">,</span>
      <span class="nt">&#34;remote_path&#34;</span><span class="p">:</span> <span class="s2">&#34;/tmp/script.bat&#34;</span><span class="p">,</span>
      <span class="nt">&#34;execute_command&#34;</span><span class="p">:</span> <span class="s2">&#34;{{.Vars}} cmd /c C:/Windows/Temp/script.bat&#34;</span><span class="p">,</span>
      <span class="nt">&#34;scripts&#34;</span><span class="p">:</span> <span class="p">[</span>
        <span class="s2">&#34;./scripts/vm-guest-tools.bat&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/chef.bat&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/vagrant-ssh.bat&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/disable-auto-logon.bat&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/enable-rdp.bat&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/compile-dotnet-assemblies.bat&#34;</span><span class="p">,</span>
        <span class="s2">&#34;./scripts/compact.bat&#34;</span>
      <span class="p">]</span>
    <span class="p">}</span>
  <span class="p">],</span>
  <span class="nt">&#34;post-processors&#34;</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;vagrant&#34;</span><span class="p">,</span>
      <span class="nt">&#34;keep_input_artifact&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
      <span class="nt">&#34;output&#34;</span><span class="p">:</span> <span class="s2">&#34;windows_7_{{.Provider}}.box&#34;</span><span class="p">,</span>
      <span class="nt">&#34;vagrantfile_template&#34;</span><span class="p">:</span> <span class="s2">&#34;vagrantfile-windows_7.template&#34;</span>
    <span class="p">}</span>
  <span class="p">]</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>If it feels daunting, don&rsquo;t worry. You&rsquo;ll get used to it fairly quickly. Let&rsquo;s go over section by section on what this does.</p>
<h4 id="builders">Builders</h4>
<p>Packer uses builders for, well, building stuff. These two builders are virtualbox and vmware. I&rsquo;m only interested in virtualbox. This builder downloads win7 and sets up some virtual box details like, disk size, vagrant user, memory, and so and so forth. The interesting part is the floppy part. Here, we can add in some files for setup. We will use this part later on.</p>
<h4 id="provisioners">Provisioners</h4>
<p>Now here is an interesting tid-bit. There are a bunch of provisioners available as plugin for packer.Â Installing them is fairly easy. Packer needs binary plugins. Just copy them into ~/.packer.d/plugins or directly into the packer home directly. I&rsquo;d advice against that. Have them in your own packer.d, that&rsquo;s much cleaner. For binary plugin releases in the Windows side, look here =&gt;Â <a href="https://github.com/packer-community/packer-windows-plugins/releases" target="_blank"><a href="https://github.com/packer-community/packer-windows-plugins/releases">https://github.com/packer-community/packer-windows-plugins/releases</a></a>. If you would like to build them yourself from source, download the source and use go gcc to build it. You will have to <strong>go get</strong> a few packages though. Also you will have to have <strong>$GOPATH</strong>Â (pointing to your own workspace) and <strong>$GOROOT</strong> (pointing to your working go)Â setup. But this is not a Go guide. After that just do **go build main.goÂ **and you have your plugin.</p>
<p>Provisioners are like vagrant provision they will execute post setup stuff on your box. Like installing utils, 7zip, choco, nuget, and so and so forth. There are a few interesting Windows provisioners, like restart-windows, powershell, and Windows shell. Which is like shell, but without the need of pre-setup if you are trying to use it on Windows. The basic shell on Windows is a little clanky and can hang from time-to-time so I recommend using PowerShell or WindowsShell provisioner if you are dealing with Windows post-setup Setup.</p>
<h4 id="post-processor">Post-Processor</h4>
<p>This will create the Vagrant box after everything is done.</p>
<h4 id="running-the-update">Running the Update</h4>
<p>For use, two things are interesting from here at this moment. These guys =&gt;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json"><span class="s2">&#34;./scripts/microsoft-updates.bat&#34;</span><span class="err">,</span>
<span class="s2">&#34;./scripts/win-updates.ps1&#34;</span><span class="err">,</span>
</code></pre></td></tr></table>
</div>
</div><p>These two contain most of the logic which is part of the update process. You should see it in your checked out source. There is some very interesting logic in there which describes how the update happens. Basically it&rsquo;s a loop which re-checks if there are updates available or if a re-start is needed. Packer handles re-starts well at this point in the install because it simply waits for SSH to come only. The rest is handled by Windows.</p>
<p>These scripts are called in the Answer File which the Windows Setup uses for configuration purposes. Take a look at this section:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml">
                <span class="nt">&lt;SynchronousCommand</span> <span class="na">wcm:action=</span><span class="s">&#34;add&#34;</span><span class="nt">&gt;</span>
                    <span class="nt">&lt;CommandLine&gt;</span>cmd.exe /c a:\microsoft-updates.bat<span class="nt">&lt;/CommandLine&gt;</span>
                    <span class="nt">&lt;Order&gt;</span>98<span class="nt">&lt;/Order&gt;</span>
                    <span class="nt">&lt;Description&gt;</span>Enable Microsoft Updates<span class="nt">&lt;/Description&gt;</span>
                <span class="nt">&lt;/SynchronousCommand&gt;</span>
                <span class="nt">&lt;SynchronousCommand</span> <span class="na">wcm:action=</span><span class="s">&#34;add&#34;</span><span class="nt">&gt;</span>
                    <span class="nt">&lt;CommandLine&gt;</span>cmd.exe /c C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -File a:\win-updates.ps1 -MaxUpdatesPerCycle 30<span class="nt">&lt;/CommandLine&gt;</span>
                    <span class="nt">&lt;Description&gt;</span>Install Windows Updates<span class="nt">&lt;/Description&gt;</span>
                    <span class="nt">&lt;Order&gt;</span>100<span class="nt">&lt;/Order&gt;</span>
                    <span class="nt">&lt;RequiresUserInput&gt;</span>true<span class="nt">&lt;/RequiresUserInput&gt;</span>
                <span class="nt">&lt;/SynchronousCommand&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>This is were the floppy part comes on handy. This part uses the scripts bound by floppy and which will be available from a:.</p>
<p>This will install all the updates available. It will take a while. A very very long while. But let&rsquo;s go a step further.</p>
<h1 id="example-2-installing-dotnet-45">Example #2: Installing DotNet 4.5</h1>
<p>Let&rsquo;s assume you want to create a box with visual studio 2013, office, and have choco on it, and a couple of more things for which you need lots of restarts. You could try installing with /norestart switch, which also works; howeverÂ if you definitely need it to restart I suggest installing stuff with the Answer File. For this, let&rsquo;s create a PowerShell script which downloads and installs dotnet 451 which is needed for visual studio ultimate 2013.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-powershell" data-lang="powershell">
<span class="nv">$Logfile</span> <span class="p">=</span> <span class="s2">&#34;C:\Windows\Temp\dotnet-install.log&#34;</span>
<span class="k">function</span> <span class="n">LogWrite</span> <span class="p">{</span>
   <span class="k">Param</span> <span class="p">(</span><span class="no">[string]</span><span class="nv">$logstring</span><span class="p">)</span>
   <span class="nv">$now</span> <span class="p">=</span> <span class="nb">Get-Date</span> <span class="n">-format</span> <span class="n">s</span>
   <span class="nb">Add-Content</span> <span class="nv">$Logfile</span> <span class="n">-value</span> <span class="s2">&#34;$now $logstring&#34;</span>
   <span class="nb">Write-Host</span> <span class="nv">$logstring</span>
<span class="p">}</span>

<span class="n">LogWrite</span> <span class="s2">&#34;Downlading dotNetFx40_Full_x86_x64.&#34;</span>
<span class="k">try</span> <span class="p">{</span>
    <span class="p">(</span><span class="nb">New-Object</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">WebClient</span><span class="p">).</span><span class="n">DownloadFile</span><span class="p">(</span><span class="s1">&#39;http://download.microsoft.com/download/1/6/7/167F0D79-9317-48AE-AEDB-17120579F8E2/NDP451-KB2858728-x86-x64-AllOS-ENU.exe&#39;</span><span class="p">,</span> <span class="s1">&#39;C:\Windows\Temp\dotnet.exe&#39;</span><span class="p">)</span>
<span class="p">}</span> <span class="k">catch</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span> <span class="p">|</span> <span class="nb">Format-List</span> <span class="n">-force</span>
    <span class="n">LogWrite</span> <span class="s2">&#34;Failed to download file.&#34;</span>
<span class="p">}</span>

<span class="n">LogWrite</span> <span class="s2">&#34;Starting installation process...&#34;</span>
<span class="k">try</span> <span class="p">{</span>
    <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="s2">&#34;C:\Windows\Temp\dotnet.exe&#34;</span> <span class="n">-ArgumentList</span> <span class="s2">&#34;/I /q /norestart&#34;</span> <span class="n">-Wait</span> <span class="n">-PassThru</span>
<span class="p">}</span> <span class="k">catch</span> <span class="p">{</span>
    <span class="n">LogWrite</span> <span class="nv">$_</span><span class="p">.</span><span class="n">Exception</span> <span class="p">|</span> <span class="nb">Format-List</span> <span class="n">-force</span>
    <span class="n">LogWrite</span> <span class="s2">&#34;Exception during install process.&#34;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>So this downloads it right from the source. As mentioned earlier, you could have this on a nice shared drive so downloading from the internet is not necessary. The installer is in fact a bit friendly. It has a switch called /q /norestart. The /q is called silent install and the /norestart speaks for itself. If you leave it out, you can use /forcerestart or you could have the following two lines after this finishes:Â <em>LogWrite &ldquo;Resarting Computer.&rdquo;Â Restart-Computer -Force</em>. This will force a restart. You need the -Force because otherwise it won&rsquo;t let it restart while there are active sessions logged on the computer.</p>
<p>Now, let&rsquo;s add this to the answer file:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml">
                <span class="nt">&lt;SynchronousCommand</span> <span class="na">wcm:action=</span><span class="s">&#34;add&#34;</span><span class="nt">&gt;</span>
                    <span class="nt">&lt;CommandLine&gt;</span>cmd.exe /c C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -File a:\install-dotnet-451.ps1 -AutoStart<span class="nt">&lt;/CommandLine&gt;</span>
                    <span class="nt">&lt;Order&gt;</span>98<span class="nt">&lt;/Order&gt;</span>
                    <span class="nt">&lt;Description&gt;</span>Install DotNet 4.5.1.<span class="nt">&lt;/Description&gt;</span>
                <span class="nt">&lt;/SynchronousCommand&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>See, how easy this is? And now we make use of the floppy part of the windows-7.json by adding this line: <strong>&quot;./scripts/install-dotnet-451.ps1&quot;</strong>. Don&rsquo;t forget to append the &ldquo;,&rdquo; at the end of the previous line. This is an array.</p>
<p>We are ready to go. Just run <strong>packer build -only=virtualbox-iso windows-7.json</strong> and you should be done!</p>
<h1 id="example-3-installing-visual-studio-ultimate">Example #3: Installing Visual Studio Ultimate</h1>
<p>Installing visual studio is almost trivial as well. With the addition that visual studio requires an admin.xml for silent install which has a bunch of settings. When you have the admin.xml just bind it into the floppy drive as well and call the visual studio install powershell script like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-powershell" data-lang="powershell">    <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="s2">&#34;C:\Windows\Temp\visualstudioultimate.exe&#34;</span> <span class="n">-ArgumentList</span> <span class="s2">&#34;/Quiet /NoRestart /admin a:\admin.xml&#34;</span> <span class="n">-Wait</span> <span class="n">-PassThru</span>
</code></pre></td></tr></table>
</div>
</div><p>Again, this will take a while&hellip;..</p>
<h1 id="post-setup-provisioning">Post Setup Provisioning</h1>
<p>When all this is done, you can still add some provisioning steps to add some utils with PowerShell or WindowsShell provisioner. I would advice against using simple shell. Bare in mind one other thing. If you have a batch file, and you are calling another batch file in that batch file, like choco install 7zip, it will happen that the install process will hang on installing 7zip. Because in Windows land the called script will not return the exec handler to the caller unless specifically asking for it with <strong>call</strong>. Which means your bat file will look something like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">
call choco install 7zip
call choco install notepadplusplus
</code></pre></td></tr></table>
</div>
</div><p>or</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">
cmd /c choco install 7zip
cmd /c choco install notepadplusplus
</code></pre></td></tr></table>
</div>
</div><p>And so on, and so forth.</p>
<h1 id="wrap-up">Wrap-Up</h1>
<p>So, what have we learned? We have learned that installing software which requires re-start is better left to Windows itself with an answer file. Batch files will not return the handler. SSH <strong>MUST</strong> be the last thing you start up in the answer file. Use PowerShell provisioner or WindowsShell provisioner on Windows.</p>
<p>Hope this helped.</p>
<p>Happy installing, and as always,</p>
<p>Thanks for reading.</p>
<p>Gergely.</p>]]></description>
    </item>
    
    <item>
      <title>Why Lock Picking is like Testing</title>
      <link>https://skarlso.github.io/2015/02/08/why-lock-picking-is-like-testing/</link>
      <pubDate>Sun, 08 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/02/08/why-lock-picking-is-like-testing/</guid>
      <description><![CDATA[<p>Â </p>
<p>Not a great many people know that I&rsquo;m actually into Lock Picking as a hobby. This will not be a tutorial on how to do it, or I won&rsquo;t really talk about how I do it; I would like toÂ write about something completely different. So if you came here for that, here are a few very good resources:</p>
<p><a href="http://www.lockpicking101.com/%20" target="_blank"><a href="http://www.lockpicking101.com/">http://www.lockpicking101.com/</a> </a>- Tutorials</p>
<p><a href="http://www.ukbumpkeys.com/collections/lock-picking" target="_blank"><a href="http://www.ukbumpkeys.com/collections/lock-picking">http://www.ukbumpkeys.com/collections/lock-picking</a></a> - Tools ( UK )</p>
<p><a href="http://www.reddit.com/r/lockpicking/" target="_blank"><a href="http://www.reddit.com/r/lockpicking/">http://www.reddit.com/r/lockpicking/</a></a> - Reddit</p>
<p>For my post, click on.</p>
<p>So, why is lock picking like testing? I saw a great many posts which where trying to compare software testing to some activity. I even knew somebody who compared it to dancing. Because.? I don&rsquo;t know, maybe he was trying out a talk material maybe? And he said - &ldquo;I was in this club and watched a couple dance, and I was thinking, wow, this is like software testing.&rdquo; - I couldn&rsquo;t really react to that. But hey, kudos for out of the box thinking I guess.</p>
<p>But let&rsquo;s see some of the similarities in picking and testing:</p>
<h4 id="thinking">Thinking</h4>
<p>It requires logical, critical thinking. It&rsquo;s a puzzle that you have to solve. A puzzle which you basically solve by testing out solutions and see if they work. You can achieve this by trial and error, something testers face on a daily basis. After awhile you acquire something called finesse. Which will help you identify breaking points more easily. Since you have experience with a certain lock type, you already have a wast knowledge to rely on when you are trying to solve a new lock with the same build. You did your research you know its weaknesses hence you immediately have an attack vector on your hand.</p>
<h4 id="tools">Tools</h4>
<p>Lock picking has a wast number of tools. Each tool is design for a specific purpose. You can reuse tools but they are rarely a fit for other locks. Unless it&rsquo;s a similar one. There are delicate tools and then there are brute force tools, which are very hard to use at first but after you get used to it and know how to handle it, it becomesÂ massively helpful. You can build your own tools or use tools that are built for you by tool experts.</p>
<h4 id="solving-process">Solving Process</h4>
<p>When can you test an application to its fullest extend and capabilities? How can you achieve the most and best testing ever possible? You have to know how the application works. You have to know its components, its abilities, its capabilities andÂ **limits.Â **For Lock Picking to be the best at what you do and to be able to move to a completely new lock and try to pick it, you have to know its flaws. You have to know when, and how it was built. You have to know what makes it tick, how it works, what it uses, how the inside mechanics look like in order to try to exploit them.</p>
<p>After you acquire this knowledge you will be able to build, or purchase a tool which will help you in solving the puzzle. But you were only able to do that because after you researched its manufacturing procedure you know that the last pin is hard to get to and that it hasÂ an anti drilling shield, so drilling is out of the question, and that it has a safety spring which locks the lock permanently upon tampering.Â If you would not be in the possession of this information you could have made a fatal error and could have made the client lost money ( since at that point they pretty much need to break down the door, unless the key is found again ( assuming the picking took place because the key was lost ) ).</p>
<h4 id="last-words">Last Words</h4>
<p>There you have it folks. That&rsquo;s why Lock Picking is like software testing. Knowing structure, inside workings and the proper tools will help to achieve your goal. Just like in testing when you know your field, you know what to use, when, and how. <strong>Knowledge</strong> makes you the Best.</p>
<p>Good luck,</p>
<p>Happy Picking,</p>
<p>Gergely.</p>]]></description>
    </item>
    
    <item>
      <title>Example when to use the Strategy Pattern</title>
      <link>https://skarlso.github.io/2014/02/19/example-when-to-use-the-strategy-pattern/</link>
      <pubDate>Wed, 19 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2014/02/19/example-when-to-use-the-strategy-pattern/</guid>
      <description><![CDATA[<p>Hello folks.</p>
<p>A quick post about an interesting idea.</p>
<p>I want to elaborate on a possibility to use the Strategy Design pattern.</p>
<p>There are many clues that you need one. One is for example if your object has a boolean variable which you use a lot in other classes to determine behavior. Then there is perhaps time to implement a Strategy.</p>
<p>Example:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">	<span class="kd">class</span> <span class="nc">SomeClass</span> <span class="o">{</span>
		<span class="kd">private</span> <span class="kt">boolean</span> <span class="n">stateChange</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>

		<span class="kd">public</span> <span class="nf">SomeClass</span> <span class="o">(</span><span class="n">stateChange</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">this</span><span class="o">.</span><span class="na">stateChange</span> <span class="o">=</span> <span class="n">stateChange</span><span class="o">;</span>
		<span class="o">}</span>

		<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">getStateChange</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">return</span> <span class="n">stateChange</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span>

	<span class="kd">class</span> <span class="nc">SomeUserClass</span> <span class="o">{</span>
		<span class="kd">private</span> <span class="n">SomeClass</span> <span class="n">foo</span><span class="o">;</span>

		<span class="kd">public</span> <span class="nf">SomeUserClass</span><span class="o">()</span> <span class="o">{</span>
			<span class="n">foo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SomeClass</span><span class="o">();</span>
		<span class="o">}</span>

		<span class="kd">public</span> <span class="n">String</span> <span class="nf">someMethod</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">foo</span><span class="o">.</span><span class="na">getStateChange</span><span class="o">())</span> <span class="o">{</span>
				<span class="k">return</span> <span class="s">&#34;Some string&#34;</span><span class="o">;</span>
			<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
				<span class="k">return</span> <span class="s">&#34;Some string else&#34;</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">}</span>
	<span class="o">}</span>

	<span class="kd">class</span> <span class="nc">SomeOtherUserClass</span> <span class="o">{</span>
		<span class="kd">private</span> <span class="n">SomeClass</span> <span class="n">foo</span><span class="o">;</span>

		<span class="kd">public</span> <span class="nf">SomeOtherUserClass</span><span class="o">()</span> <span class="o">{</span>
			<span class="n">foo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SomeClass</span><span class="o">();</span>
		<span class="o">}</span>

		<span class="kd">public</span> <span class="n">String</span> <span class="nf">someMethodTwo</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">foo</span><span class="o">.</span><span class="na">getStateChange</span><span class="o">())</span> <span class="o">{</span>
				<span class="k">return</span> <span class="s">&#34;Some string&#34;</span><span class="o">;</span>
			<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
				<span class="k">return</span> <span class="s">&#34;Some string else&#34;</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">}</span>
	<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>So you have two classes which do something based on some boolean coming from a class. So what you can do in this case, simply extract out that change in state.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">
	<span class="kd">class</span> <span class="nc">Foo</span> <span class="kd">implements</span> <span class="n">Base</span> <span class="o">{</span>
		<span class="kd">public</span> <span class="n">String</span> <span class="nf">getMyString</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">return</span> <span class="s">&#34;Some string&#34;</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span>

	<span class="kd">class</span> <span class="nc">Bar</span> <span class="kd">implements</span> <span class="n">Base</span> <span class="o">{</span>
		<span class="kd">public</span> <span class="n">String</span> <span class="nf">getMyString</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">return</span> <span class="s">&#34;Some string else&#34;</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span>

	<span class="kd">interface</span> <span class="nc">Base</span> <span class="o">{</span>
		<span class="n">String</span> <span class="nf">getMyString</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="kd">class</span> <span class="nc">FooStrategy</span> <span class="o">{</span>

		<span class="kd">public</span> <span class="kd">static</span> <span class="n">Base</span> <span class="nf">getMeAClass</span><span class="o">(</span><span class="kd">enum</span> <span class="n">classChooser</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">switch</span> <span class="n">classChooser</span> <span class="o">{</span>
				<span class="k">case</span> <span class="n">classChooser</span><span class="o">.</span><span class="na">FOO</span> <span class="o">:</span> <span class="k">return</span> <span class="k">new</span> <span class="n">Foo</span><span class="o">();</span> <span class="k">break</span><span class="o">;</span>
				<span class="k">case</span> <span class="n">classChooser</span><span class="o">.</span><span class="na">BAR</span> <span class="o">:</span> <span class="k">return</span> <span class="k">new</span> <span class="n">Bar</span><span class="o">();</span> <span class="k">break</span><span class="o">;</span>
				<span class="k">default</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span> <span class="c1">//yeah yeah I know but I&#39;m writing this in notepad... :)
</span><span class="c1"></span>			<span class="o">}</span>
		<span class="o">}</span>
	<span class="o">}</span>

	<span class="kd">class</span> <span class="nc">SomeUserClass</span> <span class="o">{</span>
		<span class="kd">private</span> <span class="n">Base</span> <span class="n">foo</span><span class="o">;</span>

		<span class="kd">public</span> <span class="nf">SomeUserClass</span><span class="o">()</span> <span class="o">{</span>
			<span class="n">foo</span> <span class="o">=</span> <span class="n">FooStrategy</span><span class="o">.</span><span class="na">getMeAClass</span><span class="o">(</span><span class="n">ClassChooser</span><span class="o">.</span><span class="na">FOO</span><span class="o">);</span>
		<span class="o">}</span>

		<span class="kd">public</span> <span class="n">String</span> <span class="nf">someMethod</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">return</span> <span class="n">foo</span><span class="o">.</span><span class="na">getMyString</span><span class="o">();</span>
		<span class="o">}</span>
	<span class="o">}</span>

	<span class="kd">class</span> <span class="nc">SomeOtherUserClass</span> <span class="o">{</span>
		<span class="kd">private</span> <span class="n">Base</span> <span class="n">bar</span><span class="o">;</span>

		<span class="kd">public</span> <span class="nf">SomeUserClass</span><span class="o">()</span> <span class="o">{</span>
			<span class="n">bar</span> <span class="o">=</span> <span class="n">FooStrategy</span><span class="o">.</span><span class="na">getMeAClass</span><span class="o">(</span><span class="n">ClassChooser</span><span class="o">.</span><span class="na">BAR</span><span class="o">);</span>
		<span class="o">}</span>

		<span class="kd">public</span> <span class="n">String</span> <span class="nf">someMethod</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">return</span> <span class="n">bar</span><span class="o">.</span><span class="na">getMyString</span><span class="o">();</span>
		<span class="o">}</span>
	<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>Now I know this looks like a lot of more code. However imagine this on a much larger scale with lots of implementations for Foo and Bar. Your if statements will get very convulated very quickly. This way you abstract away the choice into a Factory. And you can add as many implementations of Base as you like with as many variants as you like without changing the logic anywhere else but the Factory and the Enum. And the Enum could be a Configuration file and you do something like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">	<span class="kd">public</span> <span class="kd">static</span> <span class="n">Base</span> <span class="nf">getMeAClass</span><span class="o">(</span><span class="n">String</span> <span class="n">className</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">//Where className could be coming from a configuration file
</span><span class="c1"></span>        <span class="n">Class</span> <span class="n">clazz</span> <span class="o">=</span> <span class="n">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="n">className</span><span class="o">);</span>
        <span class="k">return</span> <span class="o">(</span><span class="n">Base</span><span class="o">)</span> <span class="n">clazz</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
	<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>This way you don&rsquo;t even need the Enum anymore. Just use some configuration to determine what class you need at which point in your implementation without using an If statement at all.</p>
<p>Hope this helps.</p>
<p>I whipped this up from memory so please feel free to tell me if I missed something or have a syntax error in there somewhere.</p>
<p>As always,</p>
<p>Thanks for reading!</p>
<p>Gergely.</p>]]></description>
    </item>
    
    <item>
      <title>How to check content header on unknown number of items â€“ Python</title>
      <link>https://skarlso.github.io/2014/02/11/how-to-check-content-header-on-unknown-number-of-items-python/</link>
      <pubDate>Tue, 11 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2014/02/11/how-to-check-content-header-on-unknown-number-of-items-python/</guid>
      <description><![CDATA[<p>Hello guys.</p>
<p>I&rsquo;d like to share a little something with you. It&rsquo;s what I cooked up in Python to check an unknown number of content items in a web application.</p>
<p>Basically the script runs from a script folder under Grails. It goes through all the configured folders where there is static content like images, javascript, css and so on and so forth.</p>
<p>And then with curl it calls these items up in using their respective paths'. This works best on localhost if you have your local environment configured to access these elements because in some places direct access is restricted.</p>
<p>This script only check static content. Dynamically generated content would have to be hard coded to check.</p>
<p>It only generated a file currently with ERROR on a not match an success on match and not found if it encounters an item which it doesn&rsquo;t know about.</p>
<p>So without further ado. The Script:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="ch">#!/usr/bin/python</span>

<span class="kn">import</span> <span class="nn">pycurl</span><span class="o">,</span> <span class="nn">sys</span><span class="o">,</span> <span class="nn">os</span><span class="o">,</span> <span class="nn">urllib</span>

<span class="k">class</span> <span class="nc">Storage</span><span class="p">:</span>
    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">contents</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>

    <span class="k">def</span> <span class="nf">store</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">buf</span><span class="p">):</span>
	<span class="k">if</span> <span class="s1">&#39;Content-Type&#39;</span> <span class="ow">in</span> <span class="n">buf</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">contents</span> <span class="o">=</span> <span class="n">buf</span>

    <span class="k">def</span> <span class="fm">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">contents</span>

<span class="c1">#print retrieved_headers</span>

<span class="n">filesInDir</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">headerRestrictions</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;.css&#39;</span><span class="p">:</span> <span class="s1">&#39;Content-Type: text/css&#39;</span><span class="p">,</span> <span class="s1">&#39;.jpg&#39;</span><span class="p">:</span> <span class="s1">&#39;Content-Type: image/jpeg&#39;</span><span class="p">,</span> <span class="s1">&#39;.ico&#39;</span><span class="p">:</span> <span class="s1">&#39;image/vnd.microsoft.icon&#39;</span><span class="p">,</span> <span class="s1">&#39;.html&#39;</span><span class="p">:</span> <span class="s1">&#39;Content-Type: text/html&#39;</span><span class="p">,</span> <span class="s1">&#39;.js&#39;</span><span class="p">:</span> <span class="s1">&#39;Content-Type: application/javascript&#39;</span><span class="p">,</span> <span class="s1">&#39;.gif&#39;</span><span class="p">:</span> <span class="s1">&#39;Content-Type: image/gif&#39;</span><span class="p">,</span> <span class="s1">&#39;.png&#39;</span><span class="p">:</span> <span class="s1">&#39;Content-Type: image/png&#39;</span><span class="p">,</span> <span class="s1">&#39;.swf&#39;</span><span class="p">:</span> <span class="s1">&#39;Content-Type: application/x-shockwave-flash&#39;</span><span class="p">,</span> <span class="s1">&#39;.json&#39;</span><span class="p">:</span> <span class="s1">&#39;Content-Type: application/json&#39;</span><span class="p">,</span> <span class="s1">&#39;.htc&#39;</span><span class="p">:</span> <span class="s1">&#39;Content-Type: text/x-component&#39;</span><span class="p">,</span> <span class="s1">&#39;.xml&#39;</span><span class="p">:</span> <span class="s1">&#39;Content-Type: application/xml&#39;</span><span class="p">}</span>

<span class="k">for</span> <span class="n">dirname</span><span class="p">,</span> <span class="n">dirnames</span><span class="p">,</span> <span class="n">filenames</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">walk</span><span class="p">(</span><span class="s1">&#39;../web-app&#39;</span><span class="p">):</span>
    <span class="c1"># editing the &#39;dirnames&#39; list will stop os.walk() from recursing into there.</span>
    <span class="k">if</span> <span class="s1">&#39;.git&#39;</span> <span class="ow">in</span> <span class="n">dirnames</span><span class="p">:</span>
        <span class="c1"># don&#39;t go into any .git directories.</span>
        <span class="n">dirnames</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s1">&#39;.git&#39;</span><span class="p">)</span>

    <span class="k">if</span> <span class="s1">&#39;WEB-INF&#39;</span> <span class="ow">in</span> <span class="n">dirnames</span><span class="p">:</span>
        <span class="c1"># don&#39;t go into any WEB-INF directories.</span>
        <span class="n">dirnames</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s1">&#39;WEB-INF&#39;</span><span class="p">)</span>

    <span class="k">if</span> <span class="s1">&#39;test&#39;</span> <span class="ow">in</span> <span class="n">dirnames</span><span class="p">:</span>
        <span class="c1"># don&#39;t go into any test directories.</span>
        <span class="n">dirnames</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s1">&#39;test&#39;</span><span class="p">)</span>

    <span class="k">if</span> <span class="s1">&#39;META-INF&#39;</span> <span class="ow">in</span> <span class="n">dirnames</span><span class="p">:</span>
        <span class="c1"># don&#39;t go into any META-INF directories.</span>
        <span class="n">dirnames</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s1">&#39;META-INF&#39;</span><span class="p">)</span>

    <span class="k">for</span> <span class="n">filename</span> <span class="ow">in</span> <span class="n">filenames</span><span class="p">:</span>
	<span class="n">trimmedDir</span> <span class="o">=</span> <span class="n">dirname</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&#34;web-app/&#34;</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">)</span>
	<span class="n">trimmedDir</span> <span class="o">=</span> <span class="n">trimmedDir</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&#34;../&#34;</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">)</span>
	<span class="n">filesInDir</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">trimmedDir</span><span class="p">,</span> <span class="n">filename</span><span class="p">))</span>
    <span class="c1">#    print os.path.join(dirname, filename)</span>

<span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;headersandfiles.txt&#34;</span><span class="p">,</span> <span class="s2">&#34;w&#34;</span><span class="p">)</span>

<span class="k">for</span> <span class="n">fileName</span> <span class="ow">in</span> <span class="n">filesInDir</span><span class="p">:</span>
    <span class="n">retrieved_body</span> <span class="o">=</span> <span class="n">Storage</span><span class="p">()</span>
    <span class="n">retrieved_headers</span> <span class="o">=</span> <span class="n">Storage</span><span class="p">()</span>
    <span class="n">c</span> <span class="o">=</span> <span class="n">pycurl</span><span class="o">.</span><span class="n">Curl</span><span class="p">()</span>
    <span class="n">fileName</span> <span class="o">=</span> <span class="n">fileName</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&#34; &#34;</span><span class="p">,</span> <span class="s2">&#34;%20&#34;</span><span class="p">)</span>
    <span class="n">url</span> <span class="o">=</span> <span class="s1">&#39;http://localhost:8080/</span><span class="si">%s</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="n">fileName</span>
    <span class="n">c</span><span class="o">.</span><span class="n">setopt</span><span class="p">(</span><span class="n">c</span><span class="o">.</span><span class="n">URL</span><span class="p">,</span> <span class="n">url</span><span class="p">)</span>
    <span class="n">c</span><span class="o">.</span><span class="n">setopt</span><span class="p">(</span><span class="n">c</span><span class="o">.</span><span class="n">WRITEFUNCTION</span><span class="p">,</span> <span class="n">retrieved_body</span><span class="o">.</span><span class="n">store</span><span class="p">)</span>
    <span class="n">c</span><span class="o">.</span><span class="n">setopt</span><span class="p">(</span><span class="n">c</span><span class="o">.</span><span class="n">HEADERFUNCTION</span><span class="p">,</span> <span class="n">retrieved_headers</span><span class="o">.</span><span class="n">store</span><span class="p">)</span>
    <span class="n">c</span><span class="o">.</span><span class="n">perform</span><span class="p">()</span>
    <span class="n">c</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
    <span class="n">fileLine</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span>
    <span class="n">fileNameBase</span><span class="p">,</span> <span class="n">fileExtension</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">splitext</span><span class="p">(</span><span class="n">fileName</span><span class="p">)</span>

    <span class="k">if</span> <span class="n">headerRestrictions</span><span class="o">.</span><span class="n">has_key</span><span class="p">(</span><span class="n">fileExtension</span><span class="p">):</span>
<span class="c1">#	print &#34;Header:%s, Content:%s&#34; % (headerRestrictions[fileExtension], retrieved_headers.__str__())</span>
        <span class="n">fileLine</span> <span class="o">=</span> <span class="s2">&#34;CORRECT: Content: </span><span class="si">%s</span><span class="s2">; Header: </span><span class="si">%s</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="p">(</span><span class="n">fileName</span><span class="p">,</span> <span class="n">retrieved_headers</span><span class="p">)</span> <span class="k">if</span> <span class="n">headerRestrictions</span><span class="p">[</span><span class="n">fileExtension</span><span class="p">]</span> <span class="o">==</span> <span class="n">retrieved_headers</span><span class="o">.</span><span class="fm">__str__</span><span class="p">()</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span> <span class="k">else</span> <span class="s2">&#34;ERROR: Content: </span><span class="si">%s</span><span class="s2">; Header: </span><span class="si">%s</span><span class="s2">; URL: </span><span class="si">%s</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="p">(</span><span class="n">fileName</span><span class="p">,</span> <span class="n">retrieved_headers</span><span class="p">,</span> <span class="s2">&#34;http://localhost:8080/</span><span class="si">%s</span><span class="se">\n</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="n">fileName</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
	<span class="n">fileLine</span> <span class="o">=</span> <span class="s2">&#34;NOT FOUND: Content: </span><span class="si">%s</span><span class="s2">; Header: </span><span class="si">%s</span><span class="s2">&#34;</span> <span class="o">%</span> <span class="p">(</span><span class="n">fileName</span><span class="p">,</span> <span class="n">retrieved_headers</span><span class="p">)</span>

    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">fileLine</span><span class="p">)</span>
    <span class="n">headers</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">retrieved_headers</span><span class="o">.</span><span class="fm">__str__</span><span class="p">())</span>

<span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><p>Hope you like it. Feel free to improve however you want.</p>
<p>Thanks for reading,</p>
<p>Gergely.</p>
]]></description>
    </item>
    
    <item>
      <title>Why does it matter if I sit in an office or in a park</title>
      <link>https://skarlso.github.io/2014/02/09/why-does-it-matter-if-i-sit-in-an-office-or-in-a-park/</link>
      <pubDate>Sun, 09 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2014/02/09/why-does-it-matter-if-i-sit-in-an-office-or-in-a-park/</guid>
      <description><![CDATA[<p>Hello everybody.</p>
<p>I&rsquo;d like to explain a lot about a topic that is very near my heart. If your job is in an office you will understand this.</p>
<p><strong>Why offices?</strong></p>
<p>So why are we sitting together in one big place cramped up with 20-300 other people? Why bother the catering and the ventilation and what not to accommodate these people at one place? Why not just leave them be and let them work at home?</p>
<p>If your job involves interaction than you are in bad luck. You need to be there to talk to people to coordinate your work to gather information and to generally do your work.</p>
<p>But this doesn&rsquo;t answer the question.</p>
<p><strong>Why does it matter if I&rsquo;m in the office or not if my work is done?</strong></p>
<p>That&rsquo;s my big question. Why must I sit in the office if my work is done and in a good shape and good quality? Why must I go in and do my job there if at home I&rsquo;m 50% more efficient because I&rsquo;m in my underwear? In fact, why bother going into and environment where I don&rsquo;t feel comfortable. Where I must go into an office which is cold and doesn&rsquo;t have my favourite chair, my desk and loud heavy metal from speakers.</p>
<p>Well there are couple of things.</p>
<p><strong>Interaction</strong></p>
<p>So like I said earlier there is that. Interaction. You need to collaborate with others. You need to do pair programming, you need to talk to the business analysts, testers, colleagues what nots. In that case, having an environment where everybody is at your disposal is pretty neat and necessary. It cannot be avoided.</p>
<p>Unless everybody is on Skype and available all the time.</p>
<p><strong>Separation of Concern</strong></p>
<p>There is a Design Pattern in software engineering called Separation of Concern. This applies to work places as well. You don&rsquo;t live where you work generally because living could distract working. There are tons and tons of books about how you need a separated environment if you are a writing and you write at home. Because there are too many distractions. And if you are not disciplined enough you will get Zero work done. You will always find something better to do.</p>
<p>That&rsquo;s why the physical act of going to work will switch your brain into work mode and lets you focus better. Whilst going home should do the opposite thing. You should leave work at work.</p>
<p><strong>Show &ldquo;our&rdquo; strength</strong></p>
<p>Generally big companies like to show off. For a company as big as Microsoft or IBM for example it&rsquo;s actually not the product that matters on the market but the yearly growth of employees. Hence, strength in numbers.</p>
<p>Now if some investors get around and want to check out the company they like to see the buzzing bees. They like to see people working, sitting, typing away at stuff. It&rsquo;s all about appearances. A strong, cramped office full of people looks like a very busy hard working company.</p>
<p><strong>Companies could be a bit more flexible though</strong></p>
<p>If I work from 6AM to 3PM because my daughter has a show at 5PM I want to go though I would like to be able to do that without having to go through too much trouble.</p>
<p>Or if I would like to work tomorrow and today I have better things to do, then why not, if my work is done?</p>
<p><strong>Abuse</strong></p>
<p>But then, people are people. Most of them will use every opportunity to slack off. Hence the general perception is that if you are at home you are not working. So to be better able to monitor you, all of the employees must be in one place.</p>
<p><strong>Last words</strong></p>
<p>So really there needs to be a better agreement between both sides. Workers need to be honest and diligent. And workplaces need to be more flexible and understanding as long as the job is done. Because people will work a LOT better and more efficient if they are HAPPY in their work environment.</p>
<p>That&rsquo;s what I&rsquo;m proposing.</p>
<p>As ever,</p>
<p>Thanks for reading.</p>
<p>Have a nice day.</p>
<p>Gergely.</p>
]]></description>
    </item>
    
    <item>
      <title>Sublime text</title>
      <link>https://skarlso.github.io/2013/06/24/sublime-text-5/</link>
      <pubDate>Mon, 24 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2013/06/24/sublime-text-5/</guid>
      <description><![CDATA[<p>Hello everybody. I&rsquo;ve been messing around with sublime for some time now. And been using it to write entires and stuff. So here I was thinking why the hell I should not us it as my main blog entry writer. And being the curious guy I was I thought that creating a plugin that let&rsquo;s you submit your post from your favorite editor is just the thing I need.</p>
<p>So without any further ado here it is. The wordpress blog entry submitter plugin for sublime text: <a href='https://github.com/Skarlso/SublimeWordpressPlugin' target='blank'>Sublime WordPress Plugin</a></p>
<p>Please enjoy.</p>
<p>Gergely.</p>
]]></description>
    </item>
    
    <item>
      <title>Cucumber-Jvm And @AfterAll</title>
      <link>https://skarlso.github.io/2013/04/18/cucumber-jvm-and-afterall/</link>
      <pubDate>Thu, 18 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2013/04/18/cucumber-jvm-and-afterall/</guid>
      <description><![CDATA[<p>Hey folks.</p>
<p>I find out something new about cucumber-jvm every day.</p>
<p>If you want something that is executed after all of the tests have finished you must use the Java shutdownHook. It&rsquo;s simple really you add in a block of code that can run right before the JVM quits. I know I know. It sounds awful but I found out that this is the actual way of doing this with java / cucumber.</p>
<p>Anyways.</p>
<p>Here is something to do when all of your test quit-&gt;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">attachShutDownHook</span><span class="o">(){</span>
        <span class="n">Runtime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">().</span><span class="na">addShutdownHook</span><span class="o">(</span><span class="k">new</span> <span class="n">Thread</span><span class="o">()</span> <span class="o">{</span>
            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
                <span class="n">Properties</span> <span class="n">properties</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">getProperties</span><span class="o">();</span>
                <span class="n">String</span> <span class="n">filename</span> <span class="o">=</span> <span class="n">properties</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&#34;filename&#34;</span><span class="o">);</span>
                <span class="n">String</span> <span class="n">path</span> <span class="o">=</span> <span class="n">properties</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&#34;path&#34;</span><span class="o">);</span>
                <span class="n">List</span><span class="o">&lt;</span><span class="n">Story</span><span class="o">&gt;</span> <span class="n">stories</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>

                <span class="n">Path</span> <span class="n">file</span> <span class="o">=</span> <span class="n">Paths</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">path</span> <span class="o">+</span> <span class="n">filename</span><span class="o">);</span>
                <span class="k">try</span> <span class="o">{</span>
                    <span class="k">if</span> <span class="o">(</span><span class="n">Files</span><span class="o">.</span><span class="na">exists</span><span class="o">(</span><span class="n">file</span><span class="o">))</span> <span class="o">{</span>
                        <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">lines</span> <span class="o">=</span> <span class="n">Files</span><span class="o">.</span><span class="na">readAllLines</span><span class="o">(</span><span class="n">file</span><span class="o">,</span> <span class="n">Charset</span><span class="o">.</span><span class="na">defaultCharset</span><span class="o">());</span>
                        <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">line</span> <span class="o">:</span> <span class="n">lines</span><span class="o">)</span> <span class="o">{</span>
                            <span class="c1">//add file lines to a report here
</span><span class="c1"></span>                        <span class="o">}</span>
                    <span class="o">}</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">logger</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">&#34;Exception occurred: &#34;</span> <span class="o">+</span> <span class="n">e</span><span class="o">.</span><span class="na">getLocalizedMessage</span><span class="o">());</span>
                <span class="o">}</span>
                    <span class="c1">//send report to a remote location here
</span><span class="c1"></span>                    <span class="c1">//since this is a shutdown hook this should take only a few seconds.
</span><span class="c1"></span>            <span class="o">}</span>
        <span class="o">});</span>
        <span class="n">logger</span><span class="o">.</span><span class="na">infor</span><span class="o">(</span><span class="s">&#34;Shut Down Hook Attached.&#34;</span><span class="o">);</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>So there you go. You would need to call this in a @BeforeClass to have it attached. This is a small hook attached after each test has run which would submit a report built up from a file. Why not use a listener or a custom report generator or whatever? Because maybe you have the report done in a remote place where you need to place a csv file which will be available to everybody to look at. And you want the report to be sent and generated dynamically. Or you have some clean up to do after your suit is done.</p>
<p>In ruby the @AfterAll is actually equivalent to this which in ruby land would be at_exit.</p>
<p>For example:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-ruby" data-lang="ruby">  <span class="nb">at_exit</span> <span class="k">do</span>
    <span class="c1"># Global teardown</span>
    <span class="no">TempFileManager</span><span class="o">.</span><span class="n">clean_up</span>
  <span class="k">end</span>
</code></pre></td></tr></table>
</div>
</div><p>So there it is. Hope this helped.</p>
<p>Cheers,</p>
<p>And as always,</p>
<p>Have a nice day!</p>
<p>G.</p>
]]></description>
    </item>
    
    <item>
      <title>Cucumber Test Name and Tags on Feature</title>
      <link>https://skarlso.github.io/2013/04/15/cucumber-test-name-and-tags-on-feature/</link>
      <pubDate>Mon, 15 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2013/04/15/cucumber-test-name-and-tags-on-feature/</guid>
      <description><![CDATA[<p>Hello everybody.</p>
<p>I would like to show you a gem today that I found out.</p>
<p>Apparently there is no easy way to get to the name of an executing cucumber scenario in cucumber-jvm</p>
<p>You can try something like that:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="nd">@After</span> <span class="c1">//this is cucumbers @Afters
</span><span class="c1"></span><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">afterExecution</span><span class="o">(</span><span class="n">Scenario</span> <span class="n">scenario</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">logger</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="s">&#34;The status of the test is: &#34;</span> <span class="o">+</span> <span class="n">scenario</span><span class="o">.</span><span class="na">getStatus</span><span class="o">());</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>But that isn&rsquo;t giving you too much now is it? And the API of scenario is as small as it can get. It offers you four options:</p>
<ul>
<li>Ember</li>
<li>getStatus</li>
<li>isFailed</li>
<li>write</li>
</ul>
<p>That doesn&rsquo;t help me. I wanted to get the name of the executed feature and the tags on that particular feature. I thought that&rsquo;s got to be as easy as just getting a scenario accessing the feature and get the tags. Hooooowww boy I was wrong.</p>
<p>I ended up with this..</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="n">Field</span> <span class="n">f</span> <span class="o">=</span> <span class="n">scenario</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getDeclaredField</span><span class="o">(</span><span class="s">&#34;reporter&#34;</span><span class="o">);</span>
<span class="n">f</span><span class="o">.</span><span class="na">setAccessible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
<span class="n">JUnitReporter</span> <span class="n">reporter</span> <span class="o">=</span> <span class="o">(</span><span class="n">JUnitReporter</span><span class="o">)</span> <span class="n">f</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">scenario</span><span class="o">);</span>

<span class="n">Field</span> <span class="n">executionRunnerField</span> <span class="o">=</span> <span class="n">reporter</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getDeclaredField</span><span class="o">(</span><span class="s">&#34;executionUnitRunner&#34;</span><span class="o">);</span>
<span class="n">executionRunnerField</span><span class="o">.</span><span class="na">setAccessible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
<span class="n">ExecutionUnitRunner</span> <span class="n">executionUnitRunner</span> <span class="o">=</span> <span class="o">(</span><span class="n">ExecutionUnitRunner</span><span class="o">)</span> <span class="n">executionRunnerField</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">reporter</span><span class="o">);</span>

<span class="n">Field</span> <span class="n">cucumberScenarioField</span> <span class="o">=</span> <span class="n">executionUnitRunner</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getDeclaredField</span><span class="o">(</span><span class="s">&#34;cucumberScenario&#34;</span><span class="o">);</span>
<span class="n">cucumberScenarioField</span><span class="o">.</span><span class="na">setAccessible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
<span class="n">CucumberScenario</span> <span class="n">cucumberScenario</span> <span class="o">=</span> <span class="o">(</span><span class="n">CucumberScenario</span><span class="o">)</span> <span class="n">cucumberScenarioField</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">executionUnitRunner</span><span class="o">);</span>

<span class="n">Field</span> <span class="n">cucumberBackgroundField</span> <span class="o">=</span> <span class="n">cucumberScenario</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getDeclaredField</span><span class="o">(</span><span class="s">&#34;cucumberBackground&#34;</span><span class="o">);</span>
<span class="n">cucumberBackgroundField</span><span class="o">.</span><span class="na">setAccessible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
<span class="n">CucumberBackground</span> <span class="n">cucumberBackground</span> <span class="o">=</span> <span class="o">(</span><span class="n">CucumberBackground</span><span class="o">)</span> <span class="n">cucumberBackgroundField</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">cucumberScenario</span><span class="o">);</span>

<span class="n">Field</span> <span class="n">cucumberFeatureField</span> <span class="o">=</span> <span class="n">cucumberBackground</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getSuperclass</span><span class="o">().</span><span class="na">getDeclaredField</span><span class="o">(</span><span class="s">&#34;cucumberFeature&#34;</span><span class="o">);</span>
<span class="n">cucumberFeatureField</span><span class="o">.</span><span class="na">setAccessible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
<span class="n">CucumberFeature</span> <span class="n">cucumberFeature</span> <span class="o">=</span> <span class="o">(</span><span class="n">CucumberFeature</span><span class="o">)</span> <span class="n">cucumberFeatureField</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">cucumberBackground</span><span class="o">);</span>
</code></pre></td></tr></table>
</div>
</div><p>Ohhhhh yes! The fields which I wanted were all private and not accessible. I&rsquo;m sure there was a reason behind this decision but if it was sensible it eludes me. But in the world of programming nothing is impossible they say so there.</p>
<p>In cucumberFeature there will be everything what you need. Tags, Names, Tests, Execution time. Everything.</p>
<p>I know that cucumber runs with jUnit so if there is a better way to do this please for the love of my sanity share it with me.</p>
<p>Thank you for reading.</p>
<p>And as always,</p>
<p>Have a nice day.</p>
<p>G.</p>
]]></description>
    </item>
    
    <item>
      <title>Itâ€™s all about human interaction.</title>
      <link>https://skarlso.github.io/2013/01/31/its-all-about-human-interaction/</link>
      <pubDate>Thu, 31 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2013/01/31/its-all-about-human-interaction/</guid>
      <description><![CDATA[<p>Hello everybody.</p>
<p>Today I would like to write about something I experienced over the years of being in the software industry.</p>
<p><strong>Some History</strong></p>
<p>I&rsquo;ve been a tester for a long time now. I&rsquo;ve been up and down and down and up. I struggled for a very long time until I became somebody who I am today. And I still have many things to learn ahead of me.</p>
<p>I learned from many people. I personally thing my greatest influence on testing was James Marcus Bach and his Brother Jon Bach you should definitely check out these guys. It took me a long time to get to where I am today. And after ~10 years now I can state with a reasonable confidence that this industry is no longer about technology or solutions to technological problems.</p>
<p><strong>Surly you Jest.</strong></p>
<p>Nope. I&rsquo;m not joking. I can see people struggling to understand people and mostly it&rsquo;s not because of knowledge differences it&rsquo;s because they simply can&rsquo;t stand each other. Or they simply think that their solution must be better then the one the other has. Or the guy just woke up with a bad foot.</p>
<p>And industrial problems? Management? Sure it can be knowledge but mostly it&rsquo;s simply ignorance and pride. <strong>Pride</strong> because he / she does not want to admit that they don&rsquo;t understand something. <strong>Pride</strong> to ask a question that might make them look stupid. I&rsquo;d rather look stupid for five minutes then for the rest of my life. I rather ask the question that I want to know because I can&rsquo;t make a proper decision without it. I rather learn then be ignorant for the rest of my life.</p>
<p>People need to overcome their differences. People need to understand that this behaviour hurts the company. It hurts them it hurts the people around them and the product. Swallow your pride and be a bigger man / woman. Face your fear. Be Strong. Be clever be intelligent be a proper grown up human being!!!!</p>
<p>You hate my face? SAY IT IN MY FACE!! I can&rsquo;t resolve issues I DON&rsquo;T KNOW ABOUT!!</p>
<p><strong>Last but not least.</strong></p>
<p>Grow up people. Be nice. Be curious. Don&rsquo;t be afraid to ask. Don&rsquo;t be afraid to ask again if you still don&rsquo;t understand. It might be that the person speaking has a completely different view of something and it might be that nobody really understands him and they are just afraid to ask. And if you ask something stupid? Who cares.. You learned from it.</p>
<p>Be a professional. A professional is not afraid. And encourage others to be one too. In the today&rsquo;s technological world solutions can be found by the dozens on the internet. You will be a better work force by adjusting your personal habits a little bit.</p>
<p>Be nice.</p>
<p>And as always,</p>
<p>Thanks for reading.</p>
<p>Gergely.</p>
]]></description>
    </item>
    
    <item>
      <title>From Chaos There Shall Be Order</title>
      <link>https://skarlso.github.io/2013/01/04/from-chaos-there-shall-be-order/</link>
      <pubDate>Fri, 04 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2013/01/04/from-chaos-there-shall-be-order/</guid>
      <description><![CDATA[<p>Dear Readers.</p>
<p>Today I want to talk to you about something I discovered over years of working and experience.</p>
<p>Also something that I can see in the world repeating over and over again. Not just in Software business but also in History in Human nature in Physics and Systems.</p>
<p>So let&rsquo;s see what I&rsquo;m talking about.</p>
<p><strong>What is Chaos?</strong></p>
<p>Chaos is a state of utter confusion. Chaos is the opposite of order. Chaos is when everybody does what they want without thinking about the consequences.</p>
<p>Does Chaos hurt? Of course it does. From Chaos there can be no production. From Chaos there can be no profit. From Chaos there can be no life.</p>
<p>Is that really true? It sort of is. Remember the Big Bang. Initially it is believed that there was order. The universe was a perfect gem with the four forces ( Gravity, Electromagnetic, Weak Nuclear and Strong Nuclear force ) united. And then a Higgs came around and made it BOOM! And so there was Chaos. And from Chaos, with a snowballs chance, there was life.</p>
<p><strong>So then why is Chaos bad?</strong></p>
<p>Companies usually don&rsquo;t have the time or the money to wait for that Snowballs chance to come to flourish. So order is required for life to become great.</p>
<p>Take for example the Chinese Emperor Qin Shi Huang. He was the one uniting China. Sure, he killed a LOT of people. And China is oppressed every since. However he did introduce a lot of new concepts and reforms which wouldn&rsquo;t have been possible in the Chaos. And today China is one of the leading nations if not The.</p>
<p>Before Emperor Qin begun his journey there were 9 different ways of writing down the world &lsquo;sword&rsquo; in chinese. This was unacceptable. After the Emperor succeeded he unified the writing and made communication easier.</p>
<p><strong>Striving for order</strong></p>
<p>People have always strived for order. For simplicity. For unification. For &lsquo;one&rsquo; instead of &lsquo;many&rsquo;. We have stories that say there is power in many. Physicist are continuously trying to unify the laws of physics in the beautiful little equations. Like Einsteins law of relativity. That small equations revolutionised the world. And it came from unification.</p>
<p><strong>So then what are the downsides of unification?</strong></p>
<p>Everything comes with a price of course. The unification bought oppression to China and the loss of the individuum. Fantasy and thoughts got all sacked. People become like Borgs. However the Country evolved immensely under one banner. But what does this all have to do with Testing?</p>
<p><strong>Applying Order</strong></p>
<p>Think about your company. Think about how your developers work. Does everybody use a different building platform? Does everybody use a different operating system? Do they run the same command to build your environment? Did you have any kind of problems because of that? I&rsquo;m sure you did.</p>
<p>There are benefits of it. At least you will know if your application is working in a different environment. But do you want that? Is it worth it? After all we live in an age were there are numerous possibilities, environments, languages, command line options etc etc.</p>
<p>But think about it. Did the diversity bring you more profit or did it hurt you more? Which one is applicable for you? If your developers do not have the ability to properly govern them selfs then you need order. You need a unified language, you need a unified environment and unified processes Agile or not Agile. Your company wont be successful if you want to be Agile just because it is the Current Trend. You need to be pragmatic about it and applied were it is reasonable. There is nothing wrong in introducing a standard or a code review process or a coding guid line or some standards here and there if it HELPS.</p>
<p>There will be friction. People tend to resist change. There will be losses. But a unified company is a strong company. And when the new guy arrives? He wont have any kind of a problem installing your software and beginning working on it because he doesn&rsquo;t have to go around and scoop information together from at least ten people and do it in an eleventh way at the end.</p>
<p><strong>Last Words</strong></p>
<p>So think about this. Is your company strong enough to uphold Chaos and make it flourish? Or is it a bunch of people doing whatever they think is right because of a sense of individuality which they don&rsquo;t want to give up?</p>
<p>This is for you to decide.</p>
<p>And as always,</p>
<p>Thanks for reading.</p>
<p>Gergely.</p>
]]></description>
    </item>
    
    <item>
      <title>How to eliminate a parameter boom</title>
      <link>https://skarlso.github.io/2012/10/09/how-to-eliminate-a-parameter-boom/</link>
      <pubDate>Tue, 09 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2012/10/09/how-to-eliminate-a-parameter-boom/</guid>
      <description><![CDATA[<p>Hello folks.</p>
<p>Today I want to write about a little trick I learned.</p>
<p>If you are working with legacy code and you don&rsquo;t have the chance to eliminate core design problems, you can use this little pattern to help you out.</p>
<p><strong>Problem</strong></p>
<p>Problem is that you have a class that has a gazillion collaborators and at some point in time one of the clever devs thought it would be a cool idea to do dependancy injection via the constructor. We all know that doing this makes the class immutable which is very good for a number of reasons. However it doesn&rsquo;t provide a flexible solution if you want to leave out one or two collabs. For that your would have to create Adapter constructors and chain them upwards which would get very ugly very fast. While using JavaBeans getters and setters can leave your class in a harmful state like not at all or partially initialised.</p>
<p>So what&rsquo;s a good solution then?</p>
<p><strong>Solution</strong></p>
<p>One possible solution would be to use some kind of initialisation framework like Springs @Autowired. But cluttering your classes with that isn&rsquo;t really pretty either. But it&rsquo;s A solution.</p>
<p>Another solution is the usage of a builder pattern.</p>
<p>Consider this class:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">VeryImportantService</span> <span class="o">{</span>

        <span class="kd">public</span> <span class="nf">VeryImportantService</span><span class="o">(</span><span class="n">CollabOne</span> <span class="n">collabOne</span><span class="o">,</span> <span class="n">CollabTwo</span> <span class="n">collabTwo</span><span class="o">,</span> <span class="n">CollabThree</span> <span class="n">collabThree</span><span class="o">,</span> <span class="n">CollabFour</span> <span class="n">collabFour</span><span class="o">,</span>
            <span class="n">CollabFive</span> <span class="n">collabFive</span><span class="o">,</span> <span class="n">CollabSix</span> <span class="n">collabSix</span><span class="o">)</span> <span class="o">{</span>
            <span class="o">.</span>
            <span class="o">.</span>
            <span class="o">.</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>Don&rsquo;t forget that we want these to be optional. I would like to leave out two or three here and there.</p>
<p>The builder let&rsquo;s you do that. It looks something like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">VeryImportantService</span> <span class="o">{</span>

        <span class="kd">private</span> <span class="n">CollabOne</span> <span class="n">collabOne</span><span class="o">;</span>
        <span class="kd">private</span> <span class="n">CollabTwo</span> <span class="n">collabTwo</span><span class="o">;</span>
        <span class="kd">private</span> <span class="n">CollabThree</span> <span class="n">collabThree</span><span class="o">;</span>
        <span class="kd">private</span> <span class="n">CollabFour</span> <span class="n">collabFour</span><span class="o">;</span>
        <span class="kd">private</span> <span class="n">CollabFive</span> <span class="n">collabFive</span><span class="o">;</span>
        <span class="kd">private</span> <span class="n">CollabSix</span> <span class="n">collabSix</span><span class="o">;</span>


        <span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nf">Builder</span><span class="o">()</span> <span class="o">{</span>
            <span class="kd">private</span> <span class="n">CollabOne</span> <span class="n">collabOne</span><span class="o">;</span>
            <span class="kd">private</span> <span class="n">CollabTwo</span> <span class="n">collabTwo</span><span class="o">;</span>
            <span class="kd">private</span> <span class="n">CollabThree</span> <span class="n">collabThree</span><span class="o">;</span>
            <span class="kd">private</span> <span class="n">CollabFour</span> <span class="n">collabFour</span><span class="o">;</span>
            <span class="kd">private</span> <span class="n">CollabFive</span> <span class="n">collabFive</span><span class="o">;</span>
            <span class="kd">private</span> <span class="n">CollabSix</span> <span class="n">collabSix</span><span class="o">;</span>

            <span class="kd">public</span> <span class="nf">Builder</span><span class="o">()</span> <span class="o">{}</span>

            <span class="kd">public</span> <span class="n">Builder</span> <span class="nf">collabOne</span><span class="o">(</span><span class="n">CollabOne</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">this</span><span class="o">.</span><span class="na">collabOne</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
                <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
            <span class="o">}</span>

            <span class="kd">public</span> <span class="n">Builder</span> <span class="nf">collabTwo</span><span class="o">(</span><span class="n">CollabTwo</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">this</span><span class="o">.</span><span class="na">collabTwo</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
                <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
            <span class="o">}</span>

            <span class="o">.</span>
            <span class="o">.</span>
            <span class="o">.</span>

            <span class="kd">public</span> <span class="n">VeryImportantService</span> <span class="nf">build</span><span class="o">()</span> <span class="o">{</span>
                <span class="k">return</span> <span class="k">new</span> <span class="n">VeryImportantService</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
            <span class="o">}</span>

        <span class="o">}</span>

        <span class="c1">//private constructor
</span><span class="c1"></span>        <span class="kd">private</span> <span class="nf">VeryImportantService</span><span class="o">(</span><span class="n">Builder</span> <span class="n">builder</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">collabOne</span> <span class="o">=</span> <span class="n">builder</span><span class="o">.</span><span class="na">collabOne</span><span class="o">;</span>
            <span class="k">this</span><span class="o">.</span><span class="na">collabTwo</span> <span class="o">=</span> <span class="n">builder</span><span class="o">.</span><span class="na">collabTwo</span><span class="o">;</span>
            <span class="o">.</span>
            <span class="o">.</span>
            <span class="o">.</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>Now. calling this would look something like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="n">VeryImportantService</span> <span class="n">veryImportantService</span> <span class="o">=</span> <span class="k">new</span> <span class="n">VeryImportantService</span><span class="o">.</span><span class="na">Builder</span><span class="o">().</span><span class="na">collabOne</span><span class="o">(</span><span class="n">someValueOne</span><span class="o">).</span><span class="na">collabTwo</span><span class="o">(</span><span class="n">someValueTwo</span><span class="o">).</span><span class="na">collabFive</span><span class="o">(</span><span class="n">someValueFive</span><span class="o">);</span>
</code></pre></td></tr></table>
</div>
</div><p>This enables you to be flexible HOWEVER!! I HATE train wrecks. So I would probably tweak it not to return things, but set them. Then you would end up calling then line by line. Which is still not the best but better then the alternative.</p>
<p><strong>End words</strong></p>
<p>So there you go. This is A solution not THE solution obviously. The best would be to NOT design such a monster at all. If you have any better ideas please feel free to share. I would gladly put them on my blog.</p>
<p>As always,</p>
<p>Thanks for reading,</p>
<p>Gergely.</p>
]]></description>
    </item>
    
    <item>
      <title>TDD and Game of Life</title>
      <link>https://skarlso.github.io/2012/07/12/tdd-and-game-of-life/</link>
      <pubDate>Thu, 12 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2012/07/12/tdd-and-game-of-life/</guid>
      <description><![CDATA[<p>So today at 8-12PM I had a great session with two friends of mine. It was awesome. Like a mini code retreat.</p>
<p>We set down in a musky bar, drank wine and beer and cider, and decided to practice some TDD with the well known problem of <a href="http://en.wikipedia.org/wiki/Conway's_Game_of_Life" target="_blank">Conway&rsquo;s Game of Life</a>. This challenge is really interesting. I never done it before, ever. So it was a really good practice for me.</p>
<p>So.</p>
<p><strong>In the beginning there was Test</strong></p>
<p>One of my friends and I started out by developing the implementation for the game while the second one was mentoring and couching us. As with any problem I&rsquo;m facing now days, I started with writing a failing test first. I didn&rsquo;t write any kind of production code yet. I wrote a test testing for having the class called game of life.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="nd">@Test</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">shouldHaveClassForGameOfLife</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">GameOfLife</span> <span class="n">gameOfLife</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GameOfLife</span><span class="o">();</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>This wasn&rsquo;t compiling of course because I didn&rsquo;t have any kind of GameOfLife class. But intelliJ is so intelligent that I simply pressed Alt+Enter and created the class immediately. The class didn&rsquo;t have anything in it, but I already had a passing test.</p>
<p>So this went on and on and I created one test after another while my other coding friend did the same.</p>
<p><strong>Now the amazing part</strong></p>
<p>I begun working on the Grid. A simple octagonal coordinating system. This was represented in the beginning with a simple two dimensional array with Cells in it.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="n">Cells</span><span class="o">[][]</span> <span class="n">cells</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Cells</span><span class="o">[</span><span class="n">50</span><span class="o">][</span><span class="n">50</span><span class="o">];</span>
</code></pre></td></tr></table>
</div>
</div><p>This of course wasn&rsquo;t dynamic. I didn&rsquo;t care about that yet. I had my grid of cells. These cells were initially all dead.</p>
<p>Now, the interesting part is that as I developed my Grid finding out the Cells neighbours and counting them, my friend worked on the Cells themselves and getting their next state and killing them based on the rules.</p>
<p>We never talked to each other, didn&rsquo;t agree on roles or directions or anything. And even so at the and. We were at a stage where we met in the middle and could merge our codes! Our little game of life evolved with a push of a button. ( Three actually. )</p>
<p>This was simply amazing. Without ever talking about the direction we want to go we created a working code base that could be merged!</p>
<p><strong>It just works</strong></p>
<p>Before TDD I would have tackled this problem much differently. And it would have taken me much more time too. This was like an hour or so.</p>
<p>TDD helped me break down the job into small, manageable tasks. I created and deleted and rewrote tests as I went on and on and developed the algorithm for my Grid and Cell. And eventually the problem slowly unfolded itself right before my eyes. I began to see the connections. I began to see the beauty. I began to understand! This is something I rarely enjoyed previously without using TDD.</p>
<p><strong>Summary</strong></p>
<p>I recommend for you guys to do the same. Just sit down, find a problem, find a coding kata and just do it with TDD. With PROPER TDD.</p>
<p>Here are some good sites for katas and problems:</p>
<p><a href="http://codekata.pragprog.com/" target="_blank"><a href="http://codekata.pragprog.com/">http://codekata.pragprog.com/</a></a></p>
<p><a href="http://www.spoj.pl/problems/classical/" target="_blank"><a href="http://www.spoj.pl/problems/classical/">http://www.spoj.pl/problems/classical/</a></a></p>
<p>Just select a problem and then start cracking on it. Do this every time you have some free time. Like a martial art trainee doing basic exercises and you will get better at problem solving and at TDD too. I promise.</p>
<p>Happy coding and good night!</p>
<p>Gergely.</p>
]]></description>
    </item>
    
    <item>
      <title>Solution to Wrap Kata</title>
      <link>https://skarlso.github.io/2012/06/26/solution-to-wrap-kata/</link>
      <pubDate>Tue, 26 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2012/06/26/solution-to-wrap-kata/</guid>
      <description><![CDATA[<p>My solution to the String Wrap Kata. The goal is to have it wrap a text on a given column width.</p>
<p>It is not the best solution but this is my first try. I did it with TDD so there were tests first, which I&rsquo;m not going to copy in..</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">WrapKata</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">wrap</span><span class="o">(</span><span class="n">String</span> <span class="n">input</span><span class="o">,</span> <span class="kt">int</span> <span class="n">columnSize</span><span class="o">)</span> <span class="o">{</span>

        <span class="k">if</span> <span class="o">(</span><span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">columnSize</span><span class="o">)</span>
            <span class="k">return</span> <span class="n">input</span><span class="o">;</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">wrapLines</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">columnSize</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="n">String</span> <span class="nf">wrapLines</span><span class="o">(</span><span class="n">String</span> <span class="n">input</span><span class="o">,</span> <span class="kt">int</span> <span class="n">columnSize</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">breakPoint</span> <span class="o">=</span> <span class="n">getBreakPoint</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">columnSize</span><span class="o">);</span>

        <span class="n">String</span> <span class="n">head</span> <span class="o">=</span> <span class="n">createHead</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">breakPoint</span><span class="o">);</span>
        <span class="n">String</span> <span class="n">tail</span> <span class="o">=</span> <span class="n">createTail</span><span class="o">(</span><span class="n">input</span><span class="o">,</span> <span class="n">breakPoint</span><span class="o">);</span>

        <span class="k">return</span> <span class="n">head</span> <span class="o">+=</span> <span class="s">&#34;\n&#34;</span> <span class="o">+</span> <span class="n">wrap</span><span class="o">(</span><span class="n">tail</span><span class="o">,</span> <span class="n">columnSize</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="n">String</span> <span class="nf">createTail</span><span class="o">(</span><span class="n">String</span> <span class="n">input</span><span class="o">,</span> <span class="kt">int</span> <span class="n">breakPoint</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">input</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">breakPoint</span><span class="o">).</span><span class="na">trim</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="n">String</span> <span class="nf">createHead</span><span class="o">(</span><span class="n">String</span> <span class="n">input</span><span class="o">,</span> <span class="kt">int</span> <span class="n">breakPoint</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">input</span><span class="o">.</span><span class="na">substring</span><span class="o">(,</span> <span class="n">breakPoint</span><span class="o">).</span><span class="na">trim</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">int</span> <span class="nf">getBreakPoint</span><span class="o">(</span><span class="n">String</span> <span class="n">input</span><span class="o">,</span> <span class="kt">int</span> <span class="n">columnSize</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">input</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s">&#34; &#34;</span><span class="o">))</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">input</span><span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="sc">&#39; &#39;</span><span class="o">,</span> <span class="n">columnSize</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">columnSize</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
    </item>
    
    <item>
      <title>JMS Connection setup and Framework</title>
      <link>https://skarlso.github.io/2012/03/04/jms-connection-setup-and-framework/</link>
      <pubDate>Sun, 04 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2012/03/04/jms-connection-setup-and-framework/</guid>
      <description><![CDATA[<p>Hello chumps.</p>
<p>Today I want to write about jms connection testing with a small framework. I wrote a small thing using a factory object model. It&rsquo;s a lead, a proof of concept. You can use this to go onward.</p>
<p>First, let&rsquo;s begin with the JMS connection it self.</p>
<p><strong>JMS Connection</strong></p>
<p>First rule of thumb is: &ldquo;Don&rsquo;t wait for a response when dealing with JMS queues.&rdquo; How so? Because, a JMS queue is asynchronous so you wont get back anything. There are however two ways of checking if it was a success or not.</p>
<p>1: Check your database. The service you are trying out probably records something in the database, right? Check it. You can use a simple JDBC connection, or a Postgres connection or whatever your choice of database is.</p>
<p>2: You can monitor use the log of your choice of service provider. If there is an exception the moment you send something, you can be sure it is received. Just the format is not correct. This is of course based on how your service handles exceptions.</p>
<p>So let&rsquo;s get down to business.</p>
<p>First, there is a really good article on how to create a JMS connection.</p>
<p>This is the link for it: <a href="http://www.javablogging.com/simple-guide-to-java-message-service-jms-using-activemq" title="Simple JMS How To">Simple Guide to Java message service JMS using ActiveMQ</a></p>
<p>Itt will tell you everything you need to know about creating a connection and waiting for a response.</p>
<p>I will tell you now how to use this information in a real live environment.</p>
<p>In a real environment you will be using a queue which has certain settings that will not allow you to &ldquo;join&rdquo; it, or creating it. And you need to get the name of the queue and certain settings, like the destination URL.</p>
<p>First, the tool you are going to use is called JConsole. JConsole is a tool to monitor applications. It&rsquo;s tool to monitor the JVM. I wont go into details about it since there are numerous descriptions about it. It is part of the java installation.</p>
<p>So after firing it up and giving it a connection url which would look like this: &lsquo;service:jmx:rmi:///jndi/rmi://hostName:portNum/jmxrmi&rsquo;, you would go ahead and search on the TAB:<strong>Threads</strong>.</p>
<p>Look for a Thread that is labelled like this: <YourConnectionLayer> Transport Server: tcp://0.0.0.0: <port></p>
<p>This will be your destination url.</p>
<p>In the blog the guy is using ActiveMQ. It&rsquo;s your best guess. It&rsquo;s lightweight, it&rsquo;s fast it&rsquo;s easy. Go for it.</p>
<p>So your Destination would look like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="n">ConnectionFactory</span> <span class="n">connectionFactory</span> <span class="o">=</span>
            <span class="k">new</span> <span class="n">ActiveMQConnectionFactory</span><span class="o">(</span><span class="s">&#34;&lt;yourserviceparameter&gt;://tcp://0.0.0.0:&lt;port&gt;&#34;</span><span class="o">);</span>
    <span class="n">Connection</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">connectionFactory</span><span class="o">.</span><span class="na">createConnection</span><span class="o">();</span>
    <span class="n">connection</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</code></pre></td></tr></table>
</div>
</div><p>After that you will need the queue name which you can get as easy as this. Go to the TAB <strong>MBeans</strong>. There you can see, if you are using ActiveMQ, you will see something like this : org.active.activemq. Open this up and you will see under localhost a number of queues that your server has configured. Open up one of them and copy the queue name in the createQueue.</p>
<p>Use it like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="n">Destination</span> <span class="n">destination</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="na">createQueue</span><span class="o">(</span><span class="s">&#34;&lt;queue name&gt;&#34;</span><span class="o">);</span>
</code></pre></td></tr></table>
</div>
</div><p>Of course if your service is configured properly you wont have any access to it. Use the connection like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="n">connection</span> <span class="o">=</span> <span class="n">connectionFactory</span><span class="o">.</span><span class="na">createConnection</span><span class="o">(</span><span class="s">&#34;username&#34;</span><span class="o">,</span> <span class="s">&#34;password&#34;</span><span class="o">);</span>
</code></pre></td></tr></table>
</div>
</div><p>You will have now logged in with the proper user.</p>
<p>Now you can send the message. You have everything configured.</p>
<p><strong>Framework</strong></p>
<p>Let&rsquo;s speak about the framework you will need to properly use this technology.</p>
<p>One of the paradigms for programming is design to interfaces. If you need a proper working framework, your ave to design with the mind set to changing pieces of code. Thinking about what would change the most. Your connection settings. You want a framework which can use any kind of connection. Not just JMS but whatever connection you would like. It could be a synchronous one. Or a database one. Or a JMS. Doesn&rsquo;t matter. You are only interested in a message sent or a connection, or whatever you want.</p>
<p>So let&rsquo;s get to it.</p>
<p>Interface:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">IConnection</span> <span class="o">{</span>
	<span class="kt">void</span> <span class="nf">sendMessage</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>This is sample connection interface. You could have numerous templates here.</p>
<p>You will be using an object factory pattern here. Your implementer will be taken for a Java Property file. But it can be taken from whatever configuration you like. XML maybe, or a database even.</p>
<p>Let&rsquo;s see you connection factory:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ConnFactory</span> <span class="o">{</span>

	<span class="kd">static</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Logger</span><span class="o">();</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="n">IConnection</span> <span class="nf">getImplementer</span><span class="o">()</span>
	<span class="o">{</span>
		<span class="n">Properties</span> <span class="n">prop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>

		<span class="k">try</span>
		<span class="o">{</span>
			<span class="n">prop</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="s">&#34;conf/implementer.property&#34;</span><span class="o">));</span>
		<span class="o">}</span>
		<span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">io</span><span class="o">)</span>
		<span class="o">{</span>
			<span class="n">logger</span><span class="o">.</span><span class="na">Log</span><span class="o">(</span><span class="s">&#34;Could not find property file: &#34;</span> <span class="o">+</span> <span class="n">io</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
		<span class="o">}</span>

		<span class="n">String</span> <span class="n">implementerClass</span> <span class="o">=</span> <span class="n">prop</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&#34;implementer&#34;</span><span class="o">);</span>

		<span class="n">Class</span><span class="o">&lt;?&gt;</span> <span class="n">iConnect</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>

		<span class="k">try</span>
		<span class="o">{</span>
			<span class="n">iConnect</span> <span class="o">=</span> <span class="n">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="n">implementerClass</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="k">catch</span> <span class="o">(</span><span class="n">ClassNotFoundException</span> <span class="n">ce</span><span class="o">)</span>
		<span class="o">{</span>
			<span class="n">logger</span><span class="o">.</span><span class="na">Log</span><span class="o">(</span><span class="s">&#34;Class could not be found: &#34;</span> <span class="o">+</span> <span class="n">ce</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
		<span class="o">}</span>

		<span class="n">IConnection</span> <span class="n">connection</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>

		<span class="k">try</span>
		<span class="o">{</span>
			<span class="n">connection</span> <span class="o">=</span> <span class="o">(</span><span class="n">IConnection</span><span class="o">)</span> <span class="n">iConnect</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>
		<span class="o">}</span>
		<span class="k">catch</span> <span class="o">(</span><span class="n">IllegalAccessException</span> <span class="n">ie</span><span class="o">)</span>
		<span class="o">{</span>
			<span class="n">logger</span><span class="o">.</span><span class="na">Log</span><span class="o">(</span><span class="s">&#34;Illegal access excpetion: &#34;</span> <span class="o">+</span> <span class="n">ie</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>

		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InstantiationException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>

			<span class="n">logger</span><span class="o">.</span><span class="na">Log</span><span class="o">(</span><span class="s">&#34;Instatiation exception occured. &#34;</span> <span class="o">+</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
		<span class="o">}</span>

		<span class="k">return</span> <span class="n">connection</span><span class="o">;</span>
	<span class="o">}</span>

<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>Easy enough, right? Class.forname will instantiate the class name you have in the property file. This could be something like this: com.packagename.ClassName. Doesn&rsquo;t matter to you. You can add some typeof checks, or instanceof checks, whatever you like. Or you can use <Type> generics.</p>
<p>Let&rsquo;s get to the concrete implementation:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JMSConnectionImpl</span> <span class="kd">implements</span> <span class="n">IConnection</span> <span class="o">{</span>
    <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Logger</span><span class="o">();</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sendMessage</span><span class="o">()</span>
    <span class="o">{</span>

   	<span class="n">Connection</span> <span class="n">connection</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="o">.</span>
        <span class="o">.</span>
        <span class="o">.</span>
        <span class="k">finally</span>
        <span class="o">{</span>
            <span class="n">connection</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="o">}</span>

    <span class="o">}</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>Simple enough. Here you have a concrete implementation of your collection and your sender class.</p>
<p>And the simple usage facility of this is. simple too:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="n">IConnection</span> <span class="n">iConnection</span> <span class="o">=</span> <span class="n">ConnFactory</span><span class="o">.</span><span class="na">getImplementer</span><span class="o">();</span>

    <span class="n">iConnection</span><span class="o">.</span><span class="na">sendMessage</span><span class="o">();</span>
</code></pre></td></tr></table>
</div>
</div><p>Simple enough too, right? So what happens here? You have a factory that will give you back any kind of implementation you are writing in you property file. You don&rsquo;t care what the implementation is in your test. You don&rsquo;t care what it&rsquo;s name is. You don&rsquo;t care what it&rsquo;s result is. Okay, you care about the result, but that&rsquo;s another history since you will check that elsewhere.</p>
<p>There you go. If any question occurs, please don&rsquo;t hesitate to ask.</p>
<p>Thanks for reading!</p>
]]></description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://skarlso.github.io/2012/02/27/configuration/</link>
      <pubDate>Mon, 27 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2012/02/27/configuration/</guid>
      <description><![CDATA[<p>When I see something like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">Config</span> <span class="o">{</span>
        <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">string</span> <span class="n">DATABASELINK</span> <span class="o">=</span> <span class="s">&#34;linkhere&#34;</span><span class="o">;</span>
        <span class="o">.</span>
        <span class="o">.</span>
        <span class="o">.</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>It sends a small, but chilling shiver down my spine. Just. don&rsquo;t. There are a lot of possibilities to use configuration in Java. Java property files. Xml. Xml serialization. CSV file. Whatever suits you best, but this? DON&rsquo;T!</p>
]]></description>
    </item>
    
  </channel>
</rss>