<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Problem Solving on Ramblings of a build engineer</title>
    <link>https://skarlso.github.io/categories/problem-solving/</link>
    <description>Recent content in Problem Solving on Ramblings of a build engineer</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 26 Oct 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://skarlso.github.io/categories/problem-solving/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Kill a Program on Connecting to a specific WiFi â€“ OSX</title>
      <link>https://skarlso.github.io/2015/10/26/kill-a-program-on-connecting-to-a-specific-wifi-osx/</link>
      <pubDate>Mon, 26 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/26/kill-a-program-on-connecting-to-a-specific-wifi-osx/</guid>
      <description>&lt;p&gt;Hi folks.&lt;/p&gt;

&lt;p&gt;If you have the tendency, like me, to forget that you are on the corporate VPN, or leave a certain software open when you bring your laptop to work, this might be helpful to you too.&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s a small script which kills a program when you change your Wifi network.&lt;/p&gt;

&lt;p&gt;Script:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;bash&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;#!/bin/bash&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;function&lt;/span&gt; log &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span style=&#34;color: #007800;&#34;&gt;directory&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;/Users/&amp;lt;username&amp;gt;/wifi_detect&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #007800;&#34;&gt;log_dir_exists&lt;/span&gt;=&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;true&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#91;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;!&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-d&lt;/span&gt; &lt;span style=&#34;color: #007800;&#34;&gt;$directory&lt;/span&gt; &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#93;&lt;/span&gt;; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;Attempting to create =&amp;gt; &lt;span style=&#34;color: #007800;&#34;&gt;$directory&lt;/span&gt;&#34;&lt;/span&gt;
        &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;mkdir&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-p&lt;/span&gt; &lt;span style=&#34;color: #007800;&#34;&gt;$directory&lt;/span&gt;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#91;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;!&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-d&lt;/span&gt; &lt;span style=&#34;color: #007800;&#34;&gt;$directory&lt;/span&gt; &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#93;&lt;/span&gt;; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;then&lt;/span&gt;
            &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;Could not create directory. Continue to log to echo.&#34;&lt;/span&gt;
            &lt;span style=&#34;color: #007800;&#34;&gt;log_dir_exists&lt;/span&gt;=&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;false&lt;/span&gt;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;fi&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;fi&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #007800;&#34;&gt;$log_dir_exists&lt;/span&gt; ; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;&lt;span style=&#34;color: #007800;&#34;&gt;$(date)&lt;/span&gt;:$1&#34;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;&lt;span style=&#34;color: #007800;&#34;&gt;$directory&lt;/span&gt;/log.txt&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;else&lt;/span&gt;
        &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;&lt;span style=&#34;color: #007800;&#34;&gt;$(date)&lt;/span&gt;:$1&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;function&lt;/span&gt; check_program &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span style=&#34;color: #007800;&#34;&gt;to_kill&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;[&lt;span style=&#34;color: #007800;&#34;&gt;${1::1}&lt;/span&gt;]&lt;span style=&#34;color: #007800;&#34;&gt;${1:1}&lt;/span&gt;&#34;&lt;/span&gt;
    log &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;Checking if &lt;span style=&#34;color: #007800;&#34;&gt;$to_kill&lt;/span&gt; really quit.&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #007800;&#34;&gt;ps&lt;/span&gt;=$&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;ps&lt;/span&gt; aux &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;grep&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;&lt;span style=&#34;color: #007800;&#34;&gt;$to_kill&lt;/span&gt;&#34;&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;
    log &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;ps =&amp;gt; &lt;span style=&#34;color: #007800;&#34;&gt;$ps&lt;/span&gt;&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#91;&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-z&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;&lt;span style=&#34;color: #007800;&#34;&gt;$ps&lt;/span&gt;&#34;&lt;/span&gt; &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#93;&lt;/span&gt;; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;then&lt;/span&gt;
    &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# 0 - True&lt;/span&gt;
        &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;else&lt;/span&gt;
    &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# 1 - False&lt;/span&gt;
        &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;1&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;function&lt;/span&gt; kill_program &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#123;&lt;/span&gt;
    log &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;Killing program&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;`&lt;/span&gt;pkill &lt;span style=&#34;color: #660033;&#34;&gt;-f&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;$1&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;sleep&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;1&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;!&lt;/span&gt; check_program &lt;span style=&#34;color: #007800;&#34;&gt;$1&lt;/span&gt; ; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;then&lt;/span&gt;
    log &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;$1 Did not quit!&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;else&lt;/span&gt;
    log &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;$1 quit successfully&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #007800;&#34;&gt;wifi_name&lt;/span&gt;=$&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#40;&lt;/span&gt;networksetup &lt;span style=&#34;color: #660033;&#34;&gt;-getairportnetwork&lt;/span&gt; en0 &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #c20cb9; font-weight: bold;&#34;&gt;awk&lt;/span&gt; &lt;span style=&#34;color: #660033;&#34;&gt;-F&lt;/span&gt;&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;: &#34;&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;{print $2}&#39;&lt;/span&gt;&lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#41;&lt;/span&gt;
log &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;Wifi name: &lt;span style=&#34;color: #007800;&#34;&gt;$wifi_name&lt;/span&gt;&#34;&lt;/span&gt;
&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#91;&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;&lt;span style=&#34;color: #007800;&#34;&gt;$wifi_name&lt;/span&gt;&#34;&lt;/span&gt; = &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;&amp;lt;wifi_name&amp;gt;&#34;&lt;/span&gt; &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#93;&lt;/span&gt;; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;then&lt;/span&gt;
    log &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;On corporate network... Killing Program&#34;&lt;/span&gt;
    kill_program &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;&amp;lt;programname&amp;gt;&#34;&lt;/span&gt;
&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#91;&lt;/span&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;&lt;span style=&#34;color: #007800;&#34;&gt;$wifi_name&lt;/span&gt;&#34;&lt;/span&gt; = &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;&amp;lt;home_wifi_name&amp;gt;&#34;&lt;/span&gt; &lt;span style=&#34;color: #7a0874; font-weight: bold;&#34;&gt;&amp;#93;&lt;/span&gt;; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;then&lt;/span&gt;
    &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;# Kill &amp;lt;program&amp;gt; if enabled and if on &amp;lt;home_wifi&amp;gt; and if Tunnelblick is running.&lt;/span&gt;
    log &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;Not on corporate network... Killing &amp;lt;program&amp;gt; if Tunnelblick is active.&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;!&lt;/span&gt; check_program &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;Tunnelblick&#34;&lt;/span&gt; ; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;then&lt;/span&gt;
    log &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;Tunnelblick is active. Killing &amp;lt;program&amp;gt;&#34;&lt;/span&gt;
    kill_program &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;&amp;lt;program&amp;gt;&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;else&lt;/span&gt;
    log &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;All good... Happy coding.&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;else&lt;/span&gt;
    log &lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;No known Network...&#34;&lt;/span&gt;
&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;fi&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Now, the trick is, on OSX to only trigger this when your network changes. For this, you can have a &amp;#8216;launchd&amp;#8217; daemon, which is configured to watch three files which relate to a network being changed.&lt;/p&gt;

&lt;p&gt;The script sits under your ~/Library/LaunchAgents folder. Create something like, com.username.checknetwork.plist.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;xml&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;?xml&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;version&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;1.0&#34;&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;encoding&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;UTF-8&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&#34;color: #00bbdd;&#34;&gt;&amp;lt;!DOCTYPE plist PUBLIC &#34;-//Apple Computer//DTD PLIST 1.0//EN&#34; \&lt;/span&gt;
&lt;span style=&#34;color: #00bbdd;&#34;&gt; &#34;http://www.apple.com/DTDs/PropertyList-1.0.dtd&#34;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;plist&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;version&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;1.0&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;dict&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;key&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;Label&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/key&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;string&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;ifup.ddns&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/string&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&amp;nbsp;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;key&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;LowPriorityIO&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/key&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;true&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&amp;nbsp;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;key&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;ProgramArguments&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/key&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;array&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;string&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;/Users/username/scripts/ddns-update.sh&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/string&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/array&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&amp;nbsp;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;key&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;WatchPaths&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/key&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;array&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;string&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;/etc/resolv.conf&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/string&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;string&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;/Library/Preferences/SystemConfiguration/NetworkInterfaces.plist&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/string&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;string&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;/Library/Preferences/SystemConfiguration/com.apple.airport.preferences.plist&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/string&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/array&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&amp;nbsp;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;key&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;RunAtLoad&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/key&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;true&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/dict&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/plist&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Now, when you change your network, to whatever your corporate network is, you&amp;#8217;ll kill Sublime.&lt;/p&gt;

&lt;p&gt;Hope this helps somebody.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Circular buffer in Go</title>
      <link>https://skarlso.github.io/2015/10/15/circular-buffer-in-go/</link>
      <pubDate>Thu, 15 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/15/circular-buffer-in-go/</guid>
      <description>&lt;p&gt;I&amp;#8217;m proud of this one too. No peaking. I like how go let&amp;#8217;s you do this kind of stuff in a very nice way.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;go&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;package&lt;/span&gt; circular
&amp;nbsp;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;fmt&#34;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//TestVersion testVersion&lt;/span&gt;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;const&lt;/span&gt; TestVersion &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//Buffer buffer type&lt;/span&gt;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;type&lt;/span&gt; Buffer &lt;span style=&#34;color: #993333;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    buffer &lt;span style=&#34;color: #339933;&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;byte&lt;/span&gt;
    full   &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;
    size   &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;
    s&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; e   &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//NewBuffer creates a new Buffer&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; NewBuffer&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;size &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;Buffer &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; &amp;Buffer&lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;buffer&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;([]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; size&lt;span style=&#34;color: #339933;&#34;&gt;),&lt;/span&gt; s&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; e&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; size&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; size&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; full&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//ReadByte reads a byte from b Buffer&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;Buffer&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; ReadByte&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; error&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;full &lt;span style=&#34;color: #339933;&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Errorf&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Danger Will Robinson: %s&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    readByte &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;buffer&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;s&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt;
    b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;s &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;s &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;%&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;size
    b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;full&lt;span style=&#34;color: #339933;&#34;&gt;--&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; readByte&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;nil&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//WriteByte writes c byte to the buffer&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;Buffer&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; WriteByte&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;c &lt;span style=&#34;color: #993333;&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; error &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;full&lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt; &amp;gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;size &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Errorf&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Danger Will Robinson: %s&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;buffer&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;e&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; c
    b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;e &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;e &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;%&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;size
    b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;full&lt;span style=&#34;color: #339933;&#34;&gt;++&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;nil&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//Overwrite overwrites the oldest byte in Buffer&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;Buffer&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; Overwrite&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;c &lt;span style=&#34;color: #993333;&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;buffer&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;s&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; c
    b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;s &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;s &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;%&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;size
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//Reset resets the buffer&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;Buffer&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; Reset&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;b &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;NewBuffer&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;size&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//String for a string representation of Buffer&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;b &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;Buffer&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; String&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Sprintf&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Buffer: %d, %d, %d, %d&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;buffer&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; b&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>DataMunger Kata with Go</title>
      <link>https://skarlso.github.io/2015/10/04/datamunger-kata-with-go/</link>
      <pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/04/datamunger-kata-with-go/</guid>
      <description>&lt;p&gt;Quickly wrote up the Data Munger code kata in Go.&lt;/p&gt;

&lt;p&gt;Next time, I want better abstractions. And a way to select columns based on their header data. For now, this is not bad.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;go&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;package&lt;/span&gt; main
&amp;nbsp;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;bufio&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;fmt&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;log&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;math&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;os&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;regexp&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;strconv&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;strings&#34;&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//Data which is Data&lt;/span&gt;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;type&lt;/span&gt; Data &lt;span style=&#34;color: #993333;&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    columnName &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;
    compareOne &lt;span style=&#34;color: #993333;&#34;&gt;float64&lt;/span&gt;
    compareTwo &lt;span style=&#34;color: #993333;&#34;&gt;float64&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; main&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;// datas := []Data{WeatherData{}, FootballData{}}&lt;/span&gt;
    fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Minimum weather data:&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; GetDataMinimumDiff&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;weather.dat&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;))&lt;/span&gt;
    fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Println&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Minimum football data:&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; GetDataMinimumDiff&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;football.dat&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//GetDataMinimumDiff gathers data from file to fill up Columns.&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; GetDataMinimumDiff&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;filename &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; nameColumn &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; compareColOne &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; compareColTwo &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; Data &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    data &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; Data&lt;span style=&#34;color: #339933;&#34;&gt;{}&lt;/span&gt;
    minimum &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; math&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;MaxFloat64
    readLines &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; ReadFile&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;filename&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;for&lt;/span&gt; _&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; value &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;range&lt;/span&gt; readLines &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        valueArrays &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; strings&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Split&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;value&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;,&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        name &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; valueArrays&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;nameColumn&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt;
        trimmedFirst&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; _ &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; strconv&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;ParseFloat&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;valueArrays&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;compareColOne&lt;span style=&#34;color: #339933;&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        trimmedSecond&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; _ &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; strconv&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;ParseFloat&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;valueArrays&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;compareColTwo&lt;span style=&#34;color: #339933;&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        diff &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; trimmedFirst &lt;span style=&#34;color: #339933;&#34;&gt;-&lt;/span&gt; trimmedSecond
        diff &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; math&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Abs&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;diff&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; diff &amp;lt;&lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; minimum &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            minimum &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; diff
            data&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;columnName &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; name
            data&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;compareOne &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; trimmedFirst
            data&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;compareTwo &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; trimmedSecond
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; data
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//ReadFile reads lines from a file and gives back a string array which contains the lines.&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; ReadFile&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;fileName &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;fileLines &lt;span style=&#34;color: #339933;&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    file&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; os&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Open&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;fileName&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        log&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Fatal&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;defer&lt;/span&gt; file&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Close&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt;
&amp;nbsp;
    scanner &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; bufio&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;NewScanner&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;file&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//Skipping the first line which is the header.&lt;/span&gt;
    scanner&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Scan&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;for&lt;/span&gt; scanner&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Scan&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        line &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; scanner&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Text&lt;span style=&#34;color: #339933;&#34;&gt;()&lt;/span&gt;
        re &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; regexp&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;MustCompile&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;&lt;span style=&#34;color: #000099; font-weight: bold;&#34;&gt;\\&lt;/span&gt;w+&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        lines &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; re&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;FindAllString&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;line&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;lines&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &amp;gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            fileLines &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; append&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;fileLines&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; strings&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Join&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;lines&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;,&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;))&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; scanner&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Err&lt;span style=&#34;color: #339933;&#34;&gt;();&lt;/span&gt; err &lt;span style=&#34;color: #339933;&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        log&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;Fatal&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>How to Aggregate Tests with Jenkins with Aggregate Plugin on non-relating jobs</title>
      <link>https://skarlso.github.io/2015/10/02/how-to-aggregate-tests-with-jenkins-with-aggregate-plugin-on-non-relating-jobs/</link>
      <pubDate>Fri, 02 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/10/02/how-to-aggregate-tests-with-jenkins-with-aggregate-plugin-on-non-relating-jobs/</guid>
      <description>

&lt;p&gt;Hello folks.&lt;/p&gt;

&lt;p&gt;Today, I would like to talk about something I came in contact with, and was hard to find a proper answer / solution for it.&lt;/p&gt;

&lt;p&gt;So I&amp;#8217;m writing this down to document my findings. Like the title says, this is about aggregating test result with Jenkins, using the plug-in provided. If you, like me, have a pipeline structure which do not work on the same artifact, but do have a upstream-downstream relationship, you will have a hard time configuring and making Aggregation work. So here is how, I fixed the issue.&lt;/p&gt;

&lt;h1 id=&#34;connection:8d940ee57e10d456fdd2ccfe653ed909&#34;&gt;Connection&lt;/h1&gt;

&lt;p&gt;In order for the aggregation to work, there needs to be an &lt;strong&gt;artifact connection&lt;/strong&gt; between the upstream and downstream projects. And that is the key. But if you don&amp;#8217;t have that, well, let&amp;#8217;s create one. I have a parent job configured like this one. =&amp;gt;&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;xml&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;?xml&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;version&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;1.0&#39;&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;encoding&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;UTF-8&#39;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;project&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;actions&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;description&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/description&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;keepDependencies&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/keepDependencies&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;properties&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;scm&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;class&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;hudson.scm.NullSCM&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;canRoam&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;true&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/canRoam&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;disabled&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/disabled&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;blockBuildWhenDownstreamBuilding&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/blockBuildWhenDownstreamBuilding&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;blockBuildWhenUpstreamBuilding&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/blockBuildWhenUpstreamBuilding&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;triggers&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;concurrentBuild&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/concurrentBuild&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;builders&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;publishers&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;hudson.tasks.test.AggregatedTestResultPublisher&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;plugin&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;junit@1.9&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;includeFailedBuilds&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/includeFailedBuilds&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/hudson.tasks.test.AggregatedTestResultPublisher&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;hudson.tasks.BuildTrigger&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;childProjects&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;ChildJob&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/childProjects&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;threshold&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;name&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;SUCCESS&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/name&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;ordinal&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/ordinal&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;color&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;BLUE&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/color&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;completeBuild&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;true&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/completeBuild&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/threshold&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/hudson.tasks.BuildTrigger&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/publishers&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;buildWrappers&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/project&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;As you can see, it&amp;#8217;s pretty basic. It isn&amp;#8217;t much. It&amp;#8217;s supposed to be a trigger job for downstream projects. You could have this one at anything. Maybe scheduled, or have some kind of gathering here of some results, and so on and so forth. The end part of the configuration is the interesting bit.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/10/parentJobConfig1.png&#34;&gt;&lt;img src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/10/parentJobConfig1-150x150.png&#34; alt=&#34;parentJobConfig&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignnone size-thumbnail wp-image-616&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aggregation is setup, but it won&amp;#8217;t work, because despite there being an upstream/downstream relationship, there also needs to be an artifact connection which uses &lt;strong&gt;fingerprinting&lt;/strong&gt;. Fingerprinting for Jenkins is needed in oder to make the physical connection between the jobs via hashes. This is what you will get if that is not setup:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/10/statusBeforeFingerprint.png&#34;&gt;&lt;img src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/10/statusBeforeFingerprint-150x150.png&#34; alt=&#34;statusBeforeFingerprint&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignnone size-thumbnail wp-image-615&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if there is no artifact between them, what do you do? You create one.&lt;/p&gt;

&lt;h1 id=&#34;the-artifact-which-binds-us:8d940ee57e10d456fdd2ccfe653ed909&#34;&gt;The Artifact which Binds Us&lt;/h1&gt;

&lt;p&gt;Adding a simple &lt;strong&gt;timestamp file&lt;/strong&gt; is enough to make a connection. So let&amp;#8217;s do that. This is how it will look like =&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/10/statusAfterFingerprint.png&#34;&gt;&lt;img src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/10/statusAfterFingerprint-150x150.png&#34; alt=&#34;statusAfterFingerprint&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignnone size-thumbnail wp-image-614&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The important bits about this picture are the small echo which simply creates a file which will contain some time stamp data, and after that the archive artifact, which also fingerprints that file, marking it with a hash which identifies this job as using that particular artifact.&lt;/p&gt;

&lt;p&gt;Now, the next step is to create the connection. For that, you need the artifact copy plugin =&amp;gt; &lt;a href=&#34;https://wiki.jenkins-ci.org/display/JENKINS/Copy+Artifact+Plugin&#34; target=&#34;_blank&#34;&gt;Copy Artifact Plugin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With this, we create the childs configuration like this:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;xml&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;?xml&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;version&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;1.0&#39;&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;encoding&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#39;UTF-8&#39;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;project&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;actions&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;description&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/description&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;keepDependencies&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/keepDependencies&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;properties&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;scm&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;class&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;hudson.plugins.git.GitSCM&#34;&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;plugin&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;git@2.4.0&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;configVersion&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;2&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/configVersion&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;userRemoteConfigs&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;hudson.plugins.git.UserRemoteConfig&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;url&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;https://github.com/Skarlso/DataMung.git&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/url&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/hudson.plugins.git.UserRemoteConfig&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/userRemoteConfigs&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;branches&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;hudson.plugins.git.BranchSpec&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;name&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;*/master&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/name&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/hudson.plugins.git.BranchSpec&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/branches&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;doGenerateSubmoduleConfigurations&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/doGenerateSubmoduleConfigurations&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;submoduleCfg&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;class&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;list&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;extensions&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/scm&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;canRoam&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;true&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/canRoam&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;disabled&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/disabled&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;blockBuildWhenDownstreamBuilding&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/blockBuildWhenDownstreamBuilding&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;blockBuildWhenUpstreamBuilding&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/blockBuildWhenUpstreamBuilding&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;triggers&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;concurrentBuild&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/concurrentBuild&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;builders&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;hudson.plugins.gradle.Gradle&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;plugin&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;gradle@1.24&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;description&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/description&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;switches&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/switches&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;tasks&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;assemble check&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/tasks&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;rootBuildScriptDir&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/rootBuildScriptDir&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;buildFile&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;build.gradle&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/buildFile&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;gradleName&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(Default)&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/gradleName&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;useWrapper&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;true&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/useWrapper&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;makeExecutable&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/makeExecutable&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;fromRootBuildScriptDir&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;true&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/fromRootBuildScriptDir&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;useWorkspaceAsHome&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/useWorkspaceAsHome&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/hudson.plugins.gradle.Gradle&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;hudson.plugins.copyartifact.CopyArtifact&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;plugin&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;copyartifact@1.36&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;project&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;ParentJob&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/project&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;filter&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;timestamp.data&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/filter&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;target&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/target&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;excludes&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/excludes&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;selector&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;class&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;hudson.plugins.copyartifact.TriggeredBuildSelector&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;upstreamFilterStrategy&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;UseGlobalSetting&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/upstreamFilterStrategy&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/selector&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;doNotFingerprintArtifacts&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/doNotFingerprintArtifacts&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/hudson.plugins.copyartifact.CopyArtifact&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/builders&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;publishers&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;hudson.tasks.junit.JUnitResultArchiver&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;plugin&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;junit@1.9&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;testResults&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;build/test-results/*.xml&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/testResults&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;keepLongStdio&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/keepLongStdio&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;healthScaleFactor&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;1.0&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/healthScaleFactor&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/hudson.tasks.junit.JUnitResultArchiver&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/publishers&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;buildWrappers&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;hudson.plugins.ws__cleanup.PreBuildCleanup&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;plugin&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;ws-cleanup@0.28&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;deleteDirs&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/deleteDirs&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;cleanupParameter&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/cleanupParameter&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;externalDelete&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/externalDelete&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/hudson.plugins.ws__cleanup.PreBuildCleanup&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/buildWrappers&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/project&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Again, the improtant bit is this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/10/childJobWithArtifactCopy.png&#34;&gt;&lt;img src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/10/childJobWithArtifactCopy-150x150.png&#34; alt=&#34;childJobWithArtifactCopy&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignnone size-thumbnail wp-image-611&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the copy is setup, we launch our parent job and if everything is correct, you should see something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/10/resultAfterArtifactCopySuccess.png&#34;&gt;&lt;img src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/10/resultAfterArtifactCopySuccess-150x150.png&#34; alt=&#34;resultAfterArtifactCopySuccess&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignnone size-thumbnail wp-image-613&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;wrapping-it-up:8d940ee57e10d456fdd2ccfe653ed909&#34;&gt;Wrapping it Up&lt;/h1&gt;

&lt;p&gt;For final words, important bit to take away from this is that you need an &lt;strong&gt;artifact connection between the jobs&lt;/strong&gt; to make this work. Whatever your downstream / upstream connection is, it doesn&amp;#8217;t matter. Also, there can be a problem that you have everything set up, and there are artifacts which bind the jobs together but you still can&amp;#8217;t see the results, then your best option is to specify the jobs BY NAME in the aggregate test plug-in like this:&lt;/p&gt;

&lt;p&gt;[&lt;img src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/10/aggregatingByName-150x150.png&#34; alt=&#34;aggregatingByName&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignnone size-thumbnail wp-image-622&#34; /&gt;][6]&lt;/p&gt;

&lt;p&gt;I know this is a pain if there are multiple jobs, but at least, jenkins is providing you with Autoexpande once you start typing.&lt;/p&gt;

&lt;p&gt;Of course this also works with multiple downstream jobs if they copy the artifact to themselves.&lt;/p&gt;

&lt;p&gt;Any questions, please feel free to comment and I will answer to the best of my knowledge.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;

&lt;p&gt;[6]: &lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/10/aggregatingByName.png&#34;&gt;http://ramblingsofaswtester.com/wp-content/uploads/2015/10/aggregatingByName.png&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sieve of Eratosthenes in Go</title>
      <link>https://skarlso.github.io/2015/07/30/sieve-of-eratosthenes-in-go/</link>
      <pubDate>Thu, 30 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/30/sieve-of-eratosthenes-in-go/</guid>
      <description>&lt;p&gt;I&amp;#8217;m pretty proud of this one as well.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;go&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;package&lt;/span&gt; sieve
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//Sieve Uses the Sieve of Eratosthenes to calculate primes to a certain limit&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; Sieve&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;limit &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;var&lt;/span&gt; listOfPrimes &lt;span style=&#34;color: #339933;&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;
    markers &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;([]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;bool&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; limit&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt; &amp;lt; limit&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;++&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;!&lt;/span&gt;markers&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; j &amp;lt; limit&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; j &lt;span style=&#34;color: #339933;&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
                markers&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;j&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;true&lt;/span&gt;
            &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
            listOfPrimes &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; append&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;listOfPrimes&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; listOfPrimes
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Quick Tip for Debugging Headless Locally</title>
      <link>https://skarlso.github.io/2015/07/22/quick-tip-for-debugging-headless-locally/</link>
      <pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/22/quick-tip-for-debugging-headless-locally/</guid>
      <description>&lt;p&gt;If you are installing something with Packer and you have Headless enabled(and you are lazy and don&amp;#8217;t want to switch it off), it gets difficult, to see output.&lt;/p&gt;

&lt;p&gt;Especially on a windows install the Answer File / Unattended install can be like =&amp;gt; Waiting for SSH&amp;#8230; for about an hour or two! If you are doing this locally fret not. Just start VirtualBox, and watch the Preview section which will display the current state even if it&amp;#8217;s a headless install!&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s a small windows, but your can click on &lt;strong&gt;Show&lt;/strong&gt; which will open the VM in a proper view.&lt;/p&gt;

&lt;p&gt;[&lt;img src=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/07/Screenshot-from-2015-07-22-152235-150x150.png&#34; alt=&#34;Screenshot from 2015-07-22 15:22:35&#34; width=&#34;150&#34; height=&#34;150&#34; class=&#34;alignnone size-thumbnail wp-image-574&#34; /&gt;][1]&lt;/p&gt;

&lt;p&gt;Enjoy,&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;

&lt;p&gt;[1]: &lt;a href=&#34;http://ramblingsofaswtester.com/wp-content/uploads/2015/07/Screenshot-from-2015-07-22-152235.png&#34;&gt;http://ramblingsofaswtester.com/wp-content/uploads/2015/07/Screenshot-from-2015-07-22-152235.png&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Converting numbers into string representations</title>
      <link>https://skarlso.github.io/2015/07/19/converting-numbers-into-string-representations/</link>
      <pubDate>Sun, 19 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/19/converting-numbers-into-string-representations/</guid>
      <description>&lt;p&gt;I quiet like this one. My first go program snippet without any peaking or googling. I&amp;#8217;m proud, though it could be improved with a bit of struct magic and such and such. And it only counts &amp;#8217;till 1000&amp;#8230;&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;go&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;package&lt;/span&gt; main
&amp;nbsp;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;fmt&#34;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;var&lt;/span&gt; words &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #993333;&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;one&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;two&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;three&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;four&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;five&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;six&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;seven&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;eight&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;nine&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;ten&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;eleven&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;twelve&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;thirteen&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;fourteen&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;fifteen&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;sixteen&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;seventeen&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;eighteen&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;nineteen&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;twenty&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;thirty&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;forty&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color: #cc66cc;&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;fifty&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;60&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;sixty&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;seventy&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;eighty&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;ninety&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;// CountLetters count the letters in a long string number representation&lt;/span&gt;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; CountLetters&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;limit &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    myLongNumberString &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt; &amp;lt;&lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; limit&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;++&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        addLettersToMyString&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&amp;myLongNumberString&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;// fmt.Println(&#34;1-9 written with letters is: &#34;, len(myLongNumberString))&lt;/span&gt;
    fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;The string is:&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; myLongNumberString&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    fmt&lt;span style=&#34;color: #339933;&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;Lenght of string is:&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;myLongNumberString&lt;span style=&#34;color: #339933;&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; addLettersToMyString&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;myString &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; num &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; num &amp;lt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;myString &lt;span style=&#34;color: #339933;&#34;&gt;+=&lt;/span&gt; words&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;num&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; num &amp;gt;&lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;20&lt;/span&gt; &amp;&amp; num &amp;lt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;myString &lt;span style=&#34;color: #339933;&#34;&gt;+=&lt;/span&gt; countMiddle&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;num&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; num &amp;gt;&lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;100&lt;/span&gt; &amp;&amp; num &amp;lt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        hundred&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; tenth &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; countHundred&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;num&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; tenth &lt;span style=&#34;color: #339933;&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;myString &lt;span style=&#34;color: #339933;&#34;&gt;+=&lt;/span&gt; hundred
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; tenth &amp;gt;&lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;11&lt;/span&gt; &amp;&amp; tenth &amp;lt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;myString &lt;span style=&#34;color: #339933;&#34;&gt;+=&lt;/span&gt; hundred &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;and&#34;&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; words&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;tenth&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;myString &lt;span style=&#34;color: #339933;&#34;&gt;+=&lt;/span&gt; hundred &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;and&#34;&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; countMiddle&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;tenth&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;if&lt;/span&gt; num &lt;span style=&#34;color: #339933;&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #339933;&#34;&gt;*&lt;/span&gt;myString &lt;span style=&#34;color: #339933;&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;onethousand&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; countMiddle&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;num &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    minues &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; num &lt;span style=&#34;color: #339933;&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;10&lt;/span&gt;
    num &lt;span style=&#34;color: #339933;&#34;&gt;-=&lt;/span&gt; minues
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; words&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;num&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; words&lt;span style=&#34;color: #339933;&#34;&gt;[&lt;/span&gt;minues&lt;span style=&#34;color: #339933;&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #993333;&#34;&gt;func&lt;/span&gt; countHundred&lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;num &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #993333;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #993333;&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;{&lt;/span&gt;
    minues &lt;span style=&#34;color: #339933;&#34;&gt;:=&lt;/span&gt; num &lt;span style=&#34;color: #339933;&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;100&lt;/span&gt;
    num &lt;span style=&#34;color: #339933;&#34;&gt;-=&lt;/span&gt; minues
    &lt;span style=&#34;color: #b1b100; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;(&lt;/span&gt;words&lt;span style=&#34;color: #339933;&#34;&gt;[(&lt;/span&gt;num&lt;span style=&#34;color: #339933;&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #cc66cc;&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;)]&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #cc66cc;&#34;&gt;&#34;hundred&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;),&lt;/span&gt; minues
&lt;span style=&#34;color: #339933;&#34;&gt;}&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Selenium Testing with Packer and Vagrant</title>
      <link>https://skarlso.github.io/2015/07/16/selenium-testing-with-packer-and-vagrant/</link>
      <pubDate>Thu, 16 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/16/selenium-testing-with-packer-and-vagrant/</guid>
      <description>

&lt;p&gt;So, recently, the tester team talked to me, that their build takes too long, and why is that? A quick look at their configuration and build scripts showed me, that they are actually using a vagrant box, which never gets destroyed or re-started at least. To remedy this problem, I came up with the following solution&amp;#8230;&lt;/p&gt;

&lt;h1 id=&#34;same-old-8230:f7526662c18d742c428b0293edfcb3e4&#34;&gt;Same old&amp;#8230;&lt;/h1&gt;

&lt;p&gt;Same as in my previous post, we are going to build a Windows Machine for this purpose. The only addition to my previous settings, will be some Java install, downloading selenium and installing Chrome, and Firefox.&lt;/p&gt;

&lt;h1 id=&#34;installation:f7526662c18d742c428b0293edfcb3e4&#34;&gt;Installation&lt;/h1&gt;

&lt;h4 id=&#34;answer-file:f7526662c18d742c428b0293edfcb3e4&#34;&gt;Answer File&lt;/h4&gt;

&lt;p&gt;Here is the configuration and setup of Windows before the provision phase.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;xml&#34; style=&#34;font-family:monospace;&#34;&gt;...
               &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;SynchronousCommand&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;wcm:action&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;add&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;CommandLine&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;cmd.exe /c C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -File a:\jdk_inst.ps1 -AutoStart&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/CommandLine&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
                  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;Description&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;Install Java&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/Description&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
                  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;Order&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;103&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/Order&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
                  &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;RequiresUserInput&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;true&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/RequiresUserInput&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
               &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/SynchronousCommand&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
...&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;This is the part were I&amp;#8217;m installing Java. The script for the jdk_inst.ps1 is in my previous post, but I&amp;#8217;ll paste it here for ease of read.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;powershell&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #0000FF;&#34;&gt;function&lt;/span&gt; LogWrite &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
   &lt;span style=&#34;color: #0000FF;&#34;&gt;Param&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&#34;color: #008080;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;$logstring&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
   &lt;span style=&#34;color: #800080;&#34;&gt;$now&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Get-Date&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-format&lt;/span&gt; s
   &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Add-Content&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$Logfile&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-value&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;$now $logstring&#34;&lt;/span&gt;
   &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$logstring&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #800080;&#34;&gt;$Logfile&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;C:\Windows\Temp\jdk-install.log&#34;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #800080;&#34;&gt;$JDK_VER&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #800000;&#34;&gt;&#34;7u75&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$JDK_FULL_VER&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #800000;&#34;&gt;&#34;7u75-b13&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$JDK_PATH&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #800000;&#34;&gt;&#34;1.7.0_75&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$source86&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;http://download.oracle.com/otn-pub/java/jdk/$JDK_FULL_VER/jdk-$JDK_VER-windows-i586.exe&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$source64&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;http://download.oracle.com/otn-pub/java/jdk/$JDK_FULL_VER/jdk-$JDK_VER-windows-x64.exe&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$destination86&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;C:\Windows\Temp\$JDK_VER-x86.exe&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$destination64&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;C:\Windows\Temp\$JDK_VER-x64.exe&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$client&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;new-object&lt;/span&gt; System.Net.WebClient
&lt;span style=&#34;color: #800080;&#34;&gt;$cookie&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;oraclelicense=accept-securebackup-cookie&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$client&lt;/span&gt;.Headers.Add&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;System.Net.HttpRequestHeader&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt;::Cookie&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$cookie&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Setting Execution Policy level to Bypass&#34;&lt;/span&gt;
&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Set-ExecutionPolicy&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-Scope&lt;/span&gt; CurrentUser &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-ExecutionPolicy&lt;/span&gt; Bypass &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-Force&lt;/span&gt;
&amp;nbsp;
LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Checking if Java is already installed&#39;&lt;/span&gt;
&lt;span style=&#34;color: #0000FF;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Test-Path&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;c:\Program Files (x86)\Java&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #FF0000;&#34;&gt;-Or&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Test-Path&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;c:\Program Files\Java&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;No need to Install Java&#39;&lt;/span&gt;
    Exit
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Downloading x86 to $destination86&#39;&lt;/span&gt;
try &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
  &lt;span style=&#34;color: #800080;&#34;&gt;$client&lt;/span&gt;.downloadFile&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;$source86&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$destination86&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
  &lt;span style=&#34;color: #0000FF;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Test-Path&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$destination86&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
      LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Downloading $destination86 failed&#34;&lt;/span&gt;
      Exit
  &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
  LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Downloading x64 to $destination64&#39;&lt;/span&gt;
&amp;nbsp;
  &lt;span style=&#34;color: #800080;&#34;&gt;$client&lt;/span&gt;.downloadFile&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;$source64&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$destination64&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
  &lt;span style=&#34;color: #0000FF;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Test-Path&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$destination64&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
      LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Downloading $destination64 failed&#34;&lt;/span&gt;
      Exit
  &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt; catch &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;Exception&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
  LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_.Exception is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.Exception
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
try &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Installing JDK-x64&#39;&lt;/span&gt;
    &lt;span style=&#34;color: #800080;&#34;&gt;$proc1&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; Start&lt;span style=&#34;color: pink;&#34;&gt;-&lt;/span&gt;Process &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-FilePath&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;$destination64&#34;&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-ArgumentList&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;/s REBOOT=ReallySuppress&#34;&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-Wait&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-PassThru&lt;/span&gt;
    &lt;span style=&#34;color: #800080;&#34;&gt;$proc1&lt;/span&gt;.waitForExit&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Installation Done.&#39;&lt;/span&gt;
&amp;nbsp;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Installing JDK-x86&#39;&lt;/span&gt;
    &lt;span style=&#34;color: #800080;&#34;&gt;$proc2&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; Start&lt;span style=&#34;color: pink;&#34;&gt;-&lt;/span&gt;Process &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-FilePath&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;$destination86&#34;&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-ArgumentList&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;/s REBOOT=ReallySuppress&#34;&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-Wait&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-PassThru&lt;/span&gt;
    &lt;span style=&#34;color: #800080;&#34;&gt;$proc2&lt;/span&gt;.waitForExit&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Installtion Done.&#39;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt; catch &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;exception&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_ is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_.GetType().FullName is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.GetType&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;.FullName
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_.Exception is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.Exception
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_.Exception.GetType().FullName is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.Exception.GetType&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;.FullName
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_.Exception.Message is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.Exception.Message
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #0000FF;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Test-Path&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;c:\Program Files (x86)\Java&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #FF0000;&#34;&gt;-Or&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Test-Path&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;c:\Program Files\Java&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Java installed successfully.&#39;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span style=&#34;color: #0000FF;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Java install Failed!&#39;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Setting up Path variables.&#39;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;System.Environment&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt;::SetEnvironmentVariable&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #800000;&#34;&gt;&#34;JAVA_HOME&#34;&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;c:\Program Files (x86)\Java\jdk$JDK_PATH&#34;&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Machine&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;System.Environment&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt;::SetEnvironmentVariable&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #800000;&#34;&gt;&#34;PATH&#34;&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$Env&lt;/span&gt;:Path &lt;span style=&#34;color: pink;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;;c:\Program Files (x86)\Java\jdk$JDK_PATH\bin&#34;&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Machine&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Done. Goodbye.&#39;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;This installs both x86 and 64 bit version of Java.&lt;/p&gt;

&lt;h1 id=&#34;provision:f7526662c18d742c428b0293edfcb3e4&#34;&gt;Provision&lt;/h1&gt;

&lt;p&gt;I decided to put these into the provision phase to get log messages written out properly. Because in the unattended file, you can&amp;#8217;t see any progress.&lt;/p&gt;

&lt;h4 id=&#34;chrome-and-firefox:f7526662c18d742c428b0293edfcb3e4&#34;&gt;Chrome And Firefox&lt;/h4&gt;

&lt;p&gt;Installing these two proved a little bit more difficult. Chrome didn&amp;#8217;t really like me to download their installer without accepting something first, like Java. Luckily, after a LOT of digging, I found a chrome installer which lets you install silently. Here is the script to install the two.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;powershell&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #0000FF;&#34;&gt;function&lt;/span&gt; LogWrite &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span style=&#34;color: #0000FF;&#34;&gt;Param&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&#34;color: #008080;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;$logstring&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #800080;&#34;&gt;$now&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Get-Date&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-format&lt;/span&gt; s
    &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Add-Content&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$Logfile&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-value&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;$now $logstring&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$logstring&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #0000FF;&#34;&gt;function&lt;/span&gt; CheckLocation &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span style=&#34;color: #0000FF;&#34;&gt;Param&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&#34;color: #008080;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;$location&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #0000FF;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Test-Path&lt;/span&gt;  &lt;span style=&#34;color: #800080;&#34;&gt;$location&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
        &lt;span style=&#34;color: #0000FF;&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;System.IO.FileNotFoundException&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Could not download to Destination $location.&#34;&lt;/span&gt;
    &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #800080;&#34;&gt;$Logfile&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;C:\Windows\Temp\chrome-firefox-install.log&#34;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #800080;&#34;&gt;$chrome_source&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;http://dl.google.com/chrome/install/375.126/chrome_installer.exe&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$chrome_destination&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;C:\Windows\Temp\chrome_installer.exe&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$firefox_source&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;https://download-installer.cdn.mozilla.net/pub/firefox/releases/39.0/win32/hu/Firefox%20Setup%2039.0.exe&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$firefox_destination&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;C:\Windows\Temp\firefoxinstaller.exe&#34;&lt;/span&gt;
&amp;nbsp;
LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Starting to download files.&#39;&lt;/span&gt;
try &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Downloading Chrome...&#39;&lt;/span&gt;
    &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;New-Object&lt;/span&gt; System.Net.WebClient&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;.DownloadFile&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;$chrome_source&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$chrome_destination&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
    CheckLocation &lt;span style=&#34;color: #800080;&#34;&gt;$chrome_destination&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Done...&#39;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Downloading Firefox...&#39;&lt;/span&gt;
    &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;New-Object&lt;/span&gt; System.Net.WebClient&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;.DownloadFile&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;$firefox_source&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$firefox_destination&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
    CheckLocation &lt;span style=&#34;color: #800080;&#34;&gt;$firefox_destination&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt; catch &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;Exception&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Exception during download. Probable cause could be that the directory or the file didn&#39;t exist.&#34;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_.Exception is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.Exception
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Starting firefox install process.&#39;&lt;/span&gt;
try &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    Start&lt;span style=&#34;color: pink;&#34;&gt;-&lt;/span&gt;Process &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-FilePath&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$firefox_destination&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-ArgumentList&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;-ms&#34;&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-Wait&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-PassThru&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt; catch &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;Exception&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Exception during install process.&#39;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_.Exception is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.Exception
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Starting chrome install process.&#39;&lt;/span&gt;
&amp;nbsp;
try &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    Start&lt;span style=&#34;color: pink;&#34;&gt;-&lt;/span&gt;Process &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-FilePath&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$chrome_destination&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-ArgumentList&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;/silent /install&#34;&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-Wait&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-PassThru&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt; catch &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;Exception&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Exception during install process.&#39;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_.Exception is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.Exception
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;All done. Goodbye.&#39;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;They both install silently. Pretty neat.&lt;/p&gt;

&lt;h4 id=&#34;selenium:f7526662c18d742c428b0293edfcb3e4&#34;&gt;Selenium&lt;/h4&gt;

&lt;p&gt;This only has to be downloaded, so this is pretty simple. Vagrant will handle the startup of course when it does a vagrant up.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;powershell&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #0000FF;&#34;&gt;function&lt;/span&gt; LogWrite &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
   &lt;span style=&#34;color: #0000FF;&#34;&gt;Param&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&#34;color: #008080;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;$logstring&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
   &lt;span style=&#34;color: #800080;&#34;&gt;$now&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Get-Date&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-format&lt;/span&gt; s
   &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Add-Content&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$Logfile&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-value&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;$now $logstring&#34;&lt;/span&gt;
   &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$logstring&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #800080;&#34;&gt;$Logfile&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;C:\Windows\Temp\selenium-install.log&#34;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #800080;&#34;&gt;$source&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;http://selenium-release.storage.googleapis.com/2.46/selenium-server-standalone-2.46.0.jar&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$destination&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;C:\Windows\Temp\selenium-server.jar&#34;&lt;/span&gt;
LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Starting to download selenium file.&#39;&lt;/span&gt;
try &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
  &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;New-Object&lt;/span&gt; System.Net.WebClient&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;.DownloadFile&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;$source&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$destination&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt; catch &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;Exception&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
  LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Exception during download. Probable cause could be that the directory or the file didn&#39;t exist.&#34;&lt;/span&gt;
  LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_.Exception is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.Exception
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Download done. Checking if file exists.&#39;&lt;/span&gt;
&lt;span style=&#34;color: #0000FF;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Test-Path&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$destination&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
  LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Downloading dotnet Failed!&#39;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span style=&#34;color: #0000FF;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
  LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Download successful.&#39;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#39;All done. Goodbye.&#39;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Straightforward.&lt;/p&gt;

&lt;h4 id=&#34;the-packer-json-file:f7526662c18d742c428b0293edfcb3e4&#34;&gt;The Packer Json File&lt;/h4&gt;

&lt;p&gt;So putting this all together, here is the Packer JSON file for this:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;json&#34; style=&#34;font-family:monospace;&#34;&gt;{
      &#34;variables&#34;: {
      &#34;vm_name&#34;: &#34;win7x64selenium&#34;,
      &#34;output_dir&#34;: &#34;output_win7_x64_selenium&#34;,
      &#34;vagrant_box_output&#34;: &#34;box_output&#34;,
      &#34;cpu_number&#34;: &#34;2&#34;,
      &#34;memory_size&#34;: &#34;4096&#34;,
      &#34;machine_type&#34;: &#34;pc-1.2&#34;,
      &#34;accelerator&#34;: &#34;kvm&#34;,
      &#34;disk_format&#34;: &#34;qcow2&#34;,
      &#34;disk_interface&#34;: &#34;virtio&#34;,
      &#34;net_device&#34;: &#34;virtio-net&#34;,
      &#34;cpu_model&#34;: &#34;host&#34;,
      &#34;disk_cache&#34;: &#34;writeback&#34;,
      &#34;disk_io&#34;: &#34;native&#34;
   },
&amp;nbsp;
  &#34;builders&#34;: [
    {
      &#34;type&#34;: &#34;virtualbox-iso&#34;,
      &#34;iso_url&#34;: &#34;/home/user/vms/windows7.iso&#34;,
      &#34;iso_checksum_type&#34;: &#34;sha1&#34;,
      &#34;iso_checksum&#34;: &#34;0BCFC54019EA175B1EE51F6D2B207A3D14DD2B58&#34;,
      &#34;headless&#34;: true,
      &#34;boot_wait&#34;: &#34;2m&#34;,
      &#34;ssh_username&#34;: &#34;vagrant&#34;,
      &#34;ssh_password&#34;: &#34;vagrant&#34;,
      &#34;ssh_wait_timeout&#34;: &#34;8h&#34;,
      &#34;shutdown_command&#34;: &#34;shutdown /s /t 10 /f /d p:4:1 /c \&#34;Packer Shutdown\&#34;&#34;,
      &#34;guest_os_type&#34;: &#34;Windows7_64&#34;,
      &#34;disk_size&#34;: 61440,
      &#34;floppy_files&#34;: [
        &#34;./answer_files/7-selenium/Autounattend.xml&#34;,
        &#34;./scripts/dis-updates.ps1&#34;,
        &#34;./scripts/microsoft-updates.bat&#34;,
        &#34;./scripts/openssh.ps1&#34;,
        &#34;./scripts/jdk_inst.ps1&#34;
      ],
      &#34;vboxmanage&#34;: [
        [
          &#34;modifyvm&#34;,
          &#34;{{.Name}}&#34;,
          &#34;--memory&#34;,
          &#34;{{user `memory_size`}}&#34;
        ],
        [
          &#34;modifyvm&#34;,
          &#34;{{.Name}}&#34;,
          &#34;--cpus&#34;,
          &#34;{{user `cpu_number`}}&#34;
        ]
      ]
    }
  ],
  &#34;provisioners&#34;: [
    {
      &#34;type&#34;: &#34;powershell&#34;,
      &#34;scripts&#34; : [
        &#34;./scripts/install-selenium-server.ps1&#34;,
        &#34;./scripts/install-chrome-firefox.ps1&#34;
      ]
    },{
      &#34;type&#34;: &#34;shell&#34;,
      &#34;remote_path&#34;: &#34;/tmp/script.bat&#34;,
      &#34;execute_command&#34;: &#34;{{.Vars}} cmd /c C:/Windows/Temp/script.bat&#34;,
      &#34;scripts&#34;: [
        &#34;./scripts/vm-guest-tools.bat&#34;,
        &#34;./scripts/vagrant-ssh.bat&#34;,
        &#34;./scripts/rsync.bat&#34;,
        &#34;./scripts/enable-rdp.bat&#34;
      ]
    }
  ],
    &#34;post-processors&#34;: [
    {
      &#34;type&#34;: &#34;vagrant&#34;,
      &#34;keep_input_artifact&#34;: false,
      &#34;output&#34;: &#34;{{user `vm_name`}}_{{.Provider}}.box&#34;,
      &#34;vagrantfile_template&#34;: &#34;vagrantfile-template&#34;
    }
    ]
}&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;h4 id=&#34;additional-software:f7526662c18d742c428b0293edfcb3e4&#34;&gt;Additional Software&lt;/h4&gt;

&lt;p&gt;This is not done here. Obviously, in order to test your stuff, you first need to install your software on this box. Ideally, everything you need should be in the code you clone to this box, and should be contained mostly. And your application deployment should take core of that. But, if you require something like a DB, postgres, oracle, whatnot, than this is the place where you would install all that.&lt;/p&gt;

&lt;h1 id=&#34;vagrant-and-using-the-packer-box:f7526662c18d742c428b0293edfcb3e4&#34;&gt;Vagrant and Using the Packer Box&lt;/h1&gt;

&lt;p&gt;Now, this has been interesting so far, but how do you actually go about using this image? That&amp;#8217;s the real question now, isn&amp;#8217;t it? Having a box, just sitting on a shared folder, doesn&amp;#8217;t do you too much good. So let&amp;#8217;s create a Jenkins job, which utilizes this box in a job which runs a bunch of tests for some application.&lt;/p&gt;

&lt;h4 id=&#34;vagrantfile:f7526662c18d742c428b0293edfcb3e4&#34;&gt;Vagrantfile&lt;/h4&gt;

&lt;p&gt;Your vagrant file, could either be generated automatically, under source control ( which is preferred ) or sitting somewhere entirely elsewhere. In any case, it would look something like this.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;ruby&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color:#008000; font-style:italic;&#34;&gt;# -*- mode: ruby -*-&lt;/span&gt;
&lt;span style=&#34;color:#008000; font-style:italic;&#34;&gt;# vi: set ft=ruby :&lt;/span&gt;
&amp;nbsp;
VAGRANTFILE_API_VERSION = &lt;span style=&#34;color:#996600;&#34;&gt;&#34;2&#34;&lt;/span&gt;
&amp;nbsp;
Vagrant.&lt;span style=&#34;color:#9900CC;&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color:#006600; font-weight:bold;&#34;&gt;&amp;#40;&lt;/span&gt;VAGRANTFILE_API_VERSION&lt;span style=&#34;color:#006600; font-weight:bold;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color:#9966CC; font-weight:bold;&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#006600; font-weight:bold;&#34;&gt;|&lt;/span&gt;config&lt;span style=&#34;color:#006600; font-weight:bold;&#34;&gt;|&lt;/span&gt;
&amp;nbsp;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;provider&lt;/span&gt; &lt;span style=&#34;color:#996600;&#34;&gt;&#34;virtualbox&#34;&lt;/span&gt;
&amp;nbsp;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#996600;&#34;&gt;&#34;selenium-box&#34;&lt;/span&gt; &lt;span style=&#34;color:#9966CC; font-weight:bold;&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#006600; font-weight:bold;&#34;&gt;|&lt;/span&gt;vs2013&lt;span style=&#34;color:#006600; font-weight:bold;&#34;&gt;|&lt;/span&gt;
    vs2013.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;box&lt;/span&gt; = &lt;span style=&#34;color:#996600;&#34;&gt;&#34;windows7-x64-04-selenium&#34;&lt;/span&gt;
    vs2013.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;box_url&lt;/span&gt; = &lt;span style=&#34;color:#996600;&#34;&gt;&#34;path/to/your/share/win7x64_selenium_virtualbox.box&#34;&lt;/span&gt;
  &lt;span style=&#34;color:#9966CC; font-weight:bold;&#34;&gt;end&lt;/span&gt;
&amp;nbsp;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;env&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;enable&lt;/span&gt;
&amp;nbsp;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;guest&lt;/span&gt; = &lt;span style=&#34;color:#ff3333; font-weight:bold;&#34;&gt;:windows&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;communicator&lt;/span&gt; = &lt;span style=&#34;color:#996600;&#34;&gt;&#34;winrm&#34;&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;winrm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;username&lt;/span&gt; = &lt;span style=&#34;color:#996600;&#34;&gt;&#34;vagrant&#34;&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;winrm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;password&lt;/span&gt; = &lt;span style=&#34;color:#996600;&#34;&gt;&#34;vagrant&#34;&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;windows&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;set_work_network&lt;/span&gt; = &lt;span style=&#34;color:#0000FF; font-weight:bold;&#34;&gt;true&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;network&lt;/span&gt; &lt;span style=&#34;color:#ff3333; font-weight:bold;&#34;&gt;:forwarded_port&lt;/span&gt;, guest: &lt;span style=&#34;color:#006666;&#34;&gt;3389&lt;/span&gt;, host: ENV&lt;span style=&#34;color:#006600; font-weight:bold;&#34;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&#34;color:#996600;&#34;&gt;&#39;RDESKTOP_PORT&#39;&lt;/span&gt;&lt;span style=&#34;color:#006600; font-weight:bold;&#34;&gt;&amp;#93;&lt;/span&gt;, host_ip: &lt;span style=&#34;color:#996600;&#34;&gt;&#34;0.0.0.0&#34;&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;network&lt;/span&gt; &lt;span style=&#34;color:#ff3333; font-weight:bold;&#34;&gt;:forwarded_port&lt;/span&gt;, guest: &lt;span style=&#34;color:#006666;&#34;&gt;5985&lt;/span&gt;, host: &lt;span style=&#34;color:#006666;&#34;&gt;5985&lt;/span&gt;, id: &lt;span style=&#34;color:#996600;&#34;&gt;&#34;winrm&#34;&lt;/span&gt;, auto_correct: &lt;span style=&#34;color:#0000FF; font-weight:bold;&#34;&gt;true&lt;/span&gt;, host_ip: &lt;span style=&#34;color:#996600;&#34;&gt;&#34;0.0.0.0&#34;&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;network&lt;/span&gt; &lt;span style=&#34;color:#ff3333; font-weight:bold;&#34;&gt;:forwarded_port&lt;/span&gt;, guest: &lt;span style=&#34;color:#006666;&#34;&gt;9991&lt;/span&gt;, host: &lt;span style=&#34;color:#006666;&#34;&gt;9991&lt;/span&gt;, id: &lt;span style=&#34;color:#996600;&#34;&gt;&#34;selenium&#34;&lt;/span&gt;, auto_correct: &lt;span style=&#34;color:#0000FF; font-weight:bold;&#34;&gt;true&lt;/span&gt;, host_ip: &lt;span style=&#34;color:#996600;&#34;&gt;&#34;0.0.0.0&#34;&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;provider&lt;/span&gt; &lt;span style=&#34;color:#ff3333; font-weight:bold;&#34;&gt;:virtualbox&lt;/span&gt; &lt;span style=&#34;color:#9966CC; font-weight:bold;&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#006600; font-weight:bold;&#34;&gt;|&lt;/span&gt;vbox&lt;span style=&#34;color:#006600; font-weight:bold;&#34;&gt;|&lt;/span&gt;
    vbox.&lt;span style=&#34;color:#9900CC;&#34;&gt;gui&lt;/span&gt; = &lt;span style=&#34;color:#0000FF; font-weight:bold;&#34;&gt;false&lt;/span&gt;
    vbox.&lt;span style=&#34;color:#9900CC;&#34;&gt;memory&lt;/span&gt; = &lt;span style=&#34;color:#006666;&#34;&gt;4096&lt;/span&gt;
    vbox.&lt;span style=&#34;color:#9900CC;&#34;&gt;cpus&lt;/span&gt; = &lt;span style=&#34;color:#006666;&#34;&gt;2&lt;/span&gt;
  &lt;span style=&#34;color:#9966CC; font-weight:bold;&#34;&gt;end&lt;/span&gt;
&amp;nbsp;
&amp;nbsp;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;winrm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;max_tries&lt;/span&gt; = &lt;span style=&#34;color:#006666;&#34;&gt;10&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;synced_folder&lt;/span&gt; &lt;span style=&#34;color:#996600;&#34;&gt;&#34;.&#34;&lt;/span&gt;, &lt;span style=&#34;color:#996600;&#34;&gt;&#34;/vagrant&#34;&lt;/span&gt;, type: &lt;span style=&#34;color:#996600;&#34;&gt;&#34;rsync&#34;&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;provision&lt;/span&gt; &lt;span style=&#34;color:#996600;&#34;&gt;&#34;shell&#34;&lt;/span&gt;, path: &lt;span style=&#34;color:#996600;&#34;&gt;&#34;init.bat&#34;&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;provision&lt;/span&gt; &lt;span style=&#34;color:#996600;&#34;&gt;&#34;shell&#34;&lt;/span&gt;, path: &lt;span style=&#34;color:#996600;&#34;&gt;&#34;utils_inst.bat&#34;&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;provision&lt;/span&gt; &lt;span style=&#34;color:#996600;&#34;&gt;&#34;shell&#34;&lt;/span&gt;, path: &lt;span style=&#34;color:#996600;&#34;&gt;&#34;jenkins_reg.ps1&#34;&lt;/span&gt;
  config.&lt;span style=&#34;color:#9900CC;&#34;&gt;vm&lt;/span&gt;.&lt;span style=&#34;color:#9900CC;&#34;&gt;provision&lt;/span&gt; &lt;span style=&#34;color:#996600;&#34;&gt;&#34;shell&#34;&lt;/span&gt;, path: &lt;span style=&#34;color:#996600;&#34;&gt;&#34;start_selenium.bat&#34;&lt;/span&gt;
&lt;span style=&#34;color:#9966CC; font-weight:bold;&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Easy, no? Here is the script to start selenium.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;batch&#34; style=&#34;font-family:monospace;&#34;&gt;    java -jar c:\Windows\Temp\selenium-server.jar -Dhttp.proxyPort=9991&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Straight forward. We also are forwarding the port on which Selenium is running in order for the test to see it.&lt;/p&gt;

&lt;h4 id=&#34;the-jenkins-job:f7526662c18d742c428b0293edfcb3e4&#34;&gt;The Jenkins Job&lt;/h4&gt;

&lt;p&gt;The job can be anything. This is actually too large to cover here. It could be a gradle job, a maven job, an ant, a nant &amp;#8211; or whatever is running the test -, job; it&amp;#8217;s up to you.&lt;/p&gt;

&lt;p&gt;Just make sure that before the test runs, do a &lt;strong&gt;vagrant up&lt;/strong&gt; and after the test finishes, in an ALWAYS TO BE EXECUTED HOOK -like gradle&amp;#8217;s finalizedBy , call a &lt;strong&gt;vagrant destroy&lt;/strong&gt;. This way, your test will always run on a clean instance that has the necessary stuff on it.&lt;/p&gt;

&lt;h1 id=&#34;closing-words:f7526662c18d742c428b0293edfcb3e4&#34;&gt;Closing words&lt;/h1&gt;

&lt;p&gt;So, there you have it. It&amp;#8217;s relatively simple. Tying this all into your infrastructure might prove difficult though depending on how rigid your deployment is. But it will always help you make your tests a bit more robust.&lt;/p&gt;

&lt;p&gt;Also, you could run the whole deployment and test phase on a vagrant box, from the start, which is tied to jenkins as a slave and gets started when the job starts and destroyed when the job ends. That way you wouldn&amp;#8217;t have to create a, box in a box running on a box, kind of effect.&lt;/p&gt;

&lt;p&gt;Thanks for reading,&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Packer 0.8.1.</title>
      <link>https://skarlso.github.io/2015/07/01/packer-0-8-1/</link>
      <pubDate>Wed, 01 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/07/01/packer-0-8-1/</guid>
      <description>&lt;p&gt;Previously I wrote that the scripts I&amp;#8217;m writing, are failing because Packer hangs.&lt;/p&gt;

&lt;p&gt;Apparently, this was a known issue. And apparently, I was using an older version, 0.7.5. After I updated everything is working wonderfully!!!&lt;/p&gt;

&lt;p&gt;And for my thanks, here is an updated PowerShell script for provisioning my dotnet stuff.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;powershell&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #800080;&#34;&gt;$source&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;http://download.microsoft.com/download/1/6/7/167F0D79-9317-48AE-AEDB-17120579F8E2/NDP451-KB2858728-x86-x64-AllOS-ENU.exe&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$destination&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;C:\Windows\Temp\dotnet.exe&#34;&lt;/span&gt;
&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Starting to download dotnet file.&#39;&lt;/span&gt;
try &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
  &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;New-Object&lt;/span&gt; System.Net.WebClient&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;.DownloadFile&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;$source&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$destination&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt; catch &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;Exception&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
  &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Exception during download. Probable cause could be that the directory or the file didn&#39;t exist.&#34;&lt;/span&gt;
  &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_.Exception is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.Exception
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Download done. Checking if file exists.&#39;&lt;/span&gt;
&lt;span style=&#34;color: #0000FF;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Test-Path&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$destination&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
  &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Downloading dotnet Failed!&#39;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span style=&#34;color: #0000FF;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
  &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Download successful.&#39;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Starting install process.&#39;&lt;/span&gt;
try &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
  Start&lt;span style=&#34;color: pink;&#34;&gt;-&lt;/span&gt;Process &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-FilePath&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$source&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-ArgumentList&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;/q /norestart&#34;&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-Wait&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-PassThru&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt; catch &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;Exception&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
  &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Exception during install process.&#39;&lt;/span&gt;
  &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_.Exception is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.Exception
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;All done. Goodbye.&#39;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Powershell can also be nice -Or Installing Java silently and waiting</title>
      <link>https://skarlso.github.io/2015/06/30/powershell-can-also-be-nice-or-installing-java-silently-and-waiting/</link>
      <pubDate>Tue, 30 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/06/30/powershell-can-also-be-nice-or-installing-java-silently-and-waiting/</guid>
      <description>&lt;p&gt;Hello folks.&lt;/p&gt;

&lt;p&gt;Today, I would like to show you a small script. It installs Java JDK, both version, x86 and 64 bit, silently, and wait for that process to finish.&lt;/p&gt;

&lt;p&gt;The wait is necessary because /s on a java install has the nasty habit of running in the background. If you are using a .bat file, &lt;strong&gt;you shouldn&amp;#8217;t&lt;/strong&gt;, than you would use something like: start /w jdk-setup.exe /s. This gets it done, but is ugly. Also, if you are using Packer and PowerShell provisioning, you might want to set up some environment variables as well for the next script. And you want that property to be available and you don&amp;#8217;t want to mess it up with setting a path into a file and then re-setting your path on the begin of your other script. Or pass it around with Packer. No. Use a proper PowerShell script. Learn it. It&amp;#8217;s not that hard. Be a professional. Don&amp;#8217;t hack something together for the next person to suffer at.&lt;/p&gt;

&lt;p&gt;Here is how I did it. Hope it helps somebody out.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;powershell&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #800080;&#34;&gt;$JDK_VER&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #800000;&#34;&gt;&#34;7u75&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$JDK_FULL_VER&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #800000;&#34;&gt;&#34;7u75-b13&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$JDK_PATH&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #800000;&#34;&gt;&#34;1.7.0_75&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$source86&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;http://download.oracle.com/otn-pub/java/jdk/$JDK_FULL_VER/jdk-$JDK_VER-windows-i586.exe&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$source64&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;http://download.oracle.com/otn-pub/java/jdk/$JDK_FULL_VER/jdk-$JDK_VER-windows-x64.exe&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$destination86&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;C:\vagrant\$JDK_VER-x86.exe&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$destination64&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;C:\vagrant\$JDK_VER-x64.exe&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$client&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;new-object&lt;/span&gt; System.Net.WebClient
&lt;span style=&#34;color: #800080;&#34;&gt;$cookie&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;oraclelicense=accept-securebackup-cookie&#34;&lt;/span&gt;
&lt;span style=&#34;color: #800080;&#34;&gt;$client&lt;/span&gt;.Headers.Add&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;System.Net.HttpRequestHeader&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt;::Cookie&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$cookie&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Checking if Java is already installed&#39;&lt;/span&gt;
&lt;span style=&#34;color: #0000FF;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Test-Path&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;c:\Program Files (x86)\Java&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #FF0000;&#34;&gt;-Or&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Test-Path&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;c:\Program Files\Java&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;No need to Install Java&#39;&lt;/span&gt;
    Exit
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Downloading x86 to $destination86&#39;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #800080;&#34;&gt;$client&lt;/span&gt;.downloadFile&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;$source86&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$destination86&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
&lt;span style=&#34;color: #0000FF;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Test-Path&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$destination86&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Downloading $destination86 failed&#34;&lt;/span&gt;
    Exit
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Downloading x64 to $destination64&#39;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #800080;&#34;&gt;$client&lt;/span&gt;.downloadFile&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;$source64&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$destination64&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
&lt;span style=&#34;color: #0000FF;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Test-Path&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$destination64&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Downloading $destination64 failed&#34;&lt;/span&gt;
    Exit
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
&amp;nbsp;
try &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Installing JDK-x64&#39;&lt;/span&gt;
    &lt;span style=&#34;color: #800080;&#34;&gt;$proc1&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; Start&lt;span style=&#34;color: pink;&#34;&gt;-&lt;/span&gt;Process &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-FilePath&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;$destination64&#34;&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-ArgumentList&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;/s REBOOT=ReallySuppress&#34;&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-Wait&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-PassThru&lt;/span&gt;
    &lt;span style=&#34;color: #800080;&#34;&gt;$proc1&lt;/span&gt;.waitForExit&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Installation Done.&#39;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Installing JDK-x86&#39;&lt;/span&gt;
    &lt;span style=&#34;color: #800080;&#34;&gt;$proc2&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; Start&lt;span style=&#34;color: pink;&#34;&gt;-&lt;/span&gt;Process &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-FilePath&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;$destination86&#34;&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-ArgumentList&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;/s REBOOT=ReallySuppress&#34;&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-Wait&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-PassThru&lt;/span&gt;
    &lt;span style=&#34;color: #800080;&#34;&gt;$proc2&lt;/span&gt;.waitForExit&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Installtion Done.&#39;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt; catch &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;exception&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;write-host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_ is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;
    &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;write-host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_.GetType().FullName is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.GetType&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;.FullName
    &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;write-host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_.Exception is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.Exception
    &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;write-host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_.Exception.GetType().FullName is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.Exception.GetType&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;.FullName
    &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;write-host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;$_.Exception.Message is&#39;&lt;/span&gt; &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.Exception.Message
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #0000FF;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Test-Path&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;c:\Program Files (x86)\Java&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #FF0000;&#34;&gt;-Or&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Test-Path&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;c:\Program Files\Java&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Java installed successfully.&#39;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Setting up Path variables.&#39;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;System.Environment&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt;::SetEnvironmentVariable&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #800000;&#34;&gt;&#34;JAVA_HOME&#34;&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;c:\Program Files (x86)\Java\jdk$JDK_PATH&#34;&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Machine&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;System.Environment&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt;::SetEnvironmentVariable&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #800000;&#34;&gt;&#34;PATH&#34;&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$Env&lt;/span&gt;:Path &lt;span style=&#34;color: pink;&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;;c:\Program Files (x86)\Java\jdk$JDK_PATH\bin&#34;&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Machine&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;Done. Goodbye.&#39;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Now, there is room for improvement here. Like checking exit code, doing something extra after a failed exit. Throwing an exception, and so on and so forth. But this is a much needed improvement from calling a BAT file.&lt;/p&gt;

&lt;p&gt;And you would use this in a Packer JSON file like this..&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;json&#34; style=&#34;font-family:monospace;&#34;&gt;{
      &#34;type&#34;: &#34;powershell&#34;,
      &#34;scripts&#34;: [
        &#34;./scripts/jdk_inst.ps1&#34;
      ]
}&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Easy. And at the end, the System.Environment actually writes out into the registry permanently so no need to pass it around in a file or something ugly like that.&lt;/p&gt;

&lt;p&gt;Hope this helps somebody.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Packer, The Windows, and the Vagrant box</title>
      <link>https://skarlso.github.io/2015/06/27/the-packer-the-windows-and-the-vagrant-box/</link>
      <pubDate>Sat, 27 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/06/27/the-packer-the-windows-and-the-vagrant-box/</guid>
      <description>

&lt;p&gt;Hello folks.&lt;/p&gt;

&lt;p&gt;Today, I would like to write about something close to my heart recently. I&amp;#8217;ve been fiddling with Packer, Windows and Vagrant these days. Trying to get a Windows box up in running is a pain in the arse though, so I thought I share my pain with you nice folks out there. Let&amp;#8217;s begin.&lt;/p&gt;

&lt;h1 id=&#34;setup:f5491ddf470c8b3b2c7d93c66ee59189&#34;&gt;Setup&lt;/h1&gt;

&lt;p&gt;First things first. You need &lt;a href=&#34;https://packer.io/&#34; target=&#34;_blank&#34;&gt;Packer&lt;/a&gt;, and &lt;a href=&#34;https://www.vagrantup.com/&#34; target=&#34;_blank&#34;&gt;Vagrant&lt;/a&gt; obviously. I&amp;#8217;ll leave the install up to you. Next, you should clone this git repo =&amp;gt; &lt;a href=&#34;https://github.com/joefitzgerald/packer-windows&#34; target=&#34;_blank&#34;&gt;Packer Windows Plugin&lt;/a&gt;. This plugin contains all the files necessary to get, install, and provision Windows boxes. Luckily, some very nice and clever folks, figured out a lot of things about how to install stuff on Windows. And given that people at Microsoft realised that sys admins would like to install stuff remotely, there are a bunch of forums and places where you can search for how to install software without user interaction. And this is the keyword you should look for =&amp;gt; &lt;strong&gt;unattended Windows install&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This will lead you further into the bowls of Windows technology and silent / quiet installs all over the place.&lt;/p&gt;

&lt;h1 id=&#34;packer-and-answer-files:f5491ddf470c8b3b2c7d93c66ee59189&#34;&gt;Packer and Answer Files&lt;/h1&gt;

&lt;p&gt;When it comes to installing software on Windows, you have quite a few obstacles to overtake. One of the biggest obstacle you are facing, are restarts. Windows has a special place in hell for that. Every time you install something important which requires system libraries or other kind of configuration which &amp;#8220;will only take effect after you restart Windows&amp;#8221; you have to do a restart. Now, a little background on how Packer interacts with Windows. At the moment, it uses OpenSSH to talk to the box which has to be the last which comes up. If it looses connection to openssh because, I don&amp;#8217;t know, it restarted itself, you loose communication to the box, and the setup process stops in mid tracks.&lt;/p&gt;

&lt;p&gt;If you read about that in an earlier attempt to overtake this, you saw that you could use time-outs. You could kill ssh process which presumably makes packer do an attempt to start a new connection. If you are like me, you experienced that Packer does indeed NOT re-try. Because the previous task couldn&amp;#8217;t finish, the restart killed the ssh service which could tell Packer that the previous task, an install for example, has finished. Hence, Packer will stay there and wait for that task to complete; which will never happen at this point.&lt;/p&gt;

&lt;p&gt;What can we do? Enter the world of &lt;a href=&#34;https://technet.microsoft.com/en-us/library/cc749113(v=ws.10).aspx&#34; target=&#34;_blank&#34;&gt;Answer Files&lt;/a&gt;. Basically, it&amp;#8217;s an xml file which sets up Windows. When Packer is running this file, the last service which should be installed, must be openSSH. And after that, in the provisioning phase, you should only install software which does not require restarts.&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s look at an example.&lt;/p&gt;

&lt;h1 id=&#34;example-1-windows-updates:f5491ddf470c8b3b2c7d93c66ee59189&#34;&gt;Example #1: Windows Updates&lt;/h1&gt;

&lt;p&gt;This is another layer of purgatory for Windows. It&amp;#8217;s updates. The updates take massive amount of times, if you are doing them from scratch, and also require several restart before it&amp;#8217;s actually done. YouÂ &lt;strong&gt;couldÂ &lt;/strong&gt;speed up the process a little bit, if you have a private network share where all of the Windows updates are sitting. At least that way you don&amp;#8217;t have to download them every time you are creating a box. But you can&amp;#8217;t avert the install process itself.&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s look at a setup for packer. Packer works with JSON files for it&amp;#8217;s configuration. An example for a Windows 7 box would look something like this:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;json&#34; style=&#34;font-family:monospace;&#34;&gt;{
  &#34;builders&#34;: [
    {
      &#34;type&#34;: &#34;vmware-iso&#34;,
      &#34;iso_url&#34;: &#34;http://care.dlservice.microsoft.com/dl/download/evalx/win7/x64/EN/7600.16385.090713-1255_x64fre_enterprise_en-us_EVAL_Eval_Enterprise-GRMCENXEVAL_EN_DVD.iso&#34;,
      &#34;iso_checksum_type&#34;: &#34;md5&#34;,
      &#34;iso_checksum&#34;: &#34;1d0d239a252cb53e466d39e752b17c28&#34;,
      &#34;headless&#34;: true,
      &#34;boot_wait&#34;: &#34;2m&#34;,
      &#34;ssh_username&#34;: &#34;vagrant&#34;,
      &#34;ssh_password&#34;: &#34;vagrant&#34;,
      &#34;ssh_wait_timeout&#34;: &#34;8h&#34;,
      &#34;shutdown_command&#34;: &#34;shutdown /s /t 10 /f /d p:4:1 /c \&#34;Packer Shutdown\&#34;&#34;,
      &#34;guest_os_type&#34;: &#34;windows7-64&#34;,
      &#34;tools_upload_flavor&#34;: &#34;windows&#34;,
      &#34;disk_size&#34;: 61440,
      &#34;vnc_port_min&#34;: 5900,
      &#34;vnc_port_max&#34;: 5980,
      &#34;floppy_files&#34;: [
        &#34;./answer_files/7/Autounattend.xml&#34;,
        &#34;./scripts/dis-updates.ps1&#34;,
        &#34;./scripts/microsoft-updates.bat&#34;,
        &#34;./scripts/win-updates.ps1&#34;,
        &#34;./scripts/openssh.ps1&#34;
      ],
      &#34;vmx_data&#34;: {
        &#34;RemoteDisplay.vnc.enabled&#34;: &#34;false&#34;,
        &#34;RemoteDisplay.vnc.port&#34;: &#34;5900&#34;,
        &#34;memsize&#34;: &#34;2048&#34;,
        &#34;numvcpus&#34;: &#34;2&#34;,
        &#34;scsi0.virtualDev&#34;: &#34;lsisas1068&#34;
      }
    },
    {
      &#34;type&#34;: &#34;virtualbox-iso&#34;,
      &#34;iso_url&#34;: &#34;http://care.dlservice.microsoft.com/dl/download/evalx/win7/x64/EN/7600.16385.090713-1255_x64fre_enterprise_en-us_EVAL_Eval_Enterprise-GRMCENXEVAL_EN_DVD.iso&#34;,
      &#34;iso_checksum_type&#34;: &#34;md5&#34;,
      &#34;iso_checksum&#34;: &#34;1d0d239a252cb53e466d39e752b17c28&#34;,
      &#34;headless&#34;: true,
      &#34;boot_wait&#34;: &#34;2m&#34;,
      &#34;ssh_username&#34;: &#34;vagrant&#34;,
      &#34;ssh_password&#34;: &#34;vagrant&#34;,
      &#34;ssh_wait_timeout&#34;: &#34;8h&#34;,
      &#34;shutdown_command&#34;: &#34;shutdown /s /t 10 /f /d p:4:1 /c \&#34;Packer Shutdown\&#34;&#34;,
      &#34;guest_os_type&#34;: &#34;Windows7_64&#34;,
      &#34;disk_size&#34;: 61440,
      &#34;floppy_files&#34;: [
        &#34;./answer_files/7/Autounattend.xml&#34;,
        &#34;./scripts/dis-updates.ps1&#34;,
        &#34;./scripts/microsoft-updates.bat&#34;,
        &#34;./scripts/win-updates.ps1&#34;,
        &#34;./scripts/openssh.ps1&#34;,
        &#34;./scripts/oracle-cert.cer&#34;
      ],
      &#34;vboxmanage&#34;: [
        [
          &#34;modifyvm&#34;,
          &#34;{{.Name}}&#34;,
          &#34;--memory&#34;,
          &#34;2048&#34;
        ],
        [
          &#34;modifyvm&#34;,
          &#34;{{.Name}}&#34;,
          &#34;--cpus&#34;,
          &#34;2&#34;
        ]
      ]
    }
  ],
  &#34;provisioners&#34;: [
    {
      &#34;type&#34;: &#34;shell&#34;,
      &#34;remote_path&#34;: &#34;/tmp/script.bat&#34;,
      &#34;execute_command&#34;: &#34;{{.Vars}} cmd /c C:/Windows/Temp/script.bat&#34;,
      &#34;scripts&#34;: [
        &#34;./scripts/vm-guest-tools.bat&#34;,
        &#34;./scripts/chef.bat&#34;,
        &#34;./scripts/vagrant-ssh.bat&#34;,
        &#34;./scripts/disable-auto-logon.bat&#34;,
        &#34;./scripts/enable-rdp.bat&#34;,
        &#34;./scripts/compile-dotnet-assemblies.bat&#34;,
        &#34;./scripts/compact.bat&#34;
      ]
    }
  ],
  &#34;post-processors&#34;: [
    {
      &#34;type&#34;: &#34;vagrant&#34;,
      &#34;keep_input_artifact&#34;: false,
      &#34;output&#34;: &#34;windows_7_{{.Provider}}.box&#34;,
      &#34;vagrantfile_template&#34;: &#34;vagrantfile-windows_7.template&#34;
    }
  ]
}&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;If it feels daunting, don&amp;#8217;t worry. You&amp;#8217;ll get used to it fairly quickly. Let&amp;#8217;s go over section by section on what this does.&lt;/p&gt;

&lt;h4 id=&#34;builders:f5491ddf470c8b3b2c7d93c66ee59189&#34;&gt;Builders&lt;/h4&gt;

&lt;p&gt;Packer uses builders for, well, building stuff. These two builders are virtualbox and vmware. I&amp;#8217;m only interested in virtualbox. This builder downloads win7 and sets up some virtual box details like, disk size, vagrant user, memory, and so and so forth. The interesting part is the floppy part. Here, we can add in some files for setup. We will use this part later on.&lt;/p&gt;

&lt;h4 id=&#34;provisioners:f5491ddf470c8b3b2c7d93c66ee59189&#34;&gt;Provisioners&lt;/h4&gt;

&lt;p&gt;Now here is an interesting tid-bit. There are a bunch of provisioners available as plugin for packer.Â Installing them is fairly easy. Packer needs binary plugins. Just copy them into ~/.packer.d/plugins or directly into the packer home directly. I&amp;#8217;d advice against that. Have them in your own packer.d, that&amp;#8217;s much cleaner. For binary plugin releases in the Windows side, look here =&amp;gt;Â &lt;a href=&#34;https://github.com/packer-community/packer-windows-plugins/releases&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://github.com/packer-community/packer-windows-plugins/releases&#34;&gt;https://github.com/packer-community/packer-windows-plugins/releases&lt;/a&gt;&lt;/a&gt;. If you would like to build them yourself from source, download the source and use go gcc to build it. You will have to &lt;strong&gt;go get&lt;/strong&gt; a few packages though. Also you will have to have &lt;strong&gt;$GOPATH&lt;/strong&gt;Â (pointing to your own workspace) and &lt;strong&gt;$GOROOT&lt;/strong&gt; (pointing to your working go)Â setup. But this is not a Go guide. After that just do &lt;strong&gt;go build main.goÂ &lt;/strong&gt;and you have your plugin.&lt;/p&gt;

&lt;p&gt;Provisioners are like vagrant provision they will execute post setup stuff on your box. Like installing utils, 7zip, choco, nuget, and so and so forth. There are a few interesting Windows provisioners, like restart-windows, powershell, and Windows shell. Which is like shell, but without the need of pre-setup if you are trying to use it on Windows. The basic shell on Windows is a little clanky and can hang from time-to-time so I recommend using PowerShell or WindowsShell provisioner if you are dealing with Windows post-setup Setup.&lt;/p&gt;

&lt;h4 id=&#34;post-processor:f5491ddf470c8b3b2c7d93c66ee59189&#34;&gt;Post-Processor&lt;/h4&gt;

&lt;p&gt;This will create the Vagrant box after everything is done.&lt;/p&gt;

&lt;h4 id=&#34;running-the-update:f5491ddf470c8b3b2c7d93c66ee59189&#34;&gt;Running the Update&lt;/h4&gt;

&lt;p&gt;For use, two things are interesting from here at this moment. These guys =&amp;gt;&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;json&#34; style=&#34;font-family:monospace;&#34;&gt;        &#34;./scripts/microsoft-updates.bat&#34;,
        &#34;./scripts/win-updates.ps1&#34;,&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;These two contain most of the logic which is part of the update process. You should see it in your checked out source. There is some very interesting logic in there which describes how the update happens. Basically it&amp;#8217;s a loop which re-checks if there are updates available or if a re-start is needed. Packer handles re-starts well at this point in the install because it simply waits for SSH to come only. The rest is handled by Windows.&lt;/p&gt;

&lt;p&gt;These scripts are called in the Answer File which the Windows Setup uses for configuration purposes. Take a look at this section:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;xml&#34; style=&#34;font-family:monospace;&#34;&gt;                &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;SynchronousCommand&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;wcm:action&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;add&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;CommandLine&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;cmd.exe /c a:\microsoft-updates.bat&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/CommandLine&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;Order&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;98&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/Order&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;Description&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;Enable Microsoft Updates&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/Description&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
                &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/SynchronousCommand&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
                &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;SynchronousCommand&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;wcm:action&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;add&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;CommandLine&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;cmd.exe /c C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -File a:\win-updates.ps1 -MaxUpdatesPerCycle 30&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/CommandLine&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;Description&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;Install Windows Updates&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/Description&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;Order&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;100&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/Order&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;RequiresUserInput&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;true&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/RequiresUserInput&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
                &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/SynchronousCommand&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;This is were the floppy part comes on handy. This part uses the scripts bound by floppy and which will be available from a:.&lt;/p&gt;

&lt;p&gt;This will install all the updates available. It will take a while. A very very long while&amp;#8230; But let&amp;#8217;s go a step further.&lt;/p&gt;

&lt;h1 id=&#34;example-2-installing-dotnet-4-5:f5491ddf470c8b3b2c7d93c66ee59189&#34;&gt;Example #2: Installing DotNet 4.5&lt;/h1&gt;

&lt;p&gt;Let&amp;#8217;s assume you want to create a box with visual studio 2013, office, and have choco on it, and a couple of more things for which you need lots of restarts. You could try installing with /norestart switch, which also works; howeverÂ if you definitely need it to restart I suggest installing stuff with the Answer File. For this, let&amp;#8217;s create a PowerShell script which downloads and installs dotnet 451 which is needed for visual studio ultimate 2013.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;powershell&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #800080;&#34;&gt;$Logfile&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;C:\Windows\Temp\dotnet-install.log&#34;&lt;/span&gt;
&lt;span style=&#34;color: #0000FF;&#34;&gt;function&lt;/span&gt; LogWrite &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
   &lt;span style=&#34;color: #0000FF;&#34;&gt;Param&lt;/span&gt; &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&#34;color: #008080;&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#93;&lt;/span&gt;&lt;span style=&#34;color: #800080;&#34;&gt;$logstring&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
   &lt;span style=&#34;color: #800080;&#34;&gt;$now&lt;/span&gt; &lt;span style=&#34;color: pink;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Get-Date&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-format&lt;/span&gt; s
   &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Add-Content&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$Logfile&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-value&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;$now $logstring&#34;&lt;/span&gt;
   &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Write-Host&lt;/span&gt; &lt;span style=&#34;color: #800080;&#34;&gt;$logstring&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Downlading dotNetFx40_Full_x86_x64.&#34;&lt;/span&gt;
try &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;New-Object&lt;/span&gt; System.Net.WebClient&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;.DownloadFile&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #800000;&#34;&gt;&#39;http://download.microsoft.com/download/1/6/7/167F0D79-9317-48AE-AEDB-17120579F8E2/NDP451-KB2858728-x86-x64-AllOS-ENU.exe&#39;&lt;/span&gt;&lt;span style=&#34;color: pink;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#39;C:\Windows\Temp\dotnet.exe&#39;&lt;/span&gt;&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#41;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt; catch &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.Exception &lt;span style=&#34;color: pink;&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Format-List&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-force&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Failed to download file.&#34;&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Starting installation process...&#34;&lt;/span&gt;
try &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    Start&lt;span style=&#34;color: pink;&#34;&gt;-&lt;/span&gt;Process &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-FilePath&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;C:\Windows\Temp\dotnet.exe&#34;&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-ArgumentList&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;/I /q /norestart&#34;&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-Wait&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-PassThru&lt;/span&gt;
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt; catch &lt;span style=&#34;color: #000000;&#34;&gt;&amp;#123;&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #000080;&#34;&gt;$_&lt;/span&gt;.Exception &lt;span style=&#34;color: pink;&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #008080; font-weight: bold;&#34;&gt;Format-List&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-force&lt;/span&gt;
    LogWrite &lt;span style=&#34;color: #800000;&#34;&gt;&#34;Exception during install process.&#34;&lt;/span&gt;    
&lt;span style=&#34;color: #000000;&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;So this downloads it right from the source. As mentioned earlier, you could have this on a nice shared drive so downloading from the internet is not necessary. The installer is in fact a bit friendly. It has a switch called /q /norestart. The /q is called silent install and the /norestart speaks for itself. If you leave it out, you can use /forcerestart or you could have the following two lines after this finishes:Â &lt;em&gt;LogWrite &amp;#8220;Resarting Computer.&amp;#8221;Â Restart-Computer -Force&lt;/em&gt;. This will force a restart. You need the -Force because otherwise it won&amp;#8217;t let it restart while there are active sessions logged on the computer.&lt;/p&gt;

&lt;p&gt;Now, let&amp;#8217;s add this to the answer file:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;xml&#34; style=&#34;font-family:monospace;&#34;&gt;                &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;SynchronousCommand&lt;/span&gt; &lt;span style=&#34;color: #000066;&#34;&gt;wcm:action&lt;/span&gt;=&lt;span style=&#34;color: #ff0000;&#34;&gt;&#34;add&#34;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;CommandLine&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;cmd.exe /c C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -File a:\install-dotnet-451.ps1 -AutoStart&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/CommandLine&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;Order&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;98&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/Order&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
                    &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;Description&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;Install DotNet 4.5.1.&lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/Description&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
                &lt;span style=&#34;color: #009900;&#34;&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;lt;/SynchronousCommand&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;See, how easy this is? And now we make use of the floppy part of the windows-7.json by adding this line: &lt;strong&gt;&amp;#8220;./scripts/install-dotnet-451.ps1&amp;#8221;&lt;/strong&gt;. Don&amp;#8217;t forget to append the &amp;#8220;,&amp;#8221; at the end of the previous line. This is an array.&lt;/p&gt;

&lt;p&gt;We are ready to go. Just run &lt;strong&gt;packer build -only=virtualbox-iso windows-7.json&lt;/strong&gt; and you should be done!&lt;/p&gt;

&lt;h1 id=&#34;example-3-installing-visual-studio-ultimate:f5491ddf470c8b3b2c7d93c66ee59189&#34;&gt;Example #3: Installing Visual Studio Ultimate&lt;/h1&gt;

&lt;p&gt;Installing visual studio is almost trivial as well. With the addition that visual studio requires an admin.xml for silent install which has a bunch of settings. When you have the admin.xml just bind it into the floppy drive as well and call the visual studio install powershell script like this:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;powershell&#34; style=&#34;font-family:monospace;&#34;&gt;    Start&lt;span style=&#34;color: pink;&#34;&gt;-&lt;/span&gt;Process &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-FilePath&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;C:\Windows\Temp\visualstudioultimate.exe&#34;&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-ArgumentList&lt;/span&gt; &lt;span style=&#34;color: #800000;&#34;&gt;&#34;/Quiet /NoRestart /admin a:\admin.xml&#34;&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-Wait&lt;/span&gt; &lt;span style=&#34;color: #008080; font-style: italic;&#34;&gt;-PassThru&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Again, this will take a while&amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;.&lt;/p&gt;

&lt;h1 id=&#34;post-setup-provisioning:f5491ddf470c8b3b2c7d93c66ee59189&#34;&gt;Post Setup Provisioning&lt;/h1&gt;

&lt;p&gt;When all this is done, you can still add some provisioning steps to add some utils with PowerShell or WindowsShell provisioner. I would advice against using simple shell. Bare in mind one other thing. If you have a batch file, and you are calling another batch file in that batch file, like choco install 7zip, it will happen that the install process will hang on installing 7zip. Because in Windows land the called script will not return the exec handler to the caller unless specifically asking for it with &lt;strong&gt;call&lt;/strong&gt;. Which means your bat file will look something like this:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;batch&#34; style=&#34;font-family:monospace;&#34;&gt;call choco install 7zip
call choco install notepadplusplus&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;batch&#34; style=&#34;font-family:monospace;&#34;&gt;cmd /c choco install 7zip
cmd /c choco install notepadplusplus&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;And so on, and so forth.&lt;/p&gt;

&lt;h1 id=&#34;wrap-up:f5491ddf470c8b3b2c7d93c66ee59189&#34;&gt;Wrap-Up&lt;/h1&gt;

&lt;p&gt;So, what have we learned? We have learned that installing software which requires re-start is better left to Windows itself with an answer file. Batch files will not return the handler. SSH &lt;strong&gt;MUST&lt;/strong&gt; be the last thing you start up in the answer file. Use PowerShell provisioner or WindowsShell provisioner on Windows.&lt;/p&gt;

&lt;p&gt;Hope this helped.&lt;/p&gt;

&lt;p&gt;Happy installing, and as always,&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why Lock Picking is like Testing</title>
      <link>https://skarlso.github.io/2015/02/08/why-lock-picking-is-like-testing/</link>
      <pubDate>Sun, 08 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2015/02/08/why-lock-picking-is-like-testing/</guid>
      <description>

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Not a great many people know that I&amp;#8217;m actually into Lock Picking as a hobby. This will not be a tutorial on how to do it, or I won&amp;#8217;t really talk about how I do it; I would like toÂ write about something completely different. So if you came here for that, here are a few very good resources:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.lockpicking101.com/%20&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.lockpicking101.com/&#34;&gt;http://www.lockpicking101.com/&lt;/a&gt; &lt;/a&gt;&amp;#8211; Tutorials&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.ukbumpkeys.com/collections/lock-picking&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.ukbumpkeys.com/collections/lock-picking&#34;&gt;http://www.ukbumpkeys.com/collections/lock-picking&lt;/a&gt;&lt;/a&gt; &amp;#8211; Tools ( UK )&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.reddit.com/r/lockpicking/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.reddit.com/r/lockpicking/&#34;&gt;http://www.reddit.com/r/lockpicking/&lt;/a&gt;&lt;/a&gt; &amp;#8211; Reddit&lt;/p&gt;

&lt;p&gt;For my post, click on&amp;#8230;&lt;/p&gt;

&lt;p&gt;So, why is lock picking like testing? I saw a great many posts which where trying to compare software testing to some activity. I even knew somebody who compared it to dancing. Because&amp;#8230;? I don&amp;#8217;t know, maybe he was trying out a talk material maybe? And he said &amp;#8211; &amp;#8220;I was in this club and watched a couple dance, and I was thinking, wow, this is like software testing.&amp;#8221; &amp;#8211; I couldn&amp;#8217;t really react to that. But hey, kudos for out of the box thinking I guess.&lt;/p&gt;

&lt;p&gt;But let&amp;#8217;s see some of the similarities in picking and testing:&lt;/p&gt;

&lt;h4 id=&#34;thinking:6511026dbafeb039d1c895bd844bde2a&#34;&gt;Thinking&lt;/h4&gt;

&lt;p&gt;It requires logical, critical thinking. It&amp;#8217;s a puzzle that you have to solve. A puzzle which you basically solve by testing out solutions and see if they work. You can achieve this by trial and error, something testers face on a daily basis. After awhile you acquire something called finesse. Which will help you identify breaking points more easily. Since you have experience with a certain lock type, you already have a wast knowledge to rely on when you are trying to solve a new lock with the same build. You did your research you know its weaknesses hence you immediately have an attack vector on your hand.&lt;/p&gt;

&lt;h4 id=&#34;tools:6511026dbafeb039d1c895bd844bde2a&#34;&gt;Tools&lt;/h4&gt;

&lt;p&gt;Lock picking has a wast number of tools. Each tool is design for a specific purpose. You can reuse tools but they are rarely a fit for other locks. Unless it&amp;#8217;s a similar one. There are delicate tools and then there are brute force tools, which are very hard to use at first but after you get used to it and know how to handle it, it becomesÂ massively helpful. You can build your own tools or use tools that are built for you by tool experts.&lt;/p&gt;

&lt;h4 id=&#34;solving-process:6511026dbafeb039d1c895bd844bde2a&#34;&gt;Solving Process&lt;/h4&gt;

&lt;p&gt;When can you test an application to its fullest extend and capabilities? How can you achieve the most and best testing ever possible? You have to know how the application works. You have to know its components, its abilities, its capabilities andÂ &lt;strong&gt;limits.Â &lt;/strong&gt;For Lock Picking to be the best at what you do and to be able to move to a completely new lock and try to pick it, you have to know its flaws. You have to know when, and how it was built. You have to know what makes it tick, how it works, what it uses, how the inside mechanics look like in order to try to exploit them.&lt;/p&gt;

&lt;p&gt;After you acquire this knowledge you will be able to build, or purchase a tool which will help you in solving the puzzle. But you were only able to do that because after you researched its manufacturing procedure you know that the last pin is hard to get to and that it hasÂ an anti drilling shield, so drilling is out of the question, and that it has a safety spring which locks the lock permanently upon tampering.Â If you would not be in the possession of this information you could have made a fatal error and could have made the client lost money ( since at that point they pretty much need to break down the door, unless the key is found again ( assuming the picking took place because the key was lost ) ).&lt;/p&gt;

&lt;h4 id=&#34;last-words:6511026dbafeb039d1c895bd844bde2a&#34;&gt;Last Words&lt;/h4&gt;

&lt;p&gt;There you have it folks. That&amp;#8217;s why Lock Picking is like software testing. Knowing structure, inside workings and the proper tools will help to achieve your goal. Just like in testing when you know your field, you know what to use, when, and how. &lt;strong&gt;Knowledge&lt;/strong&gt; makes you the Best.&lt;/p&gt;

&lt;p&gt;Good luck,&lt;/p&gt;

&lt;p&gt;Happy Picking,&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example when to use the Strategy Pattern</title>
      <link>https://skarlso.github.io/2014/02/19/example-when-to-use-the-strategy-pattern/</link>
      <pubDate>Wed, 19 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2014/02/19/example-when-to-use-the-strategy-pattern/</guid>
      <description>&lt;p&gt;Hello folks.&lt;/p&gt;

&lt;p&gt;A quick post about an interesting idea.&lt;/p&gt;

&lt;p&gt;I want to elaborate on a possibility to use the Strategy Design pattern.&lt;/p&gt;

&lt;p&gt;There are many clues that you need one. One is for example if your object has a boolean variable which you use a lot in other classes to determine behavior. Then there is perhaps time to implement a Strategy.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;java&#34; style=&#34;font-family:monospace;&#34;&gt;   &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;class&lt;/span&gt; SomeClass &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #000066; font-weight: bold;&#34;&gt;boolean&lt;/span&gt; stateChange &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000066; font-weight: bold;&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;public&lt;/span&gt; SomeClass &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;stateChange&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
            &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color: #006633;&#34;&gt;stateChange&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; stateChange&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; 
        &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #000066; font-weight: bold;&#34;&gt;boolean&lt;/span&gt; getStateChange&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
            &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;return&lt;/span&gt; stateChange&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;class&lt;/span&gt; SomeUserClass &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;private&lt;/span&gt; SomeClass foo&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;public&lt;/span&gt; SomeUserClass&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
            foo &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;new&lt;/span&gt; SomeClass&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #003399;&#34;&gt;String&lt;/span&gt; someMethod&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
            &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;foo.&lt;span style=&#34;color: #006633;&#34;&gt;getStateChange&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
                &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;&#34;Some string&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
                &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;&#34;Some string else&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;class&lt;/span&gt; SomeOtherUserClass &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;private&lt;/span&gt; SomeClass foo&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;public&lt;/span&gt; SomeOtherUserClass&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
            foo &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;new&lt;/span&gt; SomeClass&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #003399;&#34;&gt;String&lt;/span&gt; someMethodTwo&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
            &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;foo.&lt;span style=&#34;color: #006633;&#34;&gt;getStateChange&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
                &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;&#34;Some string&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
                &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;&#34;Some string else&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
            &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;So you have two classes which do something based on some boolean coming from a class. So what you can do in this case, simply extract out that change in state.&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;java&#34; style=&#34;font-family:monospace;&#34;&gt;&amp;nbsp;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;class&lt;/span&gt; Foo &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;implements&lt;/span&gt; Base &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #003399;&#34;&gt;String&lt;/span&gt; getMyString&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
            &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;&#34;Some string&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;class&lt;/span&gt; Bar &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;implements&lt;/span&gt; Base &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #003399;&#34;&gt;String&lt;/span&gt; getMyString&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
            &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;&#34;Some string else&#34;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;interface&lt;/span&gt; Base &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
        &lt;span style=&#34;color: #003399;&#34;&gt;String&lt;/span&gt; getMyString&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;class&lt;/span&gt; FooStrategy &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;static&lt;/span&gt; Base getMeAClass&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;enum&lt;/span&gt; classChooser&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
            &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;switch&lt;/span&gt; classChooser &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
                &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;case&lt;/span&gt; classChooser.&lt;span style=&#34;color: #006633;&#34;&gt;FOO&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;new&lt;/span&gt; Foo&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
                &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;case&lt;/span&gt; classChooser.&lt;span style=&#34;color: #006633;&#34;&gt;BAR&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;new&lt;/span&gt; Bar&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
                &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color: #339933;&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #000066; font-weight: bold;&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//yeah yeah I know but I&#39;m writing this in notepad... :)&lt;/span&gt;
            &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;class&lt;/span&gt; SomeUserClass &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;private&lt;/span&gt; Base foo&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;public&lt;/span&gt; SomeUserClass&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
            foo &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; FooStrategy.&lt;span style=&#34;color: #006633;&#34;&gt;getMeAClass&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;ClassChooser.&lt;span style=&#34;color: #006633;&#34;&gt;FOO&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #003399;&#34;&gt;String&lt;/span&gt; someMethod&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
            &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;return&lt;/span&gt; foo.&lt;span style=&#34;color: #006633;&#34;&gt;getMyString&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;class&lt;/span&gt; SomeOtherUserClass &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;private&lt;/span&gt; Base bar&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;public&lt;/span&gt; SomeUserClass&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
            bar &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; FooStrategy.&lt;span style=&#34;color: #006633;&#34;&gt;getMeAClass&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;ClassChooser.&lt;span style=&#34;color: #006633;&#34;&gt;BAR&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #003399;&#34;&gt;String&lt;/span&gt; someMethod&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
            &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;return&lt;/span&gt; bar.&lt;span style=&#34;color: #006633;&#34;&gt;getMyString&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Now I know this looks like a lot of more code. However imagine this on a much larger scale with lots of implementations for Foo and Bar. Your if statements will get very convulated very quickly. This way you abstract away the choice into a Factory. And you can add as many implementations of Base as you like with as many variants as you like without changing the logic anywhere else but the Factory and the Enum. And the Enum could be a Configuration file and you do something like this:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;java&#34; style=&#34;font-family:monospace;&#34;&gt;   &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;static&lt;/span&gt; Base getMeAClass&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #003399;&#34;&gt;String&lt;/span&gt; className&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#123;&lt;/span&gt;
        &lt;span style=&#34;color: #666666; font-style: italic;&#34;&gt;//Where className could be coming from a configuration file&lt;/span&gt;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;Class&lt;/span&gt; clazz &lt;span style=&#34;color: #339933;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;Class&lt;/span&gt;.&lt;span style=&#34;color: #006633;&#34;&gt;forName&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;className&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color: #000000; font-weight: bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;Base&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt; clazz.&lt;span style=&#34;color: #006633;&#34;&gt;newInstance&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #009900;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: #339933;&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #009900;&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;This way you don&amp;#8217;t even need the Enum anymore. Just use some configuration to determine what class you need at which point in your implementation without using an If statement at all.&lt;/p&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;

&lt;p&gt;I whipped this up from memory so please feel free to tell me if I missed something or have a syntax error in there somewhere&amp;#8230; &lt;img src=&#34;http://ramblingsofaswtester.com/wp-includes/images/smilies/simple-smile.png&#34; alt=&#34;:)&#34; class=&#34;wp-smiley&#34; style=&#34;height: 1em; max-height: 1em;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;As always,&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to check content header on unknown number of items â€“ Python</title>
      <link>https://skarlso.github.io/2014/02/11/how-to-check-content-header-on-unknown-number-of-items-python/</link>
      <pubDate>Tue, 11 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2014/02/11/how-to-check-content-header-on-unknown-number-of-items-python/</guid>
      <description>&lt;p&gt;Hello guys.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;d like to share a little something with you. It&amp;#8217;s what I cooked up in Python to check an unknown number of content items in a web application.&lt;/p&gt;

&lt;p&gt;Basically the script runs from a script folder under Grails. It goes through all the configured folders where there is static content like images, javascript, css and so on and so forth.&lt;/p&gt;

&lt;p&gt;And then with curl it calls these items up in using their respective paths&amp;#8217;. This works best on localhost if you have your local environment configured to access these elements because in some places direct access is restricted.&lt;/p&gt;

&lt;p&gt;This script only check static content. Dynamically generated content would have to be hard coded to check.&lt;/p&gt;

&lt;p&gt;It only generated a file currently with ERROR on a not match an success on match and not found if it encounters an item which it doesn&amp;#8217;t know about.&lt;/p&gt;

&lt;p&gt;So without further ado&amp;#8230; The Script:&lt;/p&gt;

&lt;div class=&#34;wp_syntax&#34;&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td class=&#34;code&#34;&gt;
        &lt;pre class=&#34;python&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;#!/usr/bin/python&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;import&lt;/span&gt; pycurl&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;sys&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;os&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;urllib&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;class&lt;/span&gt; Storage:
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000cd;&#34;&gt;__init__&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008000;&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
        &lt;span style=&#34;color: #008000;&#34;&gt;self&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;contents&lt;/span&gt; &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;&#39;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;def&lt;/span&gt; store&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008000;&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; buf&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;Content-Type&#39;&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;in&lt;/span&gt; buf:
            &lt;span style=&#34;color: #008000;&#34;&gt;self&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;contents&lt;/span&gt; &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; buf
&amp;nbsp;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000cd;&#34;&gt;__str__&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #008000;&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
        &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #008000;&#34;&gt;self&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;contents&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;#print retrieved_headers&lt;/span&gt;
&amp;nbsp;
filesInDir &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: black;&#34;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#93;&lt;/span&gt;
headers &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: black;&#34;&gt;&amp;#91;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#93;&lt;/span&gt;
headerRestrictions &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: black;&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;.css&#39;&lt;/span&gt;: &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;Content-Type: text/css&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;.jpg&#39;&lt;/span&gt;: &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;Content-Type: image/jpeg&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;.ico&#39;&lt;/span&gt;: &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;image/vnd.microsoft.icon&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;.html&#39;&lt;/span&gt;: &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;Content-Type: text/html&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;.js&#39;&lt;/span&gt;: &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;Content-Type: application/javascript&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;.gif&#39;&lt;/span&gt;: &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;Content-Type: image/gif&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;.png&#39;&lt;/span&gt;: &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;Content-Type: image/png&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;.swf&#39;&lt;/span&gt;: &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;Content-Type: application/x-shockwave-flash&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;.json&#39;&lt;/span&gt;: &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;Content-Type: application/json&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;.htc&#39;&lt;/span&gt;: &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;Content-Type: text/x-component&#39;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;.xml&#39;&lt;/span&gt;: &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;Content-Type: application/xml&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#125;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;for&lt;/span&gt; dirname&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; dirnames&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; filenames &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;walk&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;../web-app&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
    &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# editing the &#39;dirnames&#39; list will stop os.walk() from recursing into there.&lt;/span&gt;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;.git&#39;&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;in&lt;/span&gt; dirnames:
        &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# don&#39;t go into any .git directories.&lt;/span&gt;
        dirnames.&lt;span style=&#34;color: black;&#34;&gt;remove&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;.git&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;WEB-INF&#39;&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;in&lt;/span&gt; dirnames:
        &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# don&#39;t go into any WEB-INF directories.&lt;/span&gt;
        dirnames.&lt;span style=&#34;color: black;&#34;&gt;remove&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;WEB-INF&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;test&#39;&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;in&lt;/span&gt; dirnames:
        &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# don&#39;t go into any test directories.&lt;/span&gt;
        dirnames.&lt;span style=&#34;color: black;&#34;&gt;remove&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;META-INF&#39;&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;in&lt;/span&gt; dirnames:
        &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# don&#39;t go into any META-INF directories.&lt;/span&gt;
        dirnames.&lt;span style=&#34;color: black;&#34;&gt;remove&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;META-INF&#39;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;for&lt;/span&gt; filename &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;in&lt;/span&gt; filenames:
    trimmedDir &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; dirname.&lt;span style=&#34;color: black;&#34;&gt;replace&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;web-app/&#34;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    trimmedDir &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; trimmedDir.&lt;span style=&#34;color: black;&#34;&gt;replace&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;../&#34;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    filesInDir.&lt;span style=&#34;color: black;&#34;&gt;append&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #dc143c;&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;path&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;join&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;trimmedDir&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; filename&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;#    print os.path.join(dirname, filename)&lt;/span&gt;
&amp;nbsp;
f &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008000;&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;headersandfiles.txt&#34;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;w&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
&lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;for&lt;/span&gt; fileName &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;in&lt;/span&gt; filesInDir:
    retrieved_body &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; Storage&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    retrieved_headers &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; Storage&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    c &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; pycurl.&lt;span style=&#34;color: black;&#34;&gt;Curl&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    fileName &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; fileName.&lt;span style=&#34;color: black;&#34;&gt;replace&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: #483d8b;&#34;&gt;&#34; &#34;&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;%20&#34;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    url &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#39;http://localhost:8080/%s&#39;&lt;/span&gt; % fileName
    c.&lt;span style=&#34;color: black;&#34;&gt;setopt&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;c.&lt;span style=&#34;color: black;&#34;&gt;URL&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; url&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    c.&lt;span style=&#34;color: black;&#34;&gt;setopt&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;c.&lt;span style=&#34;color: black;&#34;&gt;WRITEFUNCTION&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; retrieved_body.&lt;span style=&#34;color: black;&#34;&gt;store&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    c.&lt;span style=&#34;color: black;&#34;&gt;setopt&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;c.&lt;span style=&#34;color: black;&#34;&gt;HEADERFUNCTION&lt;/span&gt;&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; retrieved_headers.&lt;span style=&#34;color: black;&#34;&gt;store&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    c.&lt;span style=&#34;color: black;&#34;&gt;perform&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    c.&lt;span style=&#34;color: black;&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    fileLine &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;&#34;&lt;/span&gt;
    fileNameBase&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; fileExtension &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #dc143c;&#34;&gt;os&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;path&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;splitext&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;fileName&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;if&lt;/span&gt; headerRestrictions.&lt;span style=&#34;color: black;&#34;&gt;has_key&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;fileExtension&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;:
&lt;span style=&#34;color: #808080; font-style: italic;&#34;&gt;# print &#34;Header:%s, Content:%s&#34; % (headerRestrictions[fileExtension], retrieved_headers.__str__())&lt;/span&gt;
        fileLine &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;CORRECT: Content: %s; Header: %s&#34;&lt;/span&gt; % &lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;fileName&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; retrieved_headers&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;if&lt;/span&gt; headerRestrictions&lt;span style=&#34;color: black;&#34;&gt;&amp;#91;&lt;/span&gt;fileExtension&lt;span style=&#34;color: black;&#34;&gt;&amp;#93;&lt;/span&gt; &lt;span style=&#34;color: #66cc66;&#34;&gt;==&lt;/span&gt; retrieved_headers.&lt;span style=&#34;color: #0000cd;&#34;&gt;__str__&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;.&lt;span style=&#34;color: black;&#34;&gt;strip&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt; &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;ERROR: Content: %s; Header: %s; URL: %s&#34;&lt;/span&gt; % &lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;fileName&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; retrieved_headers&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;http://localhost:8080/%s&lt;span style=&#34;color: #000099; font-weight: bold;&#34;&gt;\n&lt;/span&gt;&#34;&lt;/span&gt; % fileName&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    &lt;span style=&#34;color: #ff7700;font-weight:bold;&#34;&gt;else&lt;/span&gt;:
    fileLine &lt;span style=&#34;color: #66cc66;&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;&#34;NOT FOUND: Content: %s; Header: %s&#34;&lt;/span&gt; % &lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;fileName&lt;span style=&#34;color: #66cc66;&#34;&gt;,&lt;/span&gt; retrieved_headers&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
    f.&lt;span style=&#34;color: black;&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;fileLine&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
    headers.&lt;span style=&#34;color: black;&#34;&gt;append&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;retrieved_headers.&lt;span style=&#34;color: #0000cd;&#34;&gt;__str__&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;
&amp;nbsp;
f.&lt;span style=&#34;color: black;&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#40;&lt;/span&gt;&lt;span style=&#34;color: black;&#34;&gt;&amp;#41;&lt;/span&gt;&lt;/pre&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Hope you like it. Feel free to improve however you want.&lt;/p&gt;

&lt;p&gt;Thanks for reading,&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why does it matter if I sit in an office or in a park</title>
      <link>https://skarlso.github.io/2014/02/09/why-does-it-matter-if-i-sit-in-an-office-or-in-a-park/</link>
      <pubDate>Sun, 09 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://skarlso.github.io/2014/02/09/why-does-it-matter-if-i-sit-in-an-office-or-in-a-park/</guid>
      <description>&lt;p&gt;Hello everybody.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;d like to explain a lot about a topic that is very near my heart. If your job is in an office you will understand this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why offices?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So why are we sitting together in one big place cramped up with 20-300 other people? Why bother the catering and the ventilation and what not to accommodate these people at one place? Why not just leave them be and let them work at home?&lt;/p&gt;

&lt;p&gt;If your job involves interaction than you are in bad luck. You need to be there to talk to people to coordinate your work to gather information and to generally do your work.&lt;/p&gt;

&lt;p&gt;But this doesn&amp;#8217;t answer the question&amp;#8230;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why does it matter if I&amp;#8217;m in the office or not if my work is done?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That&amp;#8217;s my big question. Why must I sit in the office if my work is done and in a good shape and good quality? Why must I go in and do my job there if at home I&amp;#8217;m 50% more efficient because I&amp;#8217;m in my underwear? In fact, why bother going into and environment where I don&amp;#8217;t feel comfortable. Where I must go into an office which is cold and doesn&amp;#8217;t have my favourite chair, my desk and loud heavy metal from speakers.&lt;/p&gt;

&lt;p&gt;Well there are couple of things&amp;#8230;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Interaction&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So like I said earlier there is that. Interaction. You need to collaborate with others. You need to do pair programming, you need to talk to the business analysts, testers, colleagues what nots. In that case, having an environment where everybody is at your disposal is pretty neat and necessary. It cannot be avoided.&lt;/p&gt;

&lt;p&gt;Unless everybody is on Skype and available all the time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Separation of Concern&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There is a Design Pattern in software engineering called Separation of Concern. This applies to work places as well. You don&amp;#8217;t live where you work generally because living could distract working. There are tons and tons of books about how you need a separated environment if you are a writing and you write at home. Because there are too many distractions. And if you are not disciplined enough you will get Zero work done. You will always find something better to do.&lt;/p&gt;

&lt;p&gt;That&amp;#8217;s why the physical act of going to work will switch your brain into work mode and lets you focus better. Whilst going home should do the opposite thing. You should leave work at work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Show &amp;#8220;our&amp;#8221; strength&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Generally big companies like to show off. For a company as big as Microsoft or IBM for example it&amp;#8217;s actually not the product that matters on the market but the yearly growth of employees. Hence, strength in numbers.&lt;/p&gt;

&lt;p&gt;Now if some investors get around and want to check out the company they like to see the buzzing bees. They like to see people working, sitting, typing away at stuff. It&amp;#8217;s all about appearances. A strong, cramped office full of people looks like a very busy hard working company.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Companies could be a bit more flexible though&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If I work from 6AM to 3PM because my daughter has a show at 5PM I want to go though I would like to be able to do that without having to go through too much trouble.&lt;/p&gt;

&lt;p&gt;Or if I would like to work tomorrow and today I have better things to do, then why not, if my work is done?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Abuse&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;But then, people are people. Most of them will use every opportunity to slack off. Hence the general perception is that if you are at home you are not working. So to be better able to monitor you, all of the employees must be in one place.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Last words&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So really there needs to be a better agreement between both sides. Workers need to be honest and diligent. And workplaces need to be more flexible and understanding as long as the job is done. Because people will work a LOT better and more efficient if they are HAPPY in their work environment.&lt;/p&gt;

&lt;p&gt;That&amp;#8217;s what I&amp;#8217;m proposing.&lt;/p&gt;

&lt;p&gt;As ever,&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;p&gt;Have a nice day.&lt;/p&gt;

&lt;p&gt;Gergely.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>